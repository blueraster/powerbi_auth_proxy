/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanM/YmMzYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyxzREFBYSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/index.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL3hoci5qcz9iNTBkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTtBQUNoQyxhQUFhLG1CQUFPLENBQUMsaUVBQWtCO0FBQ3ZDLGVBQWUsbUJBQU8sQ0FBQywyRUFBdUI7QUFDOUMsb0JBQW9CLG1CQUFPLENBQUMsNkVBQXVCO0FBQ25ELG1CQUFtQixtQkFBTyxDQUFDLG1GQUEyQjtBQUN0RCxzQkFBc0IsbUJBQU8sQ0FBQyx5RkFBOEI7QUFDNUQsa0JBQWtCLG1CQUFPLENBQUMseUVBQXFCOztBQUUvQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRDQUE0QztBQUM1Qzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyx5RUFBc0I7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9hZGFwdGVycy94aHIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBidWlsZEZ1bGxQYXRoID0gcmVxdWlyZSgnLi4vY29yZS9idWlsZEZ1bGxQYXRoJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgICBpZiAoY29uZmlnLmF1dGgpIHtcbiAgICAgIHZhciB1c2VybmFtZSA9IGNvbmZpZy5hdXRoLnVzZXJuYW1lIHx8ICcnO1xuICAgICAgdmFyIHBhc3N3b3JkID0gY29uZmlnLmF1dGgucGFzc3dvcmQgfHwgJyc7XG4gICAgICByZXF1ZXN0SGVhZGVycy5BdXRob3JpemF0aW9uID0gJ0Jhc2ljICcgKyBidG9hKHVzZXJuYW1lICsgJzonICsgcGFzc3dvcmQpO1xuICAgIH1cblxuICAgIHZhciBmdWxsUGF0aCA9IGJ1aWxkRnVsbFBhdGgoY29uZmlnLmJhc2VVUkwsIGNvbmZpZy51cmwpO1xuICAgIHJlcXVlc3Qub3Blbihjb25maWcubWV0aG9kLnRvVXBwZXJDYXNlKCksIGJ1aWxkVVJMKGZ1bGxQYXRoLCBjb25maWcucGFyYW1zLCBjb25maWcucGFyYW1zU2VyaWFsaXplciksIHRydWUpO1xuXG4gICAgLy8gU2V0IHRoZSByZXF1ZXN0IHRpbWVvdXQgaW4gTVNcbiAgICByZXF1ZXN0LnRpbWVvdXQgPSBjb25maWcudGltZW91dDtcblxuICAgIC8vIExpc3RlbiBmb3IgcmVhZHkgc3RhdGVcbiAgICByZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUxvYWQoKSB7XG4gICAgICBpZiAoIXJlcXVlc3QgfHwgcmVxdWVzdC5yZWFkeVN0YXRlICE9PSA0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gVGhlIHJlcXVlc3QgZXJyb3JlZCBvdXQgYW5kIHdlIGRpZG4ndCBnZXQgYSByZXNwb25zZSwgdGhpcyB3aWxsIGJlXG4gICAgICAvLyBoYW5kbGVkIGJ5IG9uZXJyb3IgaW5zdGVhZFxuICAgICAgLy8gV2l0aCBvbmUgZXhjZXB0aW9uOiByZXF1ZXN0IHRoYXQgdXNpbmcgZmlsZTogcHJvdG9jb2wsIG1vc3QgYnJvd3NlcnNcbiAgICAgIC8vIHdpbGwgcmV0dXJuIHN0YXR1cyBhcyAwIGV2ZW4gdGhvdWdoIGl0J3MgYSBzdWNjZXNzZnVsIHJlcXVlc3RcbiAgICAgIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gMCAmJiAhKHJlcXVlc3QucmVzcG9uc2VVUkwgJiYgcmVxdWVzdC5yZXNwb25zZVVSTC5pbmRleE9mKCdmaWxlOicpID09PSAwKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFByZXBhcmUgdGhlIHJlc3BvbnNlXG4gICAgICB2YXIgcmVzcG9uc2VIZWFkZXJzID0gJ2dldEFsbFJlc3BvbnNlSGVhZGVycycgaW4gcmVxdWVzdCA/IHBhcnNlSGVhZGVycyhyZXF1ZXN0LmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSA6IG51bGw7XG4gICAgICB2YXIgcmVzcG9uc2VEYXRhID0gIWNvbmZpZy5yZXNwb25zZVR5cGUgfHwgY29uZmlnLnJlc3BvbnNlVHlwZSA9PT0gJ3RleHQnID8gcmVxdWVzdC5yZXNwb25zZVRleHQgOiByZXF1ZXN0LnJlc3BvbnNlO1xuICAgICAgdmFyIHJlc3BvbnNlID0ge1xuICAgICAgICBkYXRhOiByZXNwb25zZURhdGEsXG4gICAgICAgIHN0YXR1czogcmVxdWVzdC5zdGF0dXMsXG4gICAgICAgIHN0YXR1c1RleHQ6IHJlcXVlc3Quc3RhdHVzVGV4dCxcbiAgICAgICAgaGVhZGVyczogcmVzcG9uc2VIZWFkZXJzLFxuICAgICAgICBjb25maWc6IGNvbmZpZyxcbiAgICAgICAgcmVxdWVzdDogcmVxdWVzdFxuICAgICAgfTtcblxuICAgICAgc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgcmVzcG9uc2UpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGJyb3dzZXIgcmVxdWVzdCBjYW5jZWxsYXRpb24gKGFzIG9wcG9zZWQgdG8gYSBtYW51YWwgY2FuY2VsbGF0aW9uKVxuICAgIHJlcXVlc3Qub25hYm9ydCA9IGZ1bmN0aW9uIGhhbmRsZUFib3J0KCkge1xuICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKCdSZXF1ZXN0IGFib3J0ZWQnLCBjb25maWcsICdFQ09OTkFCT1JURUQnLCByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgbG93IGxldmVsIG5ldHdvcmsgZXJyb3JzXG4gICAgcmVxdWVzdC5vbmVycm9yID0gZnVuY3Rpb24gaGFuZGxlRXJyb3IoKSB7XG4gICAgICAvLyBSZWFsIGVycm9ycyBhcmUgaGlkZGVuIGZyb20gdXMgYnkgdGhlIGJyb3dzZXJcbiAgICAgIC8vIG9uZXJyb3Igc2hvdWxkIG9ubHkgZmlyZSBpZiBpdCdzIGEgbmV0d29yayBlcnJvclxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKCdOZXR3b3JrIEVycm9yJywgY29uZmlnLCBudWxsLCByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgdGltZW91dFxuICAgIHJlcXVlc3Qub250aW1lb3V0ID0gZnVuY3Rpb24gaGFuZGxlVGltZW91dCgpIHtcbiAgICAgIHZhciB0aW1lb3V0RXJyb3JNZXNzYWdlID0gJ3RpbWVvdXQgb2YgJyArIGNvbmZpZy50aW1lb3V0ICsgJ21zIGV4Y2VlZGVkJztcbiAgICAgIGlmIChjb25maWcudGltZW91dEVycm9yTWVzc2FnZSkge1xuICAgICAgICB0aW1lb3V0RXJyb3JNZXNzYWdlID0gY29uZmlnLnRpbWVvdXRFcnJvck1lc3NhZ2U7XG4gICAgICB9XG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IodGltZW91dEVycm9yTWVzc2FnZSwgY29uZmlnLCAnRUNPTk5BQk9SVEVEJyxcbiAgICAgICAgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gQWRkIHhzcmYgaGVhZGVyXG4gICAgLy8gVGhpcyBpcyBvbmx5IGRvbmUgaWYgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnQuXG4gICAgLy8gU3BlY2lmaWNhbGx5IG5vdCBpZiB3ZSdyZSBpbiBhIHdlYiB3b3JrZXIsIG9yIHJlYWN0LW5hdGl2ZS5cbiAgICBpZiAodXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSkge1xuICAgICAgdmFyIGNvb2tpZXMgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvY29va2llcycpO1xuXG4gICAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAgIHZhciB4c3JmVmFsdWUgPSAoY29uZmlnLndpdGhDcmVkZW50aWFscyB8fCBpc1VSTFNhbWVPcmlnaW4oZnVsbFBhdGgpKSAmJiBjb25maWcueHNyZkNvb2tpZU5hbWUgP1xuICAgICAgICBjb29raWVzLnJlYWQoY29uZmlnLnhzcmZDb29raWVOYW1lKSA6XG4gICAgICAgIHVuZGVmaW5lZDtcblxuICAgICAgaWYgKHhzcmZWYWx1ZSkge1xuICAgICAgICByZXF1ZXN0SGVhZGVyc1tjb25maWcueHNyZkhlYWRlck5hbWVdID0geHNyZlZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBoZWFkZXJzIHRvIHRoZSByZXF1ZXN0XG4gICAgaWYgKCdzZXRSZXF1ZXN0SGVhZGVyJyBpbiByZXF1ZXN0KSB7XG4gICAgICB1dGlscy5mb3JFYWNoKHJlcXVlc3RIZWFkZXJzLCBmdW5jdGlvbiBzZXRSZXF1ZXN0SGVhZGVyKHZhbCwga2V5KSB7XG4gICAgICAgIGlmICh0eXBlb2YgcmVxdWVzdERhdGEgPT09ICd1bmRlZmluZWQnICYmIGtleS50b0xvd2VyQ2FzZSgpID09PSAnY29udGVudC10eXBlJykge1xuICAgICAgICAgIC8vIFJlbW92ZSBDb250ZW50LVR5cGUgaWYgZGF0YSBpcyB1bmRlZmluZWRcbiAgICAgICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNba2V5XTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBPdGhlcndpc2UgYWRkIGhlYWRlciB0byB0aGUgcmVxdWVzdFxuICAgICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihrZXksIHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEFkZCB3aXRoQ3JlZGVudGlhbHMgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZy53aXRoQ3JlZGVudGlhbHMpKSB7XG4gICAgICByZXF1ZXN0LndpdGhDcmVkZW50aWFscyA9ICEhY29uZmlnLndpdGhDcmVkZW50aWFscztcbiAgICB9XG5cbiAgICAvLyBBZGQgcmVzcG9uc2VUeXBlIHRvIHJlcXVlc3QgaWYgbmVlZGVkXG4gICAgaWYgKGNvbmZpZy5yZXNwb25zZVR5cGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJlcXVlc3QucmVzcG9uc2VUeXBlID0gY29uZmlnLnJlc3BvbnNlVHlwZTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gRXhwZWN0ZWQgRE9NRXhjZXB0aW9uIHRocm93biBieSBicm93c2VycyBub3QgY29tcGF0aWJsZSBYTUxIdHRwUmVxdWVzdCBMZXZlbCAyLlxuICAgICAgICAvLyBCdXQsIHRoaXMgY2FuIGJlIHN1cHByZXNzZWQgZm9yICdqc29uJyB0eXBlIGFzIGl0IGNhbiBiZSBwYXJzZWQgYnkgZGVmYXVsdCAndHJhbnNmb3JtUmVzcG9uc2UnIGZ1bmN0aW9uLlxuICAgICAgICBpZiAoY29uZmlnLnJlc3BvbnNlVHlwZSAhPT0gJ2pzb24nKSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEhhbmRsZSBwcm9ncmVzcyBpZiBuZWVkZWRcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25Eb3dubG9hZFByb2dyZXNzKTtcbiAgICB9XG5cbiAgICAvLyBOb3QgYWxsIGJyb3dzZXJzIHN1cHBvcnQgdXBsb2FkIGV2ZW50c1xuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicgJiYgcmVxdWVzdC51cGxvYWQpIHtcbiAgICAgIHJlcXVlc3QudXBsb2FkLmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIGlmIChjb25maWcuY2FuY2VsVG9rZW4pIHtcbiAgICAgIC8vIEhhbmRsZSBjYW5jZWxsYXRpb25cbiAgICAgIGNvbmZpZy5jYW5jZWxUb2tlbi5wcm9taXNlLnRoZW4oZnVuY3Rpb24gb25DYW5jZWxlZChjYW5jZWwpIHtcbiAgICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVxdWVzdC5hYm9ydCgpO1xuICAgICAgICByZWplY3QoY2FuY2VsKTtcbiAgICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChyZXF1ZXN0RGF0YSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXF1ZXN0RGF0YSA9IG51bGw7XG4gICAgfVxuXG4gICAgLy8gU2VuZCB0aGUgcmVxdWVzdFxuICAgIHJlcXVlc3Quc2VuZChyZXF1ZXN0RGF0YSk7XG4gIH0pO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/adapters/xhr.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzP2NlZTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLGtEQUFTO0FBQzdCLFdBQVcsbUJBQU8sQ0FBQyxnRUFBZ0I7QUFDbkMsWUFBWSxtQkFBTyxDQUFDLDREQUFjO0FBQ2xDLGtCQUFrQixtQkFBTyxDQUFDLHdFQUFvQjtBQUM5QyxlQUFlLG1CQUFPLENBQUMsd0RBQVk7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZLE1BQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLGtFQUFpQjtBQUN4QyxvQkFBb0IsbUJBQU8sQ0FBQyw0RUFBc0I7QUFDbEQsaUJBQWlCLG1CQUFPLENBQUMsc0VBQW1COztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxvRUFBa0I7O0FBRXpDOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vY29yZS9tZXJnZUNvbmZpZycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuYXhpb3MuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gIHJldHVybiBjcmVhdGVJbnN0YW5jZShtZXJnZUNvbmZpZyhheGlvcy5kZWZhdWx0cywgaW5zdGFuY2VDb25maWcpKTtcbn07XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5heGlvcy5zcHJlYWQgPSByZXF1aXJlKCcuL2hlbHBlcnMvc3ByZWFkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/axios.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanM/N2E3NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQSBgQ2FuY2VsYCBpcyBhbiBvYmplY3QgdGhhdCBpcyB0aHJvd24gd2hlbiBhbiBvcGVyYXRpb24gaXMgY2FuY2VsZWQuXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge3N0cmluZz19IG1lc3NhZ2UgVGhlIG1lc3NhZ2UuXG4gKi9cbmZ1bmN0aW9uIENhbmNlbChtZXNzYWdlKSB7XG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG59XG5cbkNhbmNlbC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuICdDYW5jZWwnICsgKHRoaXMubWVzc2FnZSA/ICc6ICcgKyB0aGlzLm1lc3NhZ2UgOiAnJyk7XG59O1xuXG5DYW5jZWwucHJvdG90eXBlLl9fQ0FOQ0VMX18gPSB0cnVlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/Cancel.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcz84ZGY0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsbUJBQU8sQ0FBQywyREFBVTs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuL0NhbmNlbCcpO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBleGVjdXRvciBUaGUgZXhlY3V0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgcmVzb2x2ZVByb21pc2U7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIHByb21pc2VFeGVjdXRvcihyZXNvbHZlKSB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICB9KTtcblxuICB2YXIgdG9rZW4gPSB0aGlzO1xuICBleGVjdXRvcihmdW5jdGlvbiBjYW5jZWwobWVzc2FnZSkge1xuICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgIC8vIENhbmNlbGxhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHJlcXVlc3RlZFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRva2VuLnJlYXNvbiA9IG5ldyBDYW5jZWwobWVzc2FnZSk7XG4gICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgfSk7XG59XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnRocm93SWZSZXF1ZXN0ZWQgPSBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gKiBjYW5jZWxzIHRoZSBgQ2FuY2VsVG9rZW5gLlxuICovXG5DYW5jZWxUb2tlbi5zb3VyY2UgPSBmdW5jdGlvbiBzb3VyY2UoKSB7XG4gIHZhciBjYW5jZWw7XG4gIHZhciB0b2tlbiA9IG5ldyBDYW5jZWxUb2tlbihmdW5jdGlvbiBleGVjdXRvcihjKSB7XG4gICAgY2FuY2VsID0gYztcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdG9rZW46IHRva2VuLFxuICAgIGNhbmNlbDogY2FuY2VsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbFRva2VuO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/CancelToken.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcz8yZTY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQ2FuY2VsKHZhbHVlKSB7XG4gIHJldHVybiAhISh2YWx1ZSAmJiB2YWx1ZS5fX0NBTkNFTF9fKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/isCancel.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanM/MGEwNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7QUFDaEMsZUFBZSxtQkFBTyxDQUFDLHlFQUFxQjtBQUM1Qyx5QkFBeUIsbUJBQU8sQ0FBQyxpRkFBc0I7QUFDdkQsc0JBQXNCLG1CQUFPLENBQUMsMkVBQW1CO0FBQ2pELGtCQUFrQixtQkFBTyxDQUFDLG1FQUFlOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBidWlsZFVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBJbnRlcmNlcHRvck1hbmFnZXIgPSByZXF1aXJlKCcuL0ludGVyY2VwdG9yTWFuYWdlcicpO1xudmFyIGRpc3BhdGNoUmVxdWVzdCA9IHJlcXVpcmUoJy4vZGlzcGF0Y2hSZXF1ZXN0Jyk7XG52YXIgbWVyZ2VDb25maWcgPSByZXF1aXJlKCcuL21lcmdlQ29uZmlnJyk7XG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGluc3RhbmNlQ29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKi9cbmZ1bmN0aW9uIEF4aW9zKGluc3RhbmNlQ29uZmlnKSB7XG4gIHRoaXMuZGVmYXVsdHMgPSBpbnN0YW5jZUNvbmZpZztcbiAgdGhpcy5pbnRlcmNlcHRvcnMgPSB7XG4gICAgcmVxdWVzdDogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpLFxuICAgIHJlc3BvbnNlOiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKClcbiAgfTtcbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcgc3BlY2lmaWMgZm9yIHRoaXMgcmVxdWVzdCAobWVyZ2VkIHdpdGggdGhpcy5kZWZhdWx0cylcbiAqL1xuQXhpb3MucHJvdG90eXBlLnJlcXVlc3QgPSBmdW5jdGlvbiByZXF1ZXN0KGNvbmZpZykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgLy8gQWxsb3cgZm9yIGF4aW9zKCdleGFtcGxlL3VybCdbLCBjb25maWddKSBhIGxhIGZldGNoIEFQSVxuICBpZiAodHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycpIHtcbiAgICBjb25maWcgPSBhcmd1bWVudHNbMV0gfHwge307XG4gICAgY29uZmlnLnVybCA9IGFyZ3VtZW50c1swXTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcgPSBjb25maWcgfHwge307XG4gIH1cblxuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuXG4gIC8vIFNldCBjb25maWcubWV0aG9kXG4gIGlmIChjb25maWcubWV0aG9kKSB7XG4gICAgY29uZmlnLm1ldGhvZCA9IGNvbmZpZy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIGlmICh0aGlzLmRlZmF1bHRzLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSB0aGlzLmRlZmF1bHRzLm1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICB9IGVsc2Uge1xuICAgIGNvbmZpZy5tZXRob2QgPSAnZ2V0JztcbiAgfVxuXG4gIC8vIEhvb2sgdXAgaW50ZXJjZXB0b3JzIG1pZGRsZXdhcmVcbiAgdmFyIGNoYWluID0gW2Rpc3BhdGNoUmVxdWVzdCwgdW5kZWZpbmVkXTtcbiAgdmFyIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoY29uZmlnKTtcblxuICB0aGlzLmludGVyY2VwdG9ycy5yZXF1ZXN0LmZvckVhY2goZnVuY3Rpb24gdW5zaGlmdFJlcXVlc3RJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBjaGFpbi51bnNoaWZ0KGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB0aGlzLmludGVyY2VwdG9ycy5yZXNwb25zZS5mb3JFYWNoKGZ1bmN0aW9uIHB1c2hSZXNwb25zZUludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGNoYWluLnB1c2goaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHdoaWxlIChjaGFpbi5sZW5ndGgpIHtcbiAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKGNoYWluLnNoaWZ0KCksIGNoYWluLnNoaWZ0KCkpO1xuICB9XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuXG5BeGlvcy5wcm90b3R5cGUuZ2V0VXJpID0gZnVuY3Rpb24gZ2V0VXJpKGNvbmZpZykge1xuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuICByZXR1cm4gYnVpbGRVUkwoY29uZmlnLnVybCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLnJlcGxhY2UoL15cXD8vLCAnJyk7XG59O1xuXG4vLyBQcm92aWRlIGFsaWFzZXMgZm9yIHN1cHBvcnRlZCByZXF1ZXN0IG1ldGhvZHNcbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAnb3B0aW9ucyddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdCh1dGlscy5tZXJnZShjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmxcbiAgICB9KSk7XG4gIH07XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGRhdGEsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QodXRpbHMubWVyZ2UoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF4aW9zO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/Axios.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzP2Y2YjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQjtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWRcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/InterceptorManager.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcz84M2I5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLG9CQUFvQixtQkFBTyxDQUFDLG1GQUEwQjtBQUN0RCxrQkFBa0IsbUJBQU8sQ0FBQywrRUFBd0I7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9idWlsZEZ1bGxQYXRoLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNBYnNvbHV0ZVVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTCcpO1xudmFyIGNvbWJpbmVVUkxzID0gcmVxdWlyZSgnLi4vaGVscGVycy9jb21iaW5lVVJMcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgYmFzZVVSTCB3aXRoIHRoZSByZXF1ZXN0ZWRVUkwsXG4gKiBvbmx5IHdoZW4gdGhlIHJlcXVlc3RlZFVSTCBpcyBub3QgYWxyZWFkeSBhbiBhYnNvbHV0ZSBVUkwuXG4gKiBJZiB0aGUgcmVxdWVzdFVSTCBpcyBhYnNvbHV0ZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSByZXF1ZXN0ZWRVUkwgdW50b3VjaGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlcXVlc3RlZFVSTCBBYnNvbHV0ZSBvciByZWxhdGl2ZSBVUkwgdG8gY29tYmluZVxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIGZ1bGwgcGF0aFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkRnVsbFBhdGgoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKSB7XG4gIGlmIChiYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKHJlcXVlc3RlZFVSTCkpIHtcbiAgICByZXR1cm4gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKTtcbiAgfVxuICByZXR1cm4gcmVxdWVzdGVkVVJMO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/buildFullPath.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanM/MmQ4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixtQkFBbUIsbUJBQU8sQ0FBQyxxRUFBZ0I7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBlbmhhbmNlRXJyb3IgPSByZXF1aXJlKCcuL2VuaGFuY2VFcnJvcicpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgbWVzc2FnZSwgY29uZmlnLCBlcnJvciBjb2RlLCByZXF1ZXN0IGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVFcnJvcihtZXNzYWdlLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIHZhciBlcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgcmV0dXJuIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/createError.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzPzUyNzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZO0FBQ2hDLG9CQUFvQixtQkFBTyxDQUFDLHVFQUFpQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsdUVBQW9CO0FBQzNDLGVBQWUsbUJBQU8sQ0FBQyx5REFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CLHVDQUF1QztBQUN2QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciB0cmFuc2Zvcm1EYXRhID0gcmVxdWlyZSgnLi90cmFuc2Zvcm1EYXRhJyk7XG52YXIgaXNDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvaXNDYW5jZWwnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/dispatchRequest.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZW5oYW5jZUVycm9yLmpzPzM4N2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2VuaGFuY2VFcnJvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVcGRhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIGNvbmZpZywgZXJyb3IgY29kZSwgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yIFRoZSBlcnJvciB0byB1cGRhdGUuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBlcnJvci5jb25maWcgPSBjb25maWc7XG4gIGlmIChjb2RlKSB7XG4gICAgZXJyb3IuY29kZSA9IGNvZGU7XG4gIH1cblxuICBlcnJvci5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgZXJyb3IucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgZXJyb3IuaXNBeGlvc0Vycm9yID0gdHJ1ZTtcblxuICBlcnJvci50b0pTT04gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLy8gU3RhbmRhcmRcbiAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgIC8vIE1pY3Jvc29mdFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXG4gICAgICBudW1iZXI6IHRoaXMubnVtYmVyLFxuICAgICAgLy8gTW96aWxsYVxuICAgICAgZmlsZU5hbWU6IHRoaXMuZmlsZU5hbWUsXG4gICAgICBsaW5lTnVtYmVyOiB0aGlzLmxpbmVOdW1iZXIsXG4gICAgICBjb2x1bW5OdW1iZXI6IHRoaXMuY29sdW1uTnVtYmVyLFxuICAgICAgc3RhY2s6IHRoaXMuc3RhY2ssXG4gICAgICAvLyBBeGlvc1xuICAgICAgY29uZmlnOiB0aGlzLmNvbmZpZyxcbiAgICAgIGNvZGU6IHRoaXMuY29kZVxuICAgIH07XG4gIH07XG4gIHJldHVybiBlcnJvcjtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/enhanceError.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanM/NGE3YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsbURBQVU7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9tZXJnZUNvbmZpZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDb25maWctc3BlY2lmaWMgbWVyZ2UtZnVuY3Rpb24gd2hpY2ggY3JlYXRlcyBhIG5ldyBjb25maWctb2JqZWN0XG4gKiBieSBtZXJnaW5nIHR3byBjb25maWd1cmF0aW9uIG9iamVjdHMgdG9nZXRoZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzFcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBOZXcgb2JqZWN0IHJlc3VsdGluZyBmcm9tIG1lcmdpbmcgY29uZmlnMiB0byBjb25maWcxXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIHZhciBjb25maWcgPSB7fTtcblxuICB2YXIgdmFsdWVGcm9tQ29uZmlnMktleXMgPSBbJ3VybCcsICdtZXRob2QnLCAncGFyYW1zJywgJ2RhdGEnXTtcbiAgdmFyIG1lcmdlRGVlcFByb3BlcnRpZXNLZXlzID0gWydoZWFkZXJzJywgJ2F1dGgnLCAncHJveHknXTtcbiAgdmFyIGRlZmF1bHRUb0NvbmZpZzJLZXlzID0gW1xuICAgICdiYXNlVVJMJywgJ3VybCcsICd0cmFuc2Zvcm1SZXF1ZXN0JywgJ3RyYW5zZm9ybVJlc3BvbnNlJywgJ3BhcmFtc1NlcmlhbGl6ZXInLFxuICAgICd0aW1lb3V0JywgJ3dpdGhDcmVkZW50aWFscycsICdhZGFwdGVyJywgJ3Jlc3BvbnNlVHlwZScsICd4c3JmQ29va2llTmFtZScsXG4gICAgJ3hzcmZIZWFkZXJOYW1lJywgJ29uVXBsb2FkUHJvZ3Jlc3MnLCAnb25Eb3dubG9hZFByb2dyZXNzJyxcbiAgICAnbWF4Q29udGVudExlbmd0aCcsICd2YWxpZGF0ZVN0YXR1cycsICdtYXhSZWRpcmVjdHMnLCAnaHR0cEFnZW50JyxcbiAgICAnaHR0cHNBZ2VudCcsICdjYW5jZWxUb2tlbicsICdzb2NrZXRQYXRoJ1xuICBdO1xuXG4gIHV0aWxzLmZvckVhY2godmFsdWVGcm9tQ29uZmlnMktleXMsIGZ1bmN0aW9uIHZhbHVlRnJvbUNvbmZpZzIocHJvcCkge1xuICAgIGlmICh0eXBlb2YgY29uZmlnMltwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzJbcHJvcF07XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKG1lcmdlRGVlcFByb3BlcnRpZXNLZXlzLCBmdW5jdGlvbiBtZXJnZURlZXBQcm9wZXJ0aWVzKHByb3ApIHtcbiAgICBpZiAodXRpbHMuaXNPYmplY3QoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IHV0aWxzLmRlZXBNZXJnZShjb25maWcxW3Byb3BdLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb25maWcyW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMltwcm9wXTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzT2JqZWN0KGNvbmZpZzFbcHJvcF0pKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSB1dGlscy5kZWVwTWVyZ2UoY29uZmlnMVtwcm9wXSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgY29uZmlnMVtwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzFbcHJvcF07XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKGRlZmF1bHRUb0NvbmZpZzJLZXlzLCBmdW5jdGlvbiBkZWZhdWx0VG9Db25maWcyKHByb3ApIHtcbiAgICBpZiAodHlwZW9mIGNvbmZpZzJbcHJvcF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBjb25maWcyW3Byb3BdO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGNvbmZpZzFbcHJvcF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBjb25maWcxW3Byb3BdO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIGF4aW9zS2V5cyA9IHZhbHVlRnJvbUNvbmZpZzJLZXlzXG4gICAgLmNvbmNhdChtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cylcbiAgICAuY29uY2F0KGRlZmF1bHRUb0NvbmZpZzJLZXlzKTtcblxuICB2YXIgb3RoZXJLZXlzID0gT2JqZWN0XG4gICAgLmtleXMoY29uZmlnMilcbiAgICAuZmlsdGVyKGZ1bmN0aW9uIGZpbHRlckF4aW9zS2V5cyhrZXkpIHtcbiAgICAgIHJldHVybiBheGlvc0tleXMuaW5kZXhPZihrZXkpID09PSAtMTtcbiAgICB9KTtcblxuICB1dGlscy5mb3JFYWNoKG90aGVyS2V5cywgZnVuY3Rpb24gb3RoZXJLZXlzRGVmYXVsdFRvQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKHR5cGVvZiBjb25maWcyW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMltwcm9wXTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb25maWcxW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMVtwcm9wXTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBjb25maWc7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/mergeConfig.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzPzQ2N2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0JBQWtCLG1CQUFPLENBQUMsbUVBQWU7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi9jcmVhdGVFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgaWYgKCF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KGNyZWF0ZUVycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIG51bGwsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/settle.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcz9jNDAxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsTUFBTTtBQUNqQixXQUFXLGVBQWU7QUFDMUIsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS90cmFuc2Zvcm1EYXRhLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gZGF0YSBUaGUgZGF0YSB0byBiZSB0cmFuc2Zvcm1lZFxuICogQHBhcmFtIHtBcnJheX0gaGVhZGVycyBUaGUgaGVhZGVycyBmb3IgdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2VcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGRhdGEsIGhlYWRlcnMsIGZucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbihkYXRhLCBoZWFkZXJzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/transformData.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzLmpzPzI0NDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0NBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLGtEQUFTO0FBQzdCLDBCQUEwQixtQkFBTyxDQUFDLDhGQUErQjs7QUFFakU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsZ0VBQWdCO0FBQ3RDLEdBQUc7QUFDSDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxpRUFBaUI7QUFDdkM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sWUFBWTtBQUNuQjtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBub3JtYWxpemVIZWFkZXJOYW1lID0gcmVxdWlyZSgnLi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUnKTtcblxudmFyIERFRkFVTFRfQ09OVEVOVF9UWVBFID0ge1xuICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcbn07XG5cbmZ1bmN0aW9uIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCB2YWx1ZSkge1xuICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnMpICYmIHV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddKSkge1xuICAgIGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gdmFsdWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEFkYXB0ZXIoKSB7XG4gIHZhciBhZGFwdGVyO1xuICBpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBicm93c2VycyB1c2UgWEhSIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy94aHInKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHByb2Nlc3MpID09PSAnW29iamVjdCBwcm9jZXNzXScpIHtcbiAgICAvLyBGb3Igbm9kZSB1c2UgSFRUUCBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMvaHR0cCcpO1xuICB9XG4gIHJldHVybiBhZGFwdGVyO1xufVxuXG52YXIgZGVmYXVsdHMgPSB7XG4gIGFkYXB0ZXI6IGdldERlZmF1bHRBZGFwdGVyKCksXG5cbiAgdHJhbnNmb3JtUmVxdWVzdDogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlcXVlc3QoZGF0YSwgaGVhZGVycykge1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0FjY2VwdCcpO1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0NvbnRlbnQtVHlwZScpO1xuICAgIGlmICh1dGlscy5pc0Zvcm1EYXRhKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0FycmF5QnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0J1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNTdHJlYW0oZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzRmlsZShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCbG9iKGRhdGEpXG4gICAgKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzQXJyYXlCdWZmZXJWaWV3KGRhdGEpKSB7XG4gICAgICByZXR1cm4gZGF0YS5idWZmZXI7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIGRhdGEudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzT2JqZWN0KGRhdGEpKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgdHJhbnNmb3JtUmVzcG9uc2U6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXNwb25zZShkYXRhKSB7XG4gICAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICB9IGNhdGNoIChlKSB7IC8qIElnbm9yZSAqLyB9XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICAvKipcbiAgICogQSB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyB0byBhYm9ydCBhIHJlcXVlc3QuIElmIHNldCB0byAwIChkZWZhdWx0KSBhXG4gICAqIHRpbWVvdXQgaXMgbm90IGNyZWF0ZWQuXG4gICAqL1xuICB0aW1lb3V0OiAwLFxuXG4gIHhzcmZDb29raWVOYW1lOiAnWFNSRi1UT0tFTicsXG4gIHhzcmZIZWFkZXJOYW1lOiAnWC1YU1JGLVRPS0VOJyxcblxuICBtYXhDb250ZW50TGVuZ3RoOiAtMSxcblxuICB2YWxpZGF0ZVN0YXR1czogZnVuY3Rpb24gdmFsaWRhdGVTdGF0dXMoc3RhdHVzKSB7XG4gICAgcmV0dXJuIHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwO1xuICB9XG59O1xuXG5kZWZhdWx0cy5oZWFkZXJzID0ge1xuICBjb21tb246IHtcbiAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKidcbiAgfVxufTtcblxudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB7fTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB1dGlscy5tZXJnZShERUZBVUxUX0NPTlRFTlRfVFlQRSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWZhdWx0cztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/defaults.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcz8xZDJiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixpQkFBaUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9iaW5kLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/bind.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanM/MzBiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyU0MC9naSwgJ0AnKS5cbiAgICByZXBsYWNlKC8lM0EvZ2ksICc6JykuXG4gICAgcmVwbGFjZSgvJTI0L2csICckJykuXG4gICAgcmVwbGFjZSgvJTJDL2dpLCAnLCcpLlxuICAgIHJlcGxhY2UoLyUyMC9nLCAnKycpLlxuICAgIHJlcGxhY2UoLyU1Qi9naSwgJ1snKS5cbiAgICByZXBsYWNlKC8lNUQvZ2ksICddJyk7XG59XG5cbi8qKlxuICogQnVpbGQgYSBVUkwgYnkgYXBwZW5kaW5nIHBhcmFtcyB0byB0aGUgZW5kXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgYmFzZSBvZiB0aGUgdXJsIChlLmcuLCBodHRwOi8vd3d3Lmdvb2dsZS5jb20pXG4gKiBAcGFyYW0ge29iamVjdH0gW3BhcmFtc10gVGhlIHBhcmFtcyB0byBiZSBhcHBlbmRlZFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGZvcm1hdHRlZCB1cmxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBidWlsZFVSTCh1cmwsIHBhcmFtcywgcGFyYW1zU2VyaWFsaXplcikge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgaWYgKCFwYXJhbXMpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdmFyIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIGlmIChwYXJhbXNTZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcmFtc1NlcmlhbGl6ZXIocGFyYW1zKTtcbiAgfSBlbHNlIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMpKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcmFtcy50b1N0cmluZygpO1xuICB9IGVsc2Uge1xuICAgIHZhciBwYXJ0cyA9IFtdO1xuXG4gICAgdXRpbHMuZm9yRWFjaChwYXJhbXMsIGZ1bmN0aW9uIHNlcmlhbGl6ZSh2YWwsIGtleSkge1xuICAgICAgaWYgKHZhbCA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh1dGlscy5pc0FycmF5KHZhbCkpIHtcbiAgICAgICAga2V5ID0ga2V5ICsgJ1tdJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbCA9IFt2YWxdO1xuICAgICAgfVxuXG4gICAgICB1dGlscy5mb3JFYWNoKHZhbCwgZnVuY3Rpb24gcGFyc2VWYWx1ZSh2KSB7XG4gICAgICAgIGlmICh1dGlscy5pc0RhdGUodikpIHtcbiAgICAgICAgICB2ID0gdi50b0lTT1N0cmluZygpO1xuICAgICAgICB9IGVsc2UgaWYgKHV0aWxzLmlzT2JqZWN0KHYpKSB7XG4gICAgICAgICAgdiA9IEpTT04uc3RyaW5naWZ5KHYpO1xuICAgICAgICB9XG4gICAgICAgIHBhcnRzLnB1c2goZW5jb2RlKGtleSkgKyAnPScgKyBlbmNvZGUodikpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFydHMuam9pbignJicpO1xuICB9XG5cbiAgaWYgKHNlcmlhbGl6ZWRQYXJhbXMpIHtcbiAgICB2YXIgaGFzaG1hcmtJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gICAgaWYgKGhhc2htYXJrSW5kZXggIT09IC0xKSB7XG4gICAgICB1cmwgPSB1cmwuc2xpY2UoMCwgaGFzaG1hcmtJbmRleCk7XG4gICAgfVxuXG4gICAgdXJsICs9ICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICc/JyA6ICcmJykgKyBzZXJpYWxpemVkUGFyYW1zO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/buildURL.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanM/ZTY4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBVUkxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZWxhdGl2ZVVSTCkge1xuICByZXR1cm4gcmVsYXRpdmVVUkxcbiAgICA/IGJhc2VVUkwucmVwbGFjZSgvXFwvKyQvLCAnJykgKyAnLycgKyByZWxhdGl2ZVVSTC5yZXBsYWNlKC9eXFwvKy8sICcnKVxuICAgIDogYmFzZVVSTDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/combineURLs.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcz83YWFjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTs7QUFFaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDBDQUEwQztBQUMxQyxTQUFTOztBQUVUO0FBQ0EsNERBQTRELHdCQUF3QjtBQUNwRjtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQywrQkFBK0IsYUFBYSxFQUFFO0FBQzlDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgICB2YXIgY29va2llID0gW107XG4gICAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKHBhdGgpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGRvbWFpbikpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlY3VyZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICAgICAgcmV0dXJuIChtYXRjaCA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFszXSkgOiBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/cookies.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcz9kOTI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBVUkwgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQWJzb2x1dGVVUkwodXJsKSB7XG4gIC8vIEEgVVJMIGlzIGNvbnNpZGVyZWQgYWJzb2x1dGUgaWYgaXQgYmVnaW5zIHdpdGggXCI8c2NoZW1lPjovL1wiIG9yIFwiLy9cIiAocHJvdG9jb2wtcmVsYXRpdmUgVVJMKS5cbiAgLy8gUkZDIDM5ODYgZGVmaW5lcyBzY2hlbWUgbmFtZSBhcyBhIHNlcXVlbmNlIG9mIGNoYXJhY3RlcnMgYmVnaW5uaW5nIHdpdGggYSBsZXR0ZXIgYW5kIGZvbGxvd2VkXG4gIC8vIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBsZXR0ZXJzLCBkaWdpdHMsIHBsdXMsIHBlcmlvZCwgb3IgaHlwaGVuLlxuICByZXR1cm4gL14oW2Etel1bYS16XFxkXFwrXFwtXFwuXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAbsoluteURL.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzPzM5MzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxPQUFPO0FBQ3JCLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc1VSTFNhbWVPcmlnaW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBoYXZlIGZ1bGwgc3VwcG9ydCBvZiB0aGUgQVBJcyBuZWVkZWQgdG8gdGVzdFxuICAvLyB3aGV0aGVyIHRoZSByZXF1ZXN0IFVSTCBpcyBvZiB0aGUgc2FtZSBvcmlnaW4gYXMgY3VycmVudCBsb2NhdGlvbi5cbiAgICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgdmFyIG1zaWUgPSAvKG1zaWV8dHJpZGVudCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgICAgdmFyIHVybFBhcnNpbmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgdmFyIG9yaWdpblVSTDtcblxuICAgICAgLyoqXG4gICAgKiBQYXJzZSBhIFVSTCB0byBkaXNjb3ZlciBpdCdzIGNvbXBvbmVudHNcbiAgICAqXG4gICAgKiBAcGFyYW0ge1N0cmluZ30gdXJsIFRoZSBVUkwgdG8gYmUgcGFyc2VkXG4gICAgKiBAcmV0dXJucyB7T2JqZWN0fVxuICAgICovXG4gICAgICBmdW5jdGlvbiByZXNvbHZlVVJMKHVybCkge1xuICAgICAgICB2YXIgaHJlZiA9IHVybDtcblxuICAgICAgICBpZiAobXNpZSkge1xuICAgICAgICAvLyBJRSBuZWVkcyBhdHRyaWJ1dGUgc2V0IHR3aWNlIHRvIG5vcm1hbGl6ZSBwcm9wZXJ0aWVzXG4gICAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gICAgICAgICAgaHJlZiA9IHVybFBhcnNpbmdOb2RlLmhyZWY7XG4gICAgICAgIH1cblxuICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcblxuICAgICAgICAvLyB1cmxQYXJzaW5nTm9kZSBwcm92aWRlcyB0aGUgVXJsVXRpbHMgaW50ZXJmYWNlIC0gaHR0cDovL3VybC5zcGVjLndoYXR3Zy5vcmcvI3VybHV0aWxzXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaHJlZjogdXJsUGFyc2luZ05vZGUuaHJlZixcbiAgICAgICAgICBwcm90b2NvbDogdXJsUGFyc2luZ05vZGUucHJvdG9jb2wgPyB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3Q6IHVybFBhcnNpbmdOb2RlLmhvc3QsXG4gICAgICAgICAgc2VhcmNoOiB1cmxQYXJzaW5nTm9kZS5zZWFyY2ggPyB1cmxQYXJzaW5nTm9kZS5zZWFyY2gucmVwbGFjZSgvXlxcPy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhhc2g6IHVybFBhcnNpbmdOb2RlLmhhc2ggPyB1cmxQYXJzaW5nTm9kZS5oYXNoLnJlcGxhY2UoL14jLywgJycpIDogJycsXG4gICAgICAgICAgaG9zdG5hbWU6IHVybFBhcnNpbmdOb2RlLmhvc3RuYW1lLFxuICAgICAgICAgIHBvcnQ6IHVybFBhcnNpbmdOb2RlLnBvcnQsXG4gICAgICAgICAgcGF0aG5hbWU6ICh1cmxQYXJzaW5nTm9kZS5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJykgP1xuICAgICAgICAgICAgdXJsUGFyc2luZ05vZGUucGF0aG5hbWUgOlxuICAgICAgICAgICAgJy8nICsgdXJsUGFyc2luZ05vZGUucGF0aG5hbWVcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgb3JpZ2luVVJMID0gcmVzb2x2ZVVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG5cbiAgICAgIC8qKlxuICAgICogRGV0ZXJtaW5lIGlmIGEgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4gYXMgdGhlIGN1cnJlbnQgbG9jYXRpb25cbiAgICAqXG4gICAgKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdFVSTCBUaGUgVVJMIHRvIHRlc3RcbiAgICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luLCBvdGhlcndpc2UgZmFsc2VcbiAgICAqL1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbihyZXF1ZXN0VVJMKSB7XG4gICAgICAgIHZhciBwYXJzZWQgPSAodXRpbHMuaXNTdHJpbmcocmVxdWVzdFVSTCkpID8gcmVzb2x2ZVVSTChyZXF1ZXN0VVJMKSA6IHJlcXVlc3RVUkw7XG4gICAgICAgIHJldHVybiAocGFyc2VkLnByb3RvY29sID09PSBvcmlnaW5VUkwucHJvdG9jb2wgJiZcbiAgICAgICAgICAgIHBhcnNlZC5ob3N0ID09PSBvcmlnaW5VUkwuaG9zdCk7XG4gICAgICB9O1xuICAgIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudnMgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4oKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isURLSameOrigin.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcz9jOGFmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxtREFBVTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCBub3JtYWxpemVkTmFtZSkge1xuICB1dGlscy5mb3JFYWNoKGhlYWRlcnMsIGZ1bmN0aW9uIHByb2Nlc3NIZWFkZXIodmFsdWUsIG5hbWUpIHtcbiAgICBpZiAobmFtZSAhPT0gbm9ybWFsaXplZE5hbWUgJiYgbmFtZS50b1VwcGVyQ2FzZSgpID09PSBub3JtYWxpemVkTmFtZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICBoZWFkZXJzW25vcm1hbGl6ZWROYW1lXSA9IHZhbHVlO1xuICAgICAgZGVsZXRlIGhlYWRlcnNbbmFtZV07XG4gICAgfVxuICB9KTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/normalizeHeaderName.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzP2MzNDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLGVBQWU7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/parseHeaders.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzPzBkZjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFN5bnRhY3RpYyBzdWdhciBmb3IgaW52b2tpbmcgYSBmdW5jdGlvbiBhbmQgZXhwYW5kaW5nIGFuIGFycmF5IGZvciBhcmd1bWVudHMuXG4gKlxuICogQ29tbW9uIHVzZSBjYXNlIHdvdWxkIGJlIHRvIHVzZSBgRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5YC5cbiAqXG4gKiAgYGBganNcbiAqICBmdW5jdGlvbiBmKHgsIHksIHopIHt9XG4gKiAgdmFyIGFyZ3MgPSBbMSwgMiwgM107XG4gKiAgZi5hcHBseShudWxsLCBhcmdzKTtcbiAqICBgYGBcbiAqXG4gKiBXaXRoIGBzcHJlYWRgIHRoaXMgZXhhbXBsZSBjYW4gYmUgcmUtd3JpdHRlbi5cbiAqXG4gKiAgYGBganNcbiAqICBzcHJlYWQoZnVuY3Rpb24oeCwgeSwgeikge30pKFsxLCAyLCAzXSk7XG4gKiAgYGBgXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzcHJlYWQoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoYXJyKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFycik7XG4gIH07XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/spread.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/utils.js\n");

/***/ }),

/***/ "./node_modules/powerbi-client/dist/powerbi.js":
/*!*****************************************************!*\
  !*** ./node_modules/powerbi-client/dist/powerbi.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*! powerbi-client v2.11.0 | (c) 2016 Microsoft Corporation MIT */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @hidden\r\n\t */\r\n\tvar service = __webpack_require__(1);\r\n\texports.service = service;\r\n\tvar factories = __webpack_require__(17);\r\n\texports.factories = factories;\r\n\tvar models = __webpack_require__(5);\r\n\texports.models = models;\r\n\tvar report_1 = __webpack_require__(7);\r\n\texports.Report = report_1.Report;\r\n\tvar dashboard_1 = __webpack_require__(13);\r\n\texports.Dashboard = dashboard_1.Dashboard;\r\n\tvar tile_1 = __webpack_require__(14);\r\n\texports.Tile = tile_1.Tile;\r\n\tvar embed_1 = __webpack_require__(2);\r\n\texports.Embed = embed_1.Embed;\r\n\tvar page_1 = __webpack_require__(8);\r\n\texports.Page = page_1.Page;\r\n\tvar qna_1 = __webpack_require__(15);\r\n\texports.Qna = qna_1.Qna;\r\n\tvar visual_1 = __webpack_require__(16);\r\n\texports.Visual = visual_1.Visual;\r\n\tvar visualDescriptor_1 = __webpack_require__(9);\r\n\texports.VisualDescriptor = visualDescriptor_1.VisualDescriptor;\r\n\t/**\r\n\t * Makes Power BI available to the global object for use in applications that don't have module loading support.\r\n\t *\r\n\t * Note: create an instance of the class with the default configuration for normal usage, or save the class so that you can create an instance of the service.\r\n\t */\r\n\tvar powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\r\n\twindow.powerbi = powerbi;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @hidden\r\n\t */\r\n\tvar embed = __webpack_require__(2);\r\n\tvar report_1 = __webpack_require__(7);\r\n\tvar create_1 = __webpack_require__(12);\r\n\tvar dashboard_1 = __webpack_require__(13);\r\n\tvar tile_1 = __webpack_require__(14);\r\n\tvar page_1 = __webpack_require__(8);\r\n\tvar qna_1 = __webpack_require__(15);\r\n\tvar visual_1 = __webpack_require__(16);\r\n\tvar utils = __webpack_require__(3);\r\n\t/**\r\n\t * The Power BI Service embed component, which is the entry point to embed all other Power BI components into your application\r\n\t *\r\n\t * @export\r\n\t * @class Service\r\n\t * @implements {IService}\r\n\t */\r\n\tvar Service = (function () {\r\n\t    /**\r\n\t     * Creates an instance of a Power BI Service.\r\n\t     *\r\n\t     * @param {IHpmFactory} hpmFactory The http post message factory used in the postMessage communication layer\r\n\t     * @param {IWpmpFactory} wpmpFactory The window post message factory used in the postMessage communication layer\r\n\t     * @param {IRouterFactory} routerFactory The router factory used in the postMessage communication layer\r\n\t     * @param {IServiceConfiguration} [config={}]\r\n\t     * @hidden\r\n\t     */\r\n\t    function Service(hpmFactory, wpmpFactory, routerFactory, config) {\r\n\t        var _this = this;\r\n\t        if (config === void 0) { config = {}; }\r\n\t        this.wpmp = wpmpFactory(config.wpmpName, config.logMessages);\r\n\t        this.hpm = hpmFactory(this.wpmp, null, config.version, config.type);\r\n\t        this.router = routerFactory(this.wpmp);\r\n\t        this.uniqueSessionId = utils.generateUUID();\r\n\t        /**\r\n\t         * Adds handler for report events.\r\n\t         */\r\n\t        this.router.post(\"/reports/:uniqueId/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'report',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        this.router.post(\"/reports/:uniqueId/pages/:pageName/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'report',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        this.router.post(\"/reports/:uniqueId/pages/:pageName/visuals/:visualName/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'report',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        this.router.post(\"/dashboards/:uniqueId/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'dashboard',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        this.router.post(\"/tile/:uniqueId/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'tile',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        /**\r\n\t         * Adds handler for Q&A events.\r\n\t         */\r\n\t        this.router.post(\"/qna/:uniqueId/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'qna',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        /**\r\n\t         * Adds handler for front load 'ready' message.\r\n\t         */\r\n\t        this.router.post(\"/ready/:uniqueId\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'report',\r\n\t                id: req.params.uniqueId,\r\n\t                name: 'ready',\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        this.embeds = [];\r\n\t        // TODO: Change when Object.assign is available.\r\n\t        this.config = utils.assign({}, Service.defaultConfig, config);\r\n\t        if (this.config.autoEmbedOnContentLoaded) {\r\n\t            this.enableAutoEmbed();\r\n\t        }\r\n\t    }\r\n\t    /**\r\n\t     * Creates new report\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IEmbedConfiguration} [config={}]\r\n\t     * @returns {embed.Embed}\r\n\t     */\r\n\t    Service.prototype.createReport = function (element, config) {\r\n\t        config.type = 'create';\r\n\t        var powerBiElement = element;\r\n\t        var component = new create_1.Create(this, powerBiElement, config);\r\n\t        powerBiElement.powerBiEmbed = component;\r\n\t        this.addOrOverwriteEmbed(component, element);\r\n\t        return component;\r\n\t    };\r\n\t    /**\r\n\t     * TODO: Add a description here\r\n\t     *\r\n\t     * @param {HTMLElement} [container]\r\n\t     * @param {embed.IEmbedConfiguration} [config=undefined]\r\n\t     * @returns {embed.Embed[]}\r\n\t     */\r\n\t    Service.prototype.init = function (container, config) {\r\n\t        var _this = this;\r\n\t        if (config === void 0) { config = undefined; }\r\n\t        container = (container && container instanceof HTMLElement) ? container : document.body;\r\n\t        var elements = Array.prototype.slice.call(container.querySelectorAll(\"[\" + embed.Embed.embedUrlAttribute + \"]\"));\r\n\t        return elements.map(function (element) { return _this.embed(element, config); });\r\n\t    };\r\n\t    /**\r\n\t     * Given a configuration based on an HTML element,\r\n\t     * if the component has already been created and attached to the element, reuses the component instance and existing iframe,\r\n\t     * otherwise creates a new component instance.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IEmbedConfigurationBase} [config={}]\r\n\t     * @returns {embed.Embed}\r\n\t     */\r\n\t    Service.prototype.embed = function (element, config) {\r\n\t        if (config === void 0) { config = {}; }\r\n\t        return this.embedInternal(element, config);\r\n\t    };\r\n\t    /**\r\n\t     * Given a configuration based on an HTML element,\r\n\t     * if the component has already been created and attached to the element, reuses the component instance and existing iframe,\r\n\t     * otherwise creates a new component instance.\r\n\t     * This is used for the phased embedding API, once element is loaded successfully, one can call 'render' on it.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IEmbedConfigurationBase} [config={}]\r\n\t     * @returns {embed.Embed}\r\n\t     */\r\n\t    Service.prototype.load = function (element, config) {\r\n\t        if (config === void 0) { config = {}; }\r\n\t        return this.embedInternal(element, config, /* phasedRender */ true, /* isBootstrap */ false);\r\n\t    };\r\n\t    /**\r\n\t     * Given an HTML element and entityType, creates a new component instance, and bootstrap the iframe for embedding.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IBootstrapEmbedConfiguration} config: a bootstrap config which is an embed config without access token.\r\n\t     */\r\n\t    Service.prototype.bootstrap = function (element, config) {\r\n\t        return this.embedInternal(element, config, /* phasedRender */ false, /* isBootstrap */ true);\r\n\t    };\r\n\t    Service.prototype.embedInternal = function (element, config, phasedRender, isBootstrap) {\r\n\t        if (config === void 0) { config = {}; }\r\n\t        var component;\r\n\t        var powerBiElement = element;\r\n\t        if (powerBiElement.powerBiEmbed) {\r\n\t            if (isBootstrap) {\r\n\t                throw new Error(\"Attempted to bootstrap element \" + element.outerHTML + \", but the element is already a powerbi element.\");\r\n\t            }\r\n\t            component = this.embedExisting(powerBiElement, config, phasedRender);\r\n\t        }\r\n\t        else {\r\n\t            component = this.embedNew(powerBiElement, config, phasedRender, isBootstrap);\r\n\t        }\r\n\t        return component;\r\n\t    };\r\n\t    Service.prototype.getNumberOfComponents = function () {\r\n\t        if (!this.embeds) {\r\n\t            return 0;\r\n\t        }\r\n\t        return this.embeds.length;\r\n\t    };\r\n\t    Service.prototype.getSdkSessionId = function () {\r\n\t        return this.uniqueSessionId;\r\n\t    };\r\n\t    /**\r\n\t     * Given a configuration based on a Power BI element, saves the component instance that reference the element for later lookup.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {IPowerBiElement} element\r\n\t     * @param {embed.IEmbedConfigurationBase} config\r\n\t     * @returns {embed.Embed}\r\n\t     * @hidden\r\n\t     */\r\n\t    Service.prototype.embedNew = function (element, config, phasedRender, isBootstrap) {\r\n\t        var componentType = config.type || element.getAttribute(embed.Embed.typeAttribute);\r\n\t        if (!componentType) {\r\n\t            throw new Error(\"Attempted to embed using config \" + JSON.stringify(config) + \" on element \" + element.outerHTML + \", but could not determine what type of component to embed. You must specify a type in the configuration or as an attribute such as '\" + embed.Embed.typeAttribute + \"=\\\"\" + report_1.Report.type.toLowerCase() + \"\\\"'.\");\r\n\t        }\r\n\t        // Saves the type as part of the configuration so that it can be referenced later at a known location.\r\n\t        config.type = componentType;\r\n\t        var Component = utils.find(function (component) { return componentType === component.type.toLowerCase(); }, Service.components);\r\n\t        if (!Component) {\r\n\t            throw new Error(\"Attempted to embed component of type: \" + componentType + \" but did not find any matching component.  Please verify the type you specified is intended.\");\r\n\t        }\r\n\t        var component = new Component(this, element, config, phasedRender, isBootstrap);\r\n\t        element.powerBiEmbed = component;\r\n\t        this.addOrOverwriteEmbed(component, element);\r\n\t        return component;\r\n\t    };\r\n\t    /**\r\n\t     * Given an element that already contains an embed component, load with a new configuration.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {IPowerBiElement} element\r\n\t     * @param {embed.IEmbedConfigurationBase} config\r\n\t     * @returns {embed.Embed}\r\n\t     * @hidden\r\n\t     */\r\n\t    Service.prototype.embedExisting = function (element, config, phasedRender) {\r\n\t        var component = utils.find(function (x) { return x.element === element; }, this.embeds);\r\n\t        if (!component) {\r\n\t            throw new Error(\"Attempted to embed using config \" + JSON.stringify(config) + \" on element \" + element.outerHTML + \" which already has embedded comopnent associated, but could not find the existing comopnent in the list of active components. This could indicate the embeds list is out of sync with the DOM, or the component is referencing the incorrect HTML element.\");\r\n\t        }\r\n\t        // TODO: Multiple embedding to the same iframe is not supported in QnA\r\n\t        if (config.type && config.type.toLowerCase() === \"qna\") {\r\n\t            return this.embedNew(element, config);\r\n\t        }\r\n\t        /**\r\n\t         * TODO: Dynamic embed type switching could be supported but there is work needed to prepare the service state and DOM cleanup.\r\n\t         * remove all event handlers from the DOM, then reset the element to initial state which removes iframe, and removes from list of embeds\r\n\t         * then we can call the embedNew function which would allow setting the proper embedUrl and construction of object based on the new type.\r\n\t         */\r\n\t        if (typeof config.type === \"string\" && config.type !== component.config.type) {\r\n\t            /**\r\n\t             * When loading report after create we want to use existing Iframe to optimize load period\r\n\t             */\r\n\t            if (config.type === \"report\" && component.config.type === \"create\") {\r\n\t                var report = new report_1.Report(this, element, config, /* phasedRender */ false, /* isBootstrap */ false, element.powerBiEmbed.iframe);\r\n\t                report.load(config);\r\n\t                element.powerBiEmbed = report;\r\n\t                this.addOrOverwriteEmbed(component, element);\r\n\t                return report;\r\n\t            }\r\n\t            throw new Error(\"Embedding on an existing element with a different type than the previous embed object is not supported.  Attempted to embed using config \" + JSON.stringify(config) + \" on element \" + element.outerHTML + \", but the existing element contains an embed of type: \" + this.config.type + \" which does not match the new type: \" + config.type);\r\n\t        }\r\n\t        component.populateConfig(config, /* isBootstrap */ false);\r\n\t        component.load(component.config, phasedRender);\r\n\t        return component;\r\n\t    };\r\n\t    /**\r\n\t     * Adds an event handler for DOMContentLoaded, which searches the DOM for elements that have the 'powerbi-embed-url' attribute,\r\n\t     * and automatically attempts to embed a powerbi component based on information from other powerbi-* attributes.\r\n\t     *\r\n\t     * Note: Only runs if `config.autoEmbedOnContentLoaded` is true when the service is created.\r\n\t     * This handler is typically useful only for applications that are rendered on the server so that all required data is available when the handler is called.\r\n\t     */\r\n\t    Service.prototype.enableAutoEmbed = function () {\r\n\t        var _this = this;\r\n\t        window.addEventListener('DOMContentLoaded', function (event) { return _this.init(document.body); }, false);\r\n\t    };\r\n\t    /**\r\n\t     * Returns an instance of the component associated with the element.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @returns {(Report | Tile)}\r\n\t     */\r\n\t    Service.prototype.get = function (element) {\r\n\t        var powerBiElement = element;\r\n\t        if (!powerBiElement.powerBiEmbed) {\r\n\t            throw new Error(\"You attempted to get an instance of powerbi component associated with element: \" + element.outerHTML + \" but there was no associated instance.\");\r\n\t        }\r\n\t        return powerBiElement.powerBiEmbed;\r\n\t    };\r\n\t    /**\r\n\t     * Finds an embed instance by the name or unique ID that is provided.\r\n\t     *\r\n\t     * @param {string} uniqueId\r\n\t     * @returns {(Report | Tile)}\r\n\t     */\r\n\t    Service.prototype.find = function (uniqueId) {\r\n\t        return utils.find(function (x) { return x.config.uniqueId === uniqueId; }, this.embeds);\r\n\t    };\r\n\t    Service.prototype.addOrOverwriteEmbed = function (component, element) {\r\n\t        // remove embeds over the same div element.\r\n\t        this.embeds = this.embeds.filter(function (embed) {\r\n\t            return embed.element.id !== element.id;\r\n\t        });\r\n\t        this.embeds.push(component);\r\n\t    };\r\n\t    /**\r\n\t     * Given an HTML element that has a component embedded within it, removes the component from the list of embedded components, removes the association between the element and the component, and removes the iframe.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Service.prototype.reset = function (element) {\r\n\t        var powerBiElement = element;\r\n\t        if (!powerBiElement.powerBiEmbed) {\r\n\t            return;\r\n\t        }\r\n\t        /** Removes the element frontLoad listener if exists. */\r\n\t        var embedElement = powerBiElement.powerBiEmbed;\r\n\t        if (embedElement.frontLoadHandler) {\r\n\t            embedElement.element.removeEventListener('ready', embedElement.frontLoadHandler, false);\r\n\t        }\r\n\t        /** Removes the component from an internal list of components. */\r\n\t        utils.remove(function (x) { return x === powerBiElement.powerBiEmbed; }, this.embeds);\r\n\t        /** Deletes a property from the HTML element. */\r\n\t        delete powerBiElement.powerBiEmbed;\r\n\t        /** Removes the iframe from the element. */\r\n\t        var iframe = element.querySelector('iframe');\r\n\t        if (iframe) {\r\n\t            if (iframe.remove !== undefined) {\r\n\t                iframe.remove();\r\n\t            }\r\n\t            else {\r\n\t                /** Workaround for IE: unhandled rejection TypeError: object doesn't support propert or method 'remove' */\r\n\t                iframe.parentElement.removeChild(iframe);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * handles tile events\r\n\t     *\r\n\t     * @param {IEvent<any>} event\r\n\t     */\r\n\t    Service.prototype.handleTileEvents = function (event) {\r\n\t        if (event.type === 'tile') {\r\n\t            this.handleEvent(event);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Given an event object, finds the embed component with the matching type and ID, and invokes its handleEvent method with the event object.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {IEvent<any>} event\r\n\t     * @hidden\r\n\t     */\r\n\t    Service.prototype.handleEvent = function (event) {\r\n\t        var embed = utils.find(function (embed) {\r\n\t            return (embed.config.uniqueId === event.id);\r\n\t        }, this.embeds);\r\n\t        if (embed) {\r\n\t            var value = event.value;\r\n\t            if (event.name === 'pageChanged') {\r\n\t                var pageKey = 'newPage';\r\n\t                var page = value[pageKey];\r\n\t                if (!page) {\r\n\t                    throw new Error(\"Page model not found at 'event.value.\" + pageKey + \"'.\");\r\n\t                }\r\n\t                value[pageKey] = new page_1.Page(embed, page.name, page.displayName, true /* isActive */);\r\n\t            }\r\n\t            utils.raiseCustomEvent(embed.element, event.name, value);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * API for warm starting powerbi embedded endpoints.\r\n\t     * Use this API to preload Power BI Embedded in the background.\r\n\t     *\r\n\t     * @public\r\n\t     * @param {embed.IEmbedConfigurationBase} [config={}]\r\n\t     * @param {HTMLElement} [element=undefined]\r\n\t     */\r\n\t    Service.prototype.preload = function (config, element) {\r\n\t        var iframeContent = document.createElement(\"iframe\");\r\n\t        iframeContent.setAttribute(\"style\", \"display:none;\");\r\n\t        iframeContent.setAttribute(\"src\", config.embedUrl);\r\n\t        iframeContent.setAttribute(\"scrolling\", \"no\");\r\n\t        iframeContent.setAttribute(\"allowfullscreen\", \"false\");\r\n\t        var node = element;\r\n\t        if (!node) {\r\n\t            node = document.getElementsByTagName(\"body\")[0];\r\n\t        }\r\n\t        node.appendChild(iframeContent);\r\n\t        iframeContent.onload = function () {\r\n\t            utils.raiseCustomEvent(iframeContent, \"preloaded\", {});\r\n\t        };\r\n\t        return iframeContent;\r\n\t    };\r\n\t    /**\r\n\t     * A list of components that this service can embed\r\n\t     */\r\n\t    Service.components = [\r\n\t        tile_1.Tile,\r\n\t        report_1.Report,\r\n\t        dashboard_1.Dashboard,\r\n\t        qna_1.Qna,\r\n\t        visual_1.Visual\r\n\t    ];\r\n\t    /**\r\n\t     * The default configuration for the service\r\n\t     */\r\n\t    Service.defaultConfig = {\r\n\t        autoEmbedOnContentLoaded: false,\r\n\t        onError: function () {\r\n\t            var args = [];\r\n\t            for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                args[_i - 0] = arguments[_i];\r\n\t            }\r\n\t            return console.log(args[0], args.slice(1));\r\n\t        }\r\n\t    };\r\n\t    return Service;\r\n\t}());\r\n\texports.Service = Service;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar utils = __webpack_require__(3);\r\n\tvar sdkConfig = __webpack_require__(4);\r\n\tvar models = __webpack_require__(5);\r\n\tvar errors_1 = __webpack_require__(6);\r\n\t/**\r\n\t * Base class for all Power BI embed components\r\n\t *\r\n\t * @export\r\n\t * @abstract\r\n\t * @hidden\r\n\t * @class Embed\r\n\t */\r\n\tvar Embed = (function () {\r\n\t    /**\r\n\t     * Creates an instance of Embed.\r\n\t     *\r\n\t     * Note: there is circular reference between embeds and the service, because\r\n\t     * the service has a list of all embeds on the host page, and each embed has a reference to the service that created it.\r\n\t     *\r\n\t     * @param {service.Service} service\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {IEmbedConfigurationBase} config\r\n\t     * @hidden\r\n\t     */\r\n\t    function Embed(service, element, config, iframe, phasedRender, isBootstrap) {\r\n\t        /** @hidden */\r\n\t        this.allowedEvents = [];\r\n\t        if (utils.autoAuthInEmbedUrl(config.embedUrl)) {\r\n\t            throw new Error(errors_1.EmbedUrlNotSupported);\r\n\t        }\r\n\t        Array.prototype.push.apply(this.allowedEvents, Embed.allowedEvents);\r\n\t        this.eventHandlers = [];\r\n\t        this.service = service;\r\n\t        this.element = element;\r\n\t        this.iframe = iframe;\r\n\t        this.embedtype = config.type.toLowerCase();\r\n\t        this.populateConfig(config, isBootstrap);\r\n\t        if (this.embedtype === 'create') {\r\n\t            this.setIframe(false /*set EventListener to call create() on 'load' event*/, phasedRender, isBootstrap);\r\n\t        }\r\n\t        else {\r\n\t            this.setIframe(true /*set EventListener to call load() on 'load' event*/, phasedRender, isBootstrap);\r\n\t        }\r\n\t    }\r\n\t    /**\r\n\t     * Sends createReport configuration data.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * createReport({\r\n\t     *   datasetId: '5dac7a4a-4452-46b3-99f6-a25915e0fe55',\r\n\t     *   accessToken: 'eyJ0eXA ... TaE2rTSbmg',\r\n\t     * ```\r\n\t     *\r\n\t     * @param {models.IReportCreateConfiguration} config\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Embed.prototype.createReport = function (config) {\r\n\t        var errors = models.validateCreateReport(config);\r\n\t        if (errors) {\r\n\t            throw errors;\r\n\t        }\r\n\t        return this.service.hpm.post(\"/report/create\", config, { uid: this.config.uniqueId, sdkSessionId: this.service.getSdkSessionId() }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Saves Report.\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Embed.prototype.save = function () {\r\n\t        return this.service.hpm.post('/report/save', null, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * SaveAs Report.\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Embed.prototype.saveAs = function (saveAsParameters) {\r\n\t        return this.service.hpm.post('/report/saveAs', saveAsParameters, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Sends load configuration data.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.load({\r\n\t     *   type: 'report',\r\n\t     *   id: '5dac7a4a-4452-46b3-99f6-a25915e0fe55',\r\n\t     *   accessToken: 'eyJ0eXA ... TaE2rTSbmg',\r\n\t     *   settings: {\r\n\t     *     navContentPaneEnabled: false\r\n\t     *   },\r\n\t     *   pageName: \"DefaultPage\",\r\n\t     *   filters: [\r\n\t     *     {\r\n\t     *        ...  DefaultReportFilter ...\r\n\t     *     }\r\n\t     *   ]\r\n\t     * })\r\n\t     *   .catch(error => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {models.ILoadConfiguration} config\r\n\t     * @param {boolean} phasedRender\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Embed.prototype.load = function (config, phasedRender) {\r\n\t        var _this = this;\r\n\t        if (!config.accessToken) {\r\n\t            return;\r\n\t        }\r\n\t        var path = phasedRender && config.type === 'report' ? this.phasedLoadPath : this.loadPath;\r\n\t        var headers = {\r\n\t            uid: this.config.uniqueId,\r\n\t            sdkSessionId: this.service.getSdkSessionId(),\r\n\t            bootstrapped: this.config.bootstrapped,\r\n\t            sdkVersion: sdkConfig.default.version\r\n\t        };\r\n\t        return this.service.hpm.post(path, config, headers, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            utils.assign(_this.config, config);\r\n\t            return response.body;\r\n\t        }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Removes one or more event handlers from the list of handlers.\r\n\t     * If a reference to the existing handle function is specified, remove the specific handler.\r\n\t     * If the handler is not specified, remove all handlers for the event name specified.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.off('pageChanged')\r\n\t     *\r\n\t     * or\r\n\t     *\r\n\t     * const logHandler = function (event) {\r\n\t     *    console.log(event);\r\n\t     * };\r\n\t     *\r\n\t     * report.off('pageChanged', logHandler);\r\n\t     * ```\r\n\t     *\r\n\t     * @template T\r\n\t     * @param {string} eventName\r\n\t     * @param {service.IEventHandler<T>} [handler]\r\n\t     */\r\n\t    Embed.prototype.off = function (eventName, handler) {\r\n\t        var _this = this;\r\n\t        var fakeEvent = { name: eventName, type: null, id: null, value: null };\r\n\t        if (handler) {\r\n\t            utils.remove(function (eventHandler) { return eventHandler.test(fakeEvent) && (eventHandler.handle === handler); }, this.eventHandlers);\r\n\t            this.element.removeEventListener(eventName, handler);\r\n\t        }\r\n\t        else {\r\n\t            var eventHandlersToRemove = this.eventHandlers\r\n\t                .filter(function (eventHandler) { return eventHandler.test(fakeEvent); });\r\n\t            eventHandlersToRemove\r\n\t                .forEach(function (eventHandlerToRemove) {\r\n\t                utils.remove(function (eventHandler) { return eventHandler === eventHandlerToRemove; }, _this.eventHandlers);\r\n\t                _this.element.removeEventListener(eventName, eventHandlerToRemove.handle);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Adds an event handler for a specific event.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.on('pageChanged', (event) => {\r\n\t     *   console.log('PageChanged: ', event.page.name);\r\n\t     * });\r\n\t     * ```\r\n\t     *\r\n\t     * @template T\r\n\t     * @param {string} eventName\r\n\t     * @param {service.IEventHandler<T>} handler\r\n\t     */\r\n\t    Embed.prototype.on = function (eventName, handler) {\r\n\t        if (this.allowedEvents.indexOf(eventName) === -1) {\r\n\t            throw new Error(\"eventName must be one of \" + this.allowedEvents + \". You passed: \" + eventName);\r\n\t        }\r\n\t        this.eventHandlers.push({\r\n\t            test: function (event) { return event.name === eventName; },\r\n\t            handle: handler\r\n\t        });\r\n\t        this.element.addEventListener(eventName, handler);\r\n\t    };\r\n\t    /**\r\n\t     * Reloads embed using existing configuration.\r\n\t     * E.g. For reports this effectively clears all filters and makes the first page active which simulates resetting a report back to loaded state.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.reload();\r\n\t     * ```\r\n\t     */\r\n\t    Embed.prototype.reload = function () {\r\n\t        return this.load(this.config);\r\n\t    };\r\n\t    /**\r\n\t     * Set accessToken.\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Embed.prototype.setAccessToken = function (accessToken) {\r\n\t        var _this = this;\r\n\t        var embedType = this.config.type;\r\n\t        embedType = (embedType === 'create' || embedType === 'visual' || embedType === 'qna') ? 'report' : embedType;\r\n\t        return this.service.hpm.post('/' + embedType + '/token', accessToken, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            _this.config.accessToken = accessToken;\r\n\t            _this.element.setAttribute(Embed.accessTokenAttribute, accessToken);\r\n\t            _this.service.accessToken = accessToken;\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Gets an access token from the first available location: config, attribute, global.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {string} globalAccessToken\r\n\t     * @returns {string}\r\n\t     * @hidden\r\n\t     */\r\n\t    Embed.prototype.getAccessToken = function (globalAccessToken) {\r\n\t        var accessToken = this.config.accessToken || this.element.getAttribute(Embed.accessTokenAttribute) || globalAccessToken;\r\n\t        if (!accessToken) {\r\n\t            throw new Error(\"No access token was found for element. You must specify an access token directly on the element using attribute '\" + Embed.accessTokenAttribute + \"' or specify a global token at: powerbi.accessToken.\");\r\n\t        }\r\n\t        return accessToken;\r\n\t    };\r\n\t    /**\r\n\t     * Populate config for create and load\r\n\t     *\r\n\t     * @hidden\r\n\t     * @param {IEmbedConfiguration}\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Embed.prototype.populateConfig = function (config, isBootstrap) {\r\n\t        if (this.bootstrapConfig) {\r\n\t            this.config = utils.assign({}, this.bootstrapConfig, config);\r\n\t            // reset bootstrapConfig because we do not want to merge it in re-embed scenario.\r\n\t            this.bootstrapConfig = null;\r\n\t        }\r\n\t        else {\r\n\t            // Copy config - important for multiple iframe scenario.\r\n\t            // Otherwise, if a user uses the same config twice, same unique Id which will be used in different iframes.\r\n\t            this.config = utils.assign({}, config);\r\n\t        }\r\n\t        this.config.embedUrl = this.getEmbedUrl(isBootstrap);\r\n\t        this.config.groupId = this.getGroupId();\r\n\t        this.addLocaleToEmbedUrl(config);\r\n\t        this.config.uniqueId = this.getUniqueId();\r\n\t        if (isBootstrap) {\r\n\t            // save current config in bootstrapConfig to be able to merge it on next call to powerbi.embed\r\n\t            this.bootstrapConfig = this.config;\r\n\t            this.bootstrapConfig.bootstrapped = true;\r\n\t        }\r\n\t        else {\r\n\t            this.config.accessToken = this.getAccessToken(this.service.accessToken);\r\n\t        }\r\n\t        this.configChanged(isBootstrap);\r\n\t    };\r\n\t    /**\r\n\t     * Adds locale parameters to embedUrl\r\n\t     *\r\n\t     * @private\r\n\t     * @param {IEmbedConfiguration} config\r\n\t     * @hidden\r\n\t     */\r\n\t    Embed.prototype.addLocaleToEmbedUrl = function (config) {\r\n\t        if (!config.settings) {\r\n\t            return;\r\n\t        }\r\n\t        var localeSettings = config.settings.localeSettings;\r\n\t        if (localeSettings && localeSettings.language) {\r\n\t            this.config.embedUrl = utils.addParamToUrl(this.config.embedUrl, 'language', localeSettings.language);\r\n\t        }\r\n\t        if (localeSettings && localeSettings.formatLocale) {\r\n\t            this.config.embedUrl = utils.addParamToUrl(this.config.embedUrl, 'formatLocale', localeSettings.formatLocale);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Gets an embed url from the first available location: options, attribute.\r\n\t     *\r\n\t     * @private\r\n\t     * @returns {string}\r\n\t     * @hidden\r\n\t     */\r\n\t    Embed.prototype.getEmbedUrl = function (isBootstrap) {\r\n\t        var embedUrl = this.config.embedUrl || this.element.getAttribute(Embed.embedUrlAttribute);\r\n\t        if (isBootstrap && !embedUrl) {\r\n\t            // Prepare flow, embed url was not provided, use hostname to build embed url.\r\n\t            embedUrl = this.getDefaultEmbedUrl(this.config.hostname);\r\n\t        }\r\n\t        if (typeof embedUrl !== 'string' || embedUrl.length === 0) {\r\n\t            throw new Error(\"Embed Url is required, but it was not found. You must provide an embed url either as part of embed configuration or as attribute '\" + Embed.embedUrlAttribute + \"'.\");\r\n\t        }\r\n\t        return embedUrl;\r\n\t    };\r\n\t    /**\r\n\t     * @hidden\r\n\t     */\r\n\t    Embed.prototype.getDefaultEmbedUrl = function (hostname) {\r\n\t        if (!hostname) {\r\n\t            hostname = Embed.defaultEmbedHostName;\r\n\t        }\r\n\t        var endpoint = this.getDefaultEmbedUrlEndpoint();\r\n\t        // Trim spaces to fix user mistakes.\r\n\t        hostname = hostname.toLowerCase().trim();\r\n\t        if (hostname.indexOf(\"http://\") === 0) {\r\n\t            throw new Error(\"HTTP is not allowed. HTTPS is required\");\r\n\t        }\r\n\t        if (hostname.indexOf(\"https://\") === 0) {\r\n\t            return hostname + \"/\" + endpoint;\r\n\t        }\r\n\t        return \"https://\" + hostname + \"/\" + endpoint;\r\n\t    };\r\n\t    /**\r\n\t     * Gets a unique ID from the first available location: options, attribute.\r\n\t     * If neither is provided generate a unique string.\r\n\t     *\r\n\t     * @private\r\n\t     * @returns {string}\r\n\t     * @hidden\r\n\t     */\r\n\t    Embed.prototype.getUniqueId = function () {\r\n\t        return this.config.uniqueId || this.element.getAttribute(Embed.nameAttribute) || utils.createRandomString();\r\n\t    };\r\n\t    /**\r\n\t     * Gets the group ID from the first available location: options, embeddedUrl.\r\n\t     *\r\n\t     * @private\r\n\t     * @returns {string}\r\n\t     * @hidden\r\n\t     */\r\n\t    Embed.prototype.getGroupId = function () {\r\n\t        return this.config.groupId || Embed.findGroupIdFromEmbedUrl(this.config.embedUrl);\r\n\t    };\r\n\t    /**\r\n\t     * Requests the browser to render the component's iframe in fullscreen mode.\r\n\t     */\r\n\t    Embed.prototype.fullscreen = function () {\r\n\t        var requestFullScreen = this.iframe.requestFullscreen || this.iframe.msRequestFullscreen || this.iframe.mozRequestFullScreen || this.iframe.webkitRequestFullscreen;\r\n\t        requestFullScreen.call(this.iframe);\r\n\t    };\r\n\t    /**\r\n\t     * Requests the browser to exit fullscreen mode.\r\n\t     */\r\n\t    Embed.prototype.exitFullscreen = function () {\r\n\t        if (!this.isFullscreen(this.iframe)) {\r\n\t            return;\r\n\t        }\r\n\t        var exitFullscreen = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen || document.msExitFullscreen;\r\n\t        exitFullscreen.call(document);\r\n\t    };\r\n\t    /**\r\n\t     * Returns true if the iframe is rendered in fullscreen mode,\r\n\t     * otherwise returns false.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {HTMLIFrameElement} iframe\r\n\t     * @returns {boolean}\r\n\t     * @hidden\r\n\t     */\r\n\t    Embed.prototype.isFullscreen = function (iframe) {\r\n\t        var options = ['fullscreenElement', 'webkitFullscreenElement', 'mozFullscreenScreenElement', 'msFullscreenElement'];\r\n\t        return options.some(function (option) { return document[option] === iframe; });\r\n\t    };\r\n\t    /**\r\n\t     * Sets Iframe for embed\r\n\t     * @hidden\r\n\t     */\r\n\t    Embed.prototype.setIframe = function (isLoad, phasedRender, isBootstrap) {\r\n\t        var _this = this;\r\n\t        if (!this.iframe) {\r\n\t            var iframeContent = document.createElement(\"iframe\");\r\n\t            var embedUrl = this.config.uniqueId ? utils.addParamToUrl(this.config.embedUrl, 'uid', this.config.uniqueId) : this.config.embedUrl;\r\n\t            iframeContent.style.width = '100%';\r\n\t            iframeContent.style.height = '100%';\r\n\t            iframeContent.setAttribute(\"src\", embedUrl);\r\n\t            iframeContent.setAttribute(\"scrolling\", \"no\");\r\n\t            iframeContent.setAttribute(\"allowfullscreen\", \"true\");\r\n\t            var node = this.element;\r\n\t            while (node.firstChild) {\r\n\t                node.removeChild(node.firstChild);\r\n\t            }\r\n\t            node.appendChild(iframeContent);\r\n\t            this.iframe = node.firstChild;\r\n\t        }\r\n\t        if (isLoad) {\r\n\t            if (!isBootstrap) {\r\n\t                // Validate config if it's not a bootstrap case.\r\n\t                var errors = this.validate(this.config);\r\n\t                if (errors) {\r\n\t                    throw errors;\r\n\t                }\r\n\t            }\r\n\t            this.iframe.addEventListener('load', function () { return _this.load(_this.config, phasedRender); }, false);\r\n\t            if (this.service.getNumberOfComponents() <= Embed.maxFrontLoadTimes) {\r\n\t                this.frontLoadHandler = function () { return _this.frontLoadSendConfig(_this.config); };\r\n\t                // 'ready' event is fired by the embedded element (not by the iframe)\r\n\t                this.element.addEventListener('ready', this.frontLoadHandler, false);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.iframe.addEventListener('load', function () { return _this.createReport(_this.createConfig); }, false);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Set the component title for accessibility. In case of iframes, this method will change the iframe title.\r\n\t     */\r\n\t    Embed.prototype.setComponentTitle = function (title) {\r\n\t        if (!this.iframe) {\r\n\t            return;\r\n\t        }\r\n\t        if (title == null) {\r\n\t            this.iframe.removeAttribute(\"title\");\r\n\t        }\r\n\t        else {\r\n\t            this.iframe.setAttribute(\"title\", title);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Sets element's tabindex attribute\r\n\t     */\r\n\t    Embed.prototype.setComponentTabIndex = function (tabIndex) {\r\n\t        if (!this.element) {\r\n\t            return;\r\n\t        }\r\n\t        this.element.setAttribute(\"tabindex\", (tabIndex == null) ? \"0\" : tabIndex.toString());\r\n\t    };\r\n\t    /**\r\n\t     * Removes element's tabindex attribute\r\n\t     */\r\n\t    Embed.prototype.removeComponentTabIndex = function (tabIndex) {\r\n\t        if (!this.element) {\r\n\t            return;\r\n\t        }\r\n\t        this.element.removeAttribute(\"tabindex\");\r\n\t    };\r\n\t    /**\r\n\t     * Adds the ability to get groupId from url.\r\n\t     * By extracting the ID we can ensure that the ID is always explicitly provided as part of the load configuration.\r\n\t     *\r\n\t     * @hidden\r\n\t     * @static\r\n\t     * @param {string} url\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Embed.findGroupIdFromEmbedUrl = function (url) {\r\n\t        var groupIdRegEx = /groupId=\"?([^&]+)\"?/;\r\n\t        var groupIdMatch = url.match(groupIdRegEx);\r\n\t        var groupId;\r\n\t        if (groupIdMatch) {\r\n\t            groupId = groupIdMatch[1];\r\n\t        }\r\n\t        return groupId;\r\n\t    };\r\n\t    /**\r\n\t     * Sends the config for front load calls, after 'ready' message is received from the iframe\r\n\t     * @hidden\r\n\t     */\r\n\t    Embed.prototype.frontLoadSendConfig = function (config) {\r\n\t        if (!config.accessToken) {\r\n\t            return;\r\n\t        }\r\n\t        var errors = this.validate(config);\r\n\t        if (errors) {\r\n\t            throw errors;\r\n\t        }\r\n\t        // contentWindow must be initialized\r\n\t        if (this.iframe.contentWindow == null)\r\n\t            return;\r\n\t        return this.service.hpm.post(\"/frontload/config\", config, { uid: this.config.uniqueId }, this.iframe.contentWindow).then(function (response) {\r\n\t            return response.body;\r\n\t        }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /** @hidden */\r\n\t    Embed.allowedEvents = [\"loaded\", \"saved\", \"rendered\", \"saveAsTriggered\", \"error\", \"dataSelected\", \"buttonClicked\"];\r\n\t    /** @hidden */\r\n\t    Embed.accessTokenAttribute = 'powerbi-access-token';\r\n\t    /** @hidden */\r\n\t    Embed.embedUrlAttribute = 'powerbi-embed-url';\r\n\t    /** @hidden */\r\n\t    Embed.nameAttribute = 'powerbi-name';\r\n\t    /** @hidden */\r\n\t    Embed.typeAttribute = 'powerbi-type';\r\n\t    /** @hidden */\r\n\t    Embed.defaultEmbedHostName = \"https://app.powerbi.com\";\r\n\t    /** @hidden */\r\n\t    Embed.maxFrontLoadTimes = 2;\r\n\t    return Embed;\r\n\t}());\r\n\texports.Embed = Embed;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Raises a custom event with event data on the specified HTML element.\r\n\t *\r\n\t * @export\r\n\t * @param {HTMLElement} element\r\n\t * @param {string} eventName\r\n\t * @param {*} eventData\r\n\t */\r\n\tfunction raiseCustomEvent(element, eventName, eventData) {\r\n\t    var customEvent;\r\n\t    if (typeof CustomEvent === 'function') {\r\n\t        customEvent = new CustomEvent(eventName, {\r\n\t            detail: eventData,\r\n\t            bubbles: true,\r\n\t            cancelable: true\r\n\t        });\r\n\t    }\r\n\t    else {\r\n\t        customEvent = document.createEvent('CustomEvent');\r\n\t        customEvent.initCustomEvent(eventName, true, true, eventData);\r\n\t    }\r\n\t    element.dispatchEvent(customEvent);\r\n\t}\r\n\texports.raiseCustomEvent = raiseCustomEvent;\r\n\t/**\r\n\t * Finds the index of the first value in an array that matches the specified predicate.\r\n\t *\r\n\t * @export\r\n\t * @template T\r\n\t * @param {(x: T) => boolean} predicate\r\n\t * @param {T[]} xs\r\n\t * @returns {number}\r\n\t */\r\n\tfunction findIndex(predicate, xs) {\r\n\t    if (!Array.isArray(xs)) {\r\n\t        throw new Error(\"You attempted to call find with second parameter that was not an array. You passed: \" + xs);\r\n\t    }\r\n\t    var index;\r\n\t    xs.some(function (x, i) {\r\n\t        if (predicate(x)) {\r\n\t            index = i;\r\n\t            return true;\r\n\t        }\r\n\t    });\r\n\t    return index;\r\n\t}\r\n\texports.findIndex = findIndex;\r\n\t/**\r\n\t * Finds the first value in an array that matches the specified predicate.\r\n\t *\r\n\t * @export\r\n\t * @template T\r\n\t * @param {(x: T) => boolean} predicate\r\n\t * @param {T[]} xs\r\n\t * @returns {T}\r\n\t */\r\n\tfunction find(predicate, xs) {\r\n\t    var index = findIndex(predicate, xs);\r\n\t    return xs[index];\r\n\t}\r\n\texports.find = find;\r\n\tfunction remove(predicate, xs) {\r\n\t    var index = findIndex(predicate, xs);\r\n\t    xs.splice(index, 1);\r\n\t}\r\n\texports.remove = remove;\r\n\t// See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n\t// TODO: replace in favor of using polyfill\r\n\t/**\r\n\t * Copies the values of all enumerable properties from one or more source objects to a target object, and returns the target object.\r\n\t *\r\n\t * @export\r\n\t * @param {any} args\r\n\t * @returns\r\n\t */\r\n\tfunction assign() {\r\n\t    var args = [];\r\n\t    for (var _i = 0; _i < arguments.length; _i++) {\r\n\t        args[_i - 0] = arguments[_i];\r\n\t    }\r\n\t    var target = args[0];\r\n\t    'use strict';\r\n\t    if (target === undefined || target === null) {\r\n\t        throw new TypeError('Cannot convert undefined or null to object');\r\n\t    }\r\n\t    var output = Object(target);\r\n\t    for (var index = 1; index < arguments.length; index++) {\r\n\t        var source = arguments[index];\r\n\t        if (source !== undefined && source !== null) {\r\n\t            for (var nextKey in source) {\r\n\t                if (source.hasOwnProperty(nextKey)) {\r\n\t                    output[nextKey] = source[nextKey];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    return output;\r\n\t}\r\n\texports.assign = assign;\r\n\t/**\r\n\t * Generates a random 5 to 6 character string.\r\n\t *\r\n\t * @export\r\n\t * @returns {string}\r\n\t */\r\n\tfunction createRandomString() {\r\n\t    return getRandomValue().toString(36).substring(1);\r\n\t}\r\n\texports.createRandomString = createRandomString;\r\n\t/**\r\n\t * Generates a 20 charachter uuid.\r\n\t *\r\n\t * @export\r\n\t * @returns {string}\r\n\t */\r\n\tfunction generateUUID() {\r\n\t    var d = new Date().getTime();\r\n\t    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\r\n\t        d += performance.now();\r\n\t    }\r\n\t    return 'xxxxxxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n\t        // Generate a random number, scaled from 0 to 15.\r\n\t        var r = (getRandomValue() % 16);\r\n\t        // Shift 4 times to divide by 16\r\n\t        d >>= 4;\r\n\t        return r.toString(16);\r\n\t    });\r\n\t}\r\n\texports.generateUUID = generateUUID;\r\n\t/**\r\n\t * Adds a parameter to the given url\r\n\t *\r\n\t * @export\r\n\t * @param {string} url\r\n\t * @param {string} paramName\r\n\t * @param {string} value\r\n\t * @returns {string}\r\n\t */\r\n\tfunction addParamToUrl(url, paramName, value) {\r\n\t    var parameterPrefix = url.indexOf('?') > 0 ? '&' : '?';\r\n\t    url += parameterPrefix + paramName + '=' + value;\r\n\t    return url;\r\n\t}\r\n\texports.addParamToUrl = addParamToUrl;\r\n\t/**\r\n\t * Checks if the report is saved.\r\n\t *\r\n\t * @export\r\n\t * @param {HttpPostMessage} hpm\r\n\t * @param {string} uid\r\n\t * @param {Window} contentWindow\r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tfunction isSavedInternal(hpm, uid, contentWindow) {\r\n\t    return hpm.get('/report/hasUnsavedChanges', { uid: uid }, contentWindow)\r\n\t        .then(function (response) { return !response.body; }, function (response) {\r\n\t        throw response.body;\r\n\t    });\r\n\t}\r\n\texports.isSavedInternal = isSavedInternal;\r\n\t/**\r\n\t * Checks if the embed url is for RDL report.\r\n\t *\r\n\t * @export\r\n\t * @param {string} embedUrl\r\n\t * @returns {boolean}\r\n\t */\r\n\tfunction isRDLEmbed(embedUrl) {\r\n\t    return embedUrl.toLowerCase().indexOf(\"/rdlembed?\") >= 0;\r\n\t}\r\n\texports.isRDLEmbed = isRDLEmbed;\r\n\t/**\r\n\t * Checks if the embed url contains autoAuth=true.\r\n\t *\r\n\t * @export\r\n\t * @param {string} embedUrl\r\n\t * @returns {boolean}\r\n\t */\r\n\tfunction autoAuthInEmbedUrl(embedUrl) {\r\n\t    return embedUrl && decodeURIComponent(embedUrl).toLowerCase().indexOf(\"autoauth=true\") >= 0;\r\n\t}\r\n\texports.autoAuthInEmbedUrl = autoAuthInEmbedUrl;\r\n\t/**\r\n\t * Returns random number\r\n\t */\r\n\tfunction getRandomValue() {\r\n\t    // window.msCrypto for IE\r\n\t    var cryptoObj = window.crypto || window.msCrypto;\r\n\t    var randomValueArray = new Uint32Array(1);\r\n\t    cryptoObj.getRandomValues(randomValueArray);\r\n\t    return randomValueArray[0];\r\n\t}\r\n\texports.getRandomValue = getRandomValue;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @hidden\r\n\t */\r\n\tvar config = {\r\n\t    version: '2.11.0',\r\n\t    type: 'js'\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = config;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! powerbi-models v1.3.3 | (c) 2016 Microsoft Corporation MIT */\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse {}\n\t})(window, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId]) {\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/ \t\t}\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\ti: moduleId,\n\t/******/ \t\t\tl: false,\n\t/******/ \t\t\texports: {}\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.l = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// define getter function for harmony exports\n\t/******/ \t__webpack_require__.d = function(exports, name, getter) {\n\t/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n\t/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n\t/******/ \t\t}\n\t/******/ \t};\n\t/******/\n\t/******/ \t// define __esModule on exports\n\t/******/ \t__webpack_require__.r = function(exports) {\n\t/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t/******/ \t\t}\n\t/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n\t/******/ \t};\n\t/******/\n\t/******/ \t// create a fake namespace object\n\t/******/ \t// mode & 1: value is a module id, require it\n\t/******/ \t// mode & 2: merge all properties of value into the ns\n\t/******/ \t// mode & 4: return value when already ns object\n\t/******/ \t// mode & 8|1: behave like require\n\t/******/ \t__webpack_require__.t = function(value, mode) {\n\t/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n\t/******/ \t\tif(mode & 8) return value;\n\t/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n\t/******/ \t\tvar ns = Object.create(null);\n\t/******/ \t\t__webpack_require__.r(ns);\n\t/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n\t/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n\t/******/ \t\treturn ns;\n\t/******/ \t};\n\t/******/\n\t/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t/******/ \t__webpack_require__.n = function(module) {\n\t/******/ \t\tvar getter = module && module.__esModule ?\n\t/******/ \t\t\tfunction getDefault() { return module['default']; } :\n\t/******/ \t\t\tfunction getModuleExports() { return module; };\n\t/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n\t/******/ \t\treturn getter;\n\t/******/ \t};\n\t/******/\n\t/******/ \t// Object.prototype.hasOwnProperty.call\n\t/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.Validators = __webpack_require__(1).Validators;\r\n\tvar TraceType;\r\n\t(function (TraceType) {\r\n\t    TraceType[TraceType[\"Information\"] = 0] = \"Information\";\r\n\t    TraceType[TraceType[\"Verbose\"] = 1] = \"Verbose\";\r\n\t    TraceType[TraceType[\"Warning\"] = 2] = \"Warning\";\r\n\t    TraceType[TraceType[\"Error\"] = 3] = \"Error\";\r\n\t    TraceType[TraceType[\"ExpectedError\"] = 4] = \"ExpectedError\";\r\n\t    TraceType[TraceType[\"UnexpectedError\"] = 5] = \"UnexpectedError\";\r\n\t    TraceType[TraceType[\"Fatal\"] = 6] = \"Fatal\";\r\n\t})(TraceType = exports.TraceType || (exports.TraceType = {}));\r\n\tvar PageSizeType;\r\n\t(function (PageSizeType) {\r\n\t    PageSizeType[PageSizeType[\"Widescreen\"] = 0] = \"Widescreen\";\r\n\t    PageSizeType[PageSizeType[\"Standard\"] = 1] = \"Standard\";\r\n\t    PageSizeType[PageSizeType[\"Cortana\"] = 2] = \"Cortana\";\r\n\t    PageSizeType[PageSizeType[\"Letter\"] = 3] = \"Letter\";\r\n\t    PageSizeType[PageSizeType[\"Custom\"] = 4] = \"Custom\";\r\n\t})(PageSizeType = exports.PageSizeType || (exports.PageSizeType = {}));\r\n\tvar DisplayOption;\r\n\t(function (DisplayOption) {\r\n\t    DisplayOption[DisplayOption[\"FitToPage\"] = 0] = \"FitToPage\";\r\n\t    DisplayOption[DisplayOption[\"FitToWidth\"] = 1] = \"FitToWidth\";\r\n\t    DisplayOption[DisplayOption[\"ActualSize\"] = 2] = \"ActualSize\";\r\n\t})(DisplayOption = exports.DisplayOption || (exports.DisplayOption = {}));\r\n\tvar BackgroundType;\r\n\t(function (BackgroundType) {\r\n\t    BackgroundType[BackgroundType[\"Default\"] = 0] = \"Default\";\r\n\t    BackgroundType[BackgroundType[\"Transparent\"] = 1] = \"Transparent\";\r\n\t})(BackgroundType = exports.BackgroundType || (exports.BackgroundType = {}));\r\n\tvar VisualContainerDisplayMode;\r\n\t(function (VisualContainerDisplayMode) {\r\n\t    VisualContainerDisplayMode[VisualContainerDisplayMode[\"Visible\"] = 0] = \"Visible\";\r\n\t    VisualContainerDisplayMode[VisualContainerDisplayMode[\"Hidden\"] = 1] = \"Hidden\";\r\n\t})(VisualContainerDisplayMode = exports.VisualContainerDisplayMode || (exports.VisualContainerDisplayMode = {}));\r\n\tvar LayoutType;\r\n\t(function (LayoutType) {\r\n\t    LayoutType[LayoutType[\"Master\"] = 0] = \"Master\";\r\n\t    LayoutType[LayoutType[\"Custom\"] = 1] = \"Custom\";\r\n\t    LayoutType[LayoutType[\"MobilePortrait\"] = 2] = \"MobilePortrait\";\r\n\t    LayoutType[LayoutType[\"MobileLandscape\"] = 3] = \"MobileLandscape\";\r\n\t})(LayoutType = exports.LayoutType || (exports.LayoutType = {}));\r\n\tvar HyperlinkClickBehavior;\r\n\t(function (HyperlinkClickBehavior) {\r\n\t    HyperlinkClickBehavior[HyperlinkClickBehavior[\"Navigate\"] = 0] = \"Navigate\";\r\n\t    HyperlinkClickBehavior[HyperlinkClickBehavior[\"NavigateAndRaiseEvent\"] = 1] = \"NavigateAndRaiseEvent\";\r\n\t    HyperlinkClickBehavior[HyperlinkClickBehavior[\"RaiseEvent\"] = 2] = \"RaiseEvent\";\r\n\t})(HyperlinkClickBehavior = exports.HyperlinkClickBehavior || (exports.HyperlinkClickBehavior = {}));\r\n\tvar SectionVisibility;\r\n\t(function (SectionVisibility) {\r\n\t    SectionVisibility[SectionVisibility[\"AlwaysVisible\"] = 0] = \"AlwaysVisible\";\r\n\t    SectionVisibility[SectionVisibility[\"HiddenInViewMode\"] = 1] = \"HiddenInViewMode\";\r\n\t})(SectionVisibility = exports.SectionVisibility || (exports.SectionVisibility = {}));\r\n\tvar Permissions;\r\n\t(function (Permissions) {\r\n\t    Permissions[Permissions[\"Read\"] = 0] = \"Read\";\r\n\t    Permissions[Permissions[\"ReadWrite\"] = 1] = \"ReadWrite\";\r\n\t    Permissions[Permissions[\"Copy\"] = 2] = \"Copy\";\r\n\t    Permissions[Permissions[\"Create\"] = 4] = \"Create\";\r\n\t    Permissions[Permissions[\"All\"] = 7] = \"All\";\r\n\t})(Permissions = exports.Permissions || (exports.Permissions = {}));\r\n\tvar ViewMode;\r\n\t(function (ViewMode) {\r\n\t    ViewMode[ViewMode[\"View\"] = 0] = \"View\";\r\n\t    ViewMode[ViewMode[\"Edit\"] = 1] = \"Edit\";\r\n\t})(ViewMode = exports.ViewMode || (exports.ViewMode = {}));\r\n\tvar TokenType;\r\n\t(function (TokenType) {\r\n\t    TokenType[TokenType[\"Aad\"] = 0] = \"Aad\";\r\n\t    TokenType[TokenType[\"Embed\"] = 1] = \"Embed\";\r\n\t})(TokenType = exports.TokenType || (exports.TokenType = {}));\r\n\tvar ContrastMode;\r\n\t(function (ContrastMode) {\r\n\t    ContrastMode[ContrastMode[\"None\"] = 0] = \"None\";\r\n\t    ContrastMode[ContrastMode[\"HighContrast1\"] = 1] = \"HighContrast1\";\r\n\t    ContrastMode[ContrastMode[\"HighContrast2\"] = 2] = \"HighContrast2\";\r\n\t    ContrastMode[ContrastMode[\"HighContrastBlack\"] = 3] = \"HighContrastBlack\";\r\n\t    ContrastMode[ContrastMode[\"HighContrastWhite\"] = 4] = \"HighContrastWhite\";\r\n\t})(ContrastMode = exports.ContrastMode || (exports.ContrastMode = {}));\r\n\tvar MenuLocation;\r\n\t(function (MenuLocation) {\r\n\t    MenuLocation[MenuLocation[\"Bottom\"] = 0] = \"Bottom\";\r\n\t    MenuLocation[MenuLocation[\"Top\"] = 1] = \"Top\";\r\n\t})(MenuLocation = exports.MenuLocation || (exports.MenuLocation = {}));\r\n\tvar FiltersLevel;\r\n\t(function (FiltersLevel) {\r\n\t    FiltersLevel[FiltersLevel[\"Report\"] = 0] = \"Report\";\r\n\t    FiltersLevel[FiltersLevel[\"Page\"] = 1] = \"Page\";\r\n\t    FiltersLevel[FiltersLevel[\"Visual\"] = 2] = \"Visual\";\r\n\t})(FiltersLevel = exports.FiltersLevel || (exports.FiltersLevel = {}));\r\n\tvar FilterType;\r\n\t(function (FilterType) {\r\n\t    FilterType[FilterType[\"Advanced\"] = 0] = \"Advanced\";\r\n\t    FilterType[FilterType[\"Basic\"] = 1] = \"Basic\";\r\n\t    FilterType[FilterType[\"Unknown\"] = 2] = \"Unknown\";\r\n\t    FilterType[FilterType[\"IncludeExclude\"] = 3] = \"IncludeExclude\";\r\n\t    FilterType[FilterType[\"RelativeDate\"] = 4] = \"RelativeDate\";\r\n\t    FilterType[FilterType[\"TopN\"] = 5] = \"TopN\";\r\n\t    FilterType[FilterType[\"Tuple\"] = 6] = \"Tuple\";\r\n\t})(FilterType = exports.FilterType || (exports.FilterType = {}));\r\n\tvar RelativeDateFilterTimeUnit;\r\n\t(function (RelativeDateFilterTimeUnit) {\r\n\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"Days\"] = 0] = \"Days\";\r\n\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"Weeks\"] = 1] = \"Weeks\";\r\n\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"CalendarWeeks\"] = 2] = \"CalendarWeeks\";\r\n\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"Months\"] = 3] = \"Months\";\r\n\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"CalendarMonths\"] = 4] = \"CalendarMonths\";\r\n\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"Years\"] = 5] = \"Years\";\r\n\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"CalendarYears\"] = 6] = \"CalendarYears\";\r\n\t})(RelativeDateFilterTimeUnit = exports.RelativeDateFilterTimeUnit || (exports.RelativeDateFilterTimeUnit = {}));\r\n\tvar RelativeDateOperators;\r\n\t(function (RelativeDateOperators) {\r\n\t    RelativeDateOperators[RelativeDateOperators[\"InLast\"] = 0] = \"InLast\";\r\n\t    RelativeDateOperators[RelativeDateOperators[\"InThis\"] = 1] = \"InThis\";\r\n\t    RelativeDateOperators[RelativeDateOperators[\"InNext\"] = 2] = \"InNext\";\r\n\t})(RelativeDateOperators = exports.RelativeDateOperators || (exports.RelativeDateOperators = {}));\r\n\tvar Filter = /** @class */ (function () {\r\n\t    function Filter(target, filterType) {\r\n\t        this.target = target;\r\n\t        this.filterType = filterType;\r\n\t    }\r\n\t    Filter.prototype.toJSON = function () {\r\n\t        var filter = {\r\n\t            $schema: this.schemaUrl,\r\n\t            target: this.target,\r\n\t            filterType: this.filterType\r\n\t        };\r\n\t        // Add displaySettings only when defined\r\n\t        if (this.displaySettings !== undefined) {\r\n\t            filter.displaySettings = this.displaySettings;\r\n\t        }\r\n\t        return filter;\r\n\t    };\r\n\t    ;\r\n\t    return Filter;\r\n\t}());\r\n\texports.Filter = Filter;\r\n\tvar NotSupportedFilter = /** @class */ (function (_super) {\r\n\t    __extends(NotSupportedFilter, _super);\r\n\t    function NotSupportedFilter(target, message, notSupportedTypeName) {\r\n\t        var _this = _super.call(this, target, FilterType.Unknown) || this;\r\n\t        _this.message = message;\r\n\t        _this.notSupportedTypeName = notSupportedTypeName;\r\n\t        _this.schemaUrl = NotSupportedFilter.schemaUrl;\r\n\t        return _this;\r\n\t    }\r\n\t    NotSupportedFilter.prototype.toJSON = function () {\r\n\t        var filter = _super.prototype.toJSON.call(this);\r\n\t        filter.message = this.message;\r\n\t        filter.notSupportedTypeName = this.notSupportedTypeName;\r\n\t        return filter;\r\n\t    };\r\n\t    NotSupportedFilter.schemaUrl = \"http://powerbi.com/product/schema#notSupported\";\r\n\t    return NotSupportedFilter;\r\n\t}(Filter));\r\n\texports.NotSupportedFilter = NotSupportedFilter;\r\n\tvar IncludeExcludeFilter = /** @class */ (function (_super) {\r\n\t    __extends(IncludeExcludeFilter, _super);\r\n\t    function IncludeExcludeFilter(target, isExclude, values) {\r\n\t        var _this = _super.call(this, target, FilterType.IncludeExclude) || this;\r\n\t        _this.values = values;\r\n\t        _this.isExclude = isExclude;\r\n\t        _this.schemaUrl = IncludeExcludeFilter.schemaUrl;\r\n\t        return _this;\r\n\t    }\r\n\t    IncludeExcludeFilter.prototype.toJSON = function () {\r\n\t        var filter = _super.prototype.toJSON.call(this);\r\n\t        filter.isExclude = this.isExclude;\r\n\t        filter.values = this.values;\r\n\t        return filter;\r\n\t    };\r\n\t    IncludeExcludeFilter.schemaUrl = \"http://powerbi.com/product/schema#includeExclude\";\r\n\t    return IncludeExcludeFilter;\r\n\t}(Filter));\r\n\texports.IncludeExcludeFilter = IncludeExcludeFilter;\r\n\tvar TopNFilter = /** @class */ (function (_super) {\r\n\t    __extends(TopNFilter, _super);\r\n\t    function TopNFilter(target, operator, itemCount, orderBy) {\r\n\t        var _this = _super.call(this, target, FilterType.TopN) || this;\r\n\t        _this.operator = operator;\r\n\t        _this.itemCount = itemCount;\r\n\t        _this.schemaUrl = TopNFilter.schemaUrl;\r\n\t        _this.orderBy = orderBy;\r\n\t        return _this;\r\n\t    }\r\n\t    TopNFilter.prototype.toJSON = function () {\r\n\t        var filter = _super.prototype.toJSON.call(this);\r\n\t        filter.operator = this.operator;\r\n\t        filter.itemCount = this.itemCount;\r\n\t        filter.orderBy = this.orderBy;\r\n\t        return filter;\r\n\t    };\r\n\t    TopNFilter.schemaUrl = \"http://powerbi.com/product/schema#topN\";\r\n\t    return TopNFilter;\r\n\t}(Filter));\r\n\texports.TopNFilter = TopNFilter;\r\n\tvar RelativeDateFilter = /** @class */ (function (_super) {\r\n\t    __extends(RelativeDateFilter, _super);\r\n\t    function RelativeDateFilter(target, operator, timeUnitsCount, timeUnitType, includeToday) {\r\n\t        var _this = _super.call(this, target, FilterType.RelativeDate) || this;\r\n\t        _this.operator = operator;\r\n\t        _this.timeUnitsCount = timeUnitsCount;\r\n\t        _this.timeUnitType = timeUnitType;\r\n\t        _this.includeToday = includeToday;\r\n\t        _this.schemaUrl = RelativeDateFilter.schemaUrl;\r\n\t        return _this;\r\n\t    }\r\n\t    RelativeDateFilter.prototype.toJSON = function () {\r\n\t        var filter = _super.prototype.toJSON.call(this);\r\n\t        filter.operator = this.operator;\r\n\t        filter.timeUnitsCount = this.timeUnitsCount;\r\n\t        filter.timeUnitType = this.timeUnitType;\r\n\t        filter.includeToday = this.includeToday;\r\n\t        return filter;\r\n\t    };\r\n\t    RelativeDateFilter.schemaUrl = \"http://powerbi.com/product/schema#relativeDate\";\r\n\t    return RelativeDateFilter;\r\n\t}(Filter));\r\n\texports.RelativeDateFilter = RelativeDateFilter;\r\n\tvar BasicFilter = /** @class */ (function (_super) {\r\n\t    __extends(BasicFilter, _super);\r\n\t    function BasicFilter(target, operator) {\r\n\t        var values = [];\r\n\t        for (var _i = 2; _i < arguments.length; _i++) {\r\n\t            values[_i - 2] = arguments[_i];\r\n\t        }\r\n\t        var _this = _super.call(this, target, FilterType.Basic) || this;\r\n\t        _this.operator = operator;\r\n\t        _this.schemaUrl = BasicFilter.schemaUrl;\r\n\t        if (values.length === 0 && operator !== \"All\") {\r\n\t            throw new Error(\"values must be a non-empty array unless your operator is \\\"All\\\".\");\r\n\t        }\r\n\t        /**\r\n\t         * Accept values as array instead of as individual arguments\r\n\t         * new BasicFilter('a', 'b', 1, 2);\r\n\t         * new BasicFilter('a', 'b', [1,2]);\r\n\t         */\r\n\t        if (Array.isArray(values[0])) {\r\n\t            _this.values = values[0];\r\n\t        }\r\n\t        else {\r\n\t            _this.values = values;\r\n\t        }\r\n\t        return _this;\r\n\t    }\r\n\t    BasicFilter.prototype.toJSON = function () {\r\n\t        var filter = _super.prototype.toJSON.call(this);\r\n\t        filter.operator = this.operator;\r\n\t        filter.values = this.values;\r\n\t        filter.requireSingleSelection = !!this.requireSingleSelection;\r\n\t        return filter;\r\n\t    };\r\n\t    BasicFilter.schemaUrl = \"http://powerbi.com/product/schema#basic\";\r\n\t    return BasicFilter;\r\n\t}(Filter));\r\n\texports.BasicFilter = BasicFilter;\r\n\tvar BasicFilterWithKeys = /** @class */ (function (_super) {\r\n\t    __extends(BasicFilterWithKeys, _super);\r\n\t    function BasicFilterWithKeys(target, operator, values, keyValues) {\r\n\t        var _this = _super.call(this, target, operator, values) || this;\r\n\t        _this.keyValues = keyValues;\r\n\t        _this.target = target;\r\n\t        var numberOfKeys = target.keys ? target.keys.length : 0;\r\n\t        if (numberOfKeys > 0 && !keyValues) {\r\n\t            throw new Error(\"You should pass the values to be filtered for each key. You passed: no values and \" + numberOfKeys + \" keys\");\r\n\t        }\r\n\t        if (numberOfKeys === 0 && keyValues && keyValues.length > 0) {\r\n\t            throw new Error(\"You passed key values but your target object doesn't contain the keys to be filtered\");\r\n\t        }\r\n\t        for (var i = 0; i < _this.keyValues.length; i++) {\r\n\t            if (_this.keyValues[i]) {\r\n\t                var lengthOfArray = _this.keyValues[i].length;\r\n\t                if (lengthOfArray !== numberOfKeys) {\r\n\t                    throw new Error(\"Each tuple of key values should contain a value for each of the keys. You passed: \" + lengthOfArray + \" values and \" + numberOfKeys + \" keys\");\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return _this;\r\n\t    }\r\n\t    BasicFilterWithKeys.prototype.toJSON = function () {\r\n\t        var filter = _super.prototype.toJSON.call(this);\r\n\t        filter.keyValues = this.keyValues;\r\n\t        return filter;\r\n\t    };\r\n\t    return BasicFilterWithKeys;\r\n\t}(BasicFilter));\r\n\texports.BasicFilterWithKeys = BasicFilterWithKeys;\r\n\tvar TupleFilter = /** @class */ (function (_super) {\r\n\t    __extends(TupleFilter, _super);\r\n\t    function TupleFilter(target, operator, values) {\r\n\t        var _this = _super.call(this, target, FilterType.Tuple) || this;\r\n\t        _this.operator = operator;\r\n\t        _this.schemaUrl = TupleFilter.schemaUrl;\r\n\t        _this.values = values;\r\n\t        return _this;\r\n\t    }\r\n\t    TupleFilter.prototype.toJSON = function () {\r\n\t        var filter = _super.prototype.toJSON.call(this);\r\n\t        filter.operator = this.operator;\r\n\t        filter.values = this.values;\r\n\t        filter.target = this.target;\r\n\t        return filter;\r\n\t    };\r\n\t    TupleFilter.schemaUrl = \"http://powerbi.com/product/schema#tuple\";\r\n\t    return TupleFilter;\r\n\t}(Filter));\r\n\texports.TupleFilter = TupleFilter;\r\n\tvar AdvancedFilter = /** @class */ (function (_super) {\r\n\t    __extends(AdvancedFilter, _super);\r\n\t    function AdvancedFilter(target, logicalOperator) {\r\n\t        var conditions = [];\r\n\t        for (var _i = 2; _i < arguments.length; _i++) {\r\n\t            conditions[_i - 2] = arguments[_i];\r\n\t        }\r\n\t        var _this = _super.call(this, target, FilterType.Advanced) || this;\r\n\t        _this.schemaUrl = AdvancedFilter.schemaUrl;\r\n\t        // Guard statements\r\n\t        if (typeof logicalOperator !== \"string\" || logicalOperator.length === 0) {\r\n\t            // TODO: It would be nicer to list out the possible logical operators.\r\n\t            throw new Error(\"logicalOperator must be a valid operator, You passed: \" + logicalOperator);\r\n\t        }\r\n\t        _this.logicalOperator = logicalOperator;\r\n\t        var extractedConditions;\r\n\t        /**\r\n\t         * Accept conditions as array instead of as individual arguments\r\n\t         * new AdvancedFilter('a', 'b', \"And\", { value: 1, operator: \"Equals\" }, { value: 2, operator: \"IsGreaterThan\" });\r\n\t         * new AdvancedFilter('a', 'b', \"And\", [{ value: 1, operator: \"Equals\" }, { value: 2, operator: \"IsGreaterThan\" }]);\r\n\t         */\r\n\t        if (Array.isArray(conditions[0])) {\r\n\t            extractedConditions = conditions[0];\r\n\t        }\r\n\t        else {\r\n\t            extractedConditions = conditions;\r\n\t        }\r\n\t        if (extractedConditions.length === 0) {\r\n\t            throw new Error(\"conditions must be a non-empty array. You passed: \" + conditions);\r\n\t        }\r\n\t        if (extractedConditions.length > 2) {\r\n\t            throw new Error(\"AdvancedFilters may not have more than two conditions. You passed: \" + conditions.length);\r\n\t        }\r\n\t        if (extractedConditions.length === 1 && logicalOperator !== \"And\") {\r\n\t            throw new Error(\"Logical Operator must be \\\"And\\\" when there is only one condition provided\");\r\n\t        }\r\n\t        _this.conditions = extractedConditions;\r\n\t        return _this;\r\n\t    }\r\n\t    AdvancedFilter.prototype.toJSON = function () {\r\n\t        var filter = _super.prototype.toJSON.call(this);\r\n\t        filter.logicalOperator = this.logicalOperator;\r\n\t        filter.conditions = this.conditions;\r\n\t        return filter;\r\n\t    };\r\n\t    AdvancedFilter.schemaUrl = \"http://powerbi.com/product/schema#advanced\";\r\n\t    return AdvancedFilter;\r\n\t}(Filter));\r\n\texports.AdvancedFilter = AdvancedFilter;\r\n\tfunction isFilterKeyColumnsTarget(target) {\r\n\t    return isColumn(target) && !!target.keys;\r\n\t}\r\n\texports.isFilterKeyColumnsTarget = isFilterKeyColumnsTarget;\r\n\tfunction isBasicFilterWithKeys(filter) {\r\n\t    return getFilterType(filter) === FilterType.Basic && !!filter.keyValues;\r\n\t}\r\n\texports.isBasicFilterWithKeys = isBasicFilterWithKeys;\r\n\tfunction getFilterType(filter) {\r\n\t    if (filter.filterType) {\r\n\t        return filter.filterType;\r\n\t    }\r\n\t    var basicFilter = filter;\r\n\t    var advancedFilter = filter;\r\n\t    if ((typeof basicFilter.operator === \"string\")\r\n\t        && (Array.isArray(basicFilter.values))) {\r\n\t        return FilterType.Basic;\r\n\t    }\r\n\t    else if ((typeof advancedFilter.logicalOperator === \"string\")\r\n\t        && (Array.isArray(advancedFilter.conditions))) {\r\n\t        return FilterType.Advanced;\r\n\t    }\r\n\t    else {\r\n\t        return FilterType.Unknown;\r\n\t    }\r\n\t}\r\n\texports.getFilterType = getFilterType;\r\n\tfunction isMeasure(arg) {\r\n\t    return arg.table !== undefined && arg.measure !== undefined;\r\n\t}\r\n\texports.isMeasure = isMeasure;\r\n\tfunction isColumn(arg) {\r\n\t    return !!(arg.table && arg.column && !arg.aggregationFunction);\r\n\t}\r\n\texports.isColumn = isColumn;\r\n\tfunction isHierarchyLevel(arg) {\r\n\t    return !!(arg.table && arg.hierarchy && arg.hierarchyLevel && !arg.aggregationFunction);\r\n\t}\r\n\texports.isHierarchyLevel = isHierarchyLevel;\r\n\tfunction isHierarchyLevelAggr(arg) {\r\n\t    return !!(arg.table && arg.hierarchy && arg.hierarchyLevel && arg.aggregationFunction);\r\n\t}\r\n\texports.isHierarchyLevelAggr = isHierarchyLevelAggr;\r\n\tfunction isColumnAggr(arg) {\r\n\t    return !!(arg.table && arg.column && arg.aggregationFunction);\r\n\t}\r\n\texports.isColumnAggr = isColumnAggr;\r\n\tvar QnaMode;\r\n\t(function (QnaMode) {\r\n\t    QnaMode[QnaMode[\"Interactive\"] = 0] = \"Interactive\";\r\n\t    QnaMode[QnaMode[\"ResultOnly\"] = 1] = \"ResultOnly\";\r\n\t})(QnaMode = exports.QnaMode || (exports.QnaMode = {}));\r\n\tvar ExportDataType;\r\n\t(function (ExportDataType) {\r\n\t    ExportDataType[ExportDataType[\"Summarized\"] = 0] = \"Summarized\";\r\n\t    ExportDataType[ExportDataType[\"Underlying\"] = 1] = \"Underlying\";\r\n\t})(ExportDataType = exports.ExportDataType || (exports.ExportDataType = {}));\r\n\tvar BookmarksPlayMode;\r\n\t(function (BookmarksPlayMode) {\r\n\t    BookmarksPlayMode[BookmarksPlayMode[\"Off\"] = 0] = \"Off\";\r\n\t    BookmarksPlayMode[BookmarksPlayMode[\"Presentation\"] = 1] = \"Presentation\";\r\n\t})(BookmarksPlayMode = exports.BookmarksPlayMode || (exports.BookmarksPlayMode = {}));\r\n\t// This is not an enum because enum strings require\r\n\t// us to upgrade typeScript version and change SDK build definition\r\n\texports.CommonErrorCodes = {\r\n\t    TokenExpired: 'TokenExpired',\r\n\t    NotFound: 'PowerBIEntityNotFound',\r\n\t    InvalidParameters: 'Invalid parameters',\r\n\t    LoadReportFailed: 'LoadReportFailed',\r\n\t    NotAuthorized: 'PowerBINotAuthorizedException',\r\n\t    FailedToLoadModel: 'ExplorationContainer_FailedToLoadModel_DefaultDetails',\r\n\t};\r\n\texports.TextAlignment = {\r\n\t    Left: 'left',\r\n\t    Center: 'center',\r\n\t    Right: 'right',\r\n\t};\r\n\texports.LegendPosition = {\r\n\t    Top: 'Top',\r\n\t    Bottom: 'Bottom',\r\n\t    Right: 'Right',\r\n\t    Left: 'Left',\r\n\t    TopCenter: 'TopCenter',\r\n\t    BottomCenter: 'BottomCenter',\r\n\t    RightCenter: 'RightCenter',\r\n\t    LeftCenter: 'LeftCenter',\r\n\t};\r\n\tvar SortDirection;\r\n\t(function (SortDirection) {\r\n\t    SortDirection[SortDirection[\"Ascending\"] = 1] = \"Ascending\";\r\n\t    SortDirection[SortDirection[\"Descending\"] = 2] = \"Descending\";\r\n\t})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\r\n\tvar Selector = /** @class */ (function () {\r\n\t    function Selector(schema) {\r\n\t        this.$schema = schema;\r\n\t    }\r\n\t    Selector.prototype.toJSON = function () {\r\n\t        return {\r\n\t            $schema: this.$schema\r\n\t        };\r\n\t    };\r\n\t    ;\r\n\t    return Selector;\r\n\t}());\r\n\texports.Selector = Selector;\r\n\tvar PageSelector = /** @class */ (function (_super) {\r\n\t    __extends(PageSelector, _super);\r\n\t    function PageSelector(pageName) {\r\n\t        var _this = _super.call(this, PageSelector.schemaUrl) || this;\r\n\t        _this.pageName = pageName;\r\n\t        return _this;\r\n\t    }\r\n\t    PageSelector.prototype.toJSON = function () {\r\n\t        var selector = _super.prototype.toJSON.call(this);\r\n\t        selector.pageName = this.pageName;\r\n\t        return selector;\r\n\t    };\r\n\t    PageSelector.schemaUrl = \"http://powerbi.com/product/schema#pageSelector\";\r\n\t    return PageSelector;\r\n\t}(Selector));\r\n\texports.PageSelector = PageSelector;\r\n\tvar VisualSelector = /** @class */ (function (_super) {\r\n\t    __extends(VisualSelector, _super);\r\n\t    function VisualSelector(visualName) {\r\n\t        var _this = _super.call(this, VisualSelector.schemaUrl) || this;\r\n\t        _this.visualName = visualName;\r\n\t        return _this;\r\n\t    }\r\n\t    VisualSelector.prototype.toJSON = function () {\r\n\t        var selector = _super.prototype.toJSON.call(this);\r\n\t        selector.visualName = this.visualName;\r\n\t        return selector;\r\n\t    };\r\n\t    VisualSelector.schemaUrl = \"http://powerbi.com/product/schema#visualSelector\";\r\n\t    return VisualSelector;\r\n\t}(Selector));\r\n\texports.VisualSelector = VisualSelector;\r\n\tvar VisualTypeSelector = /** @class */ (function (_super) {\r\n\t    __extends(VisualTypeSelector, _super);\r\n\t    function VisualTypeSelector(visualType) {\r\n\t        var _this = _super.call(this, VisualSelector.schemaUrl) || this;\r\n\t        _this.visualType = visualType;\r\n\t        return _this;\r\n\t    }\r\n\t    VisualTypeSelector.prototype.toJSON = function () {\r\n\t        var selector = _super.prototype.toJSON.call(this);\r\n\t        selector.visualType = this.visualType;\r\n\t        return selector;\r\n\t    };\r\n\t    VisualTypeSelector.schemaUrl = \"http://powerbi.com/product/schema#visualTypeSelector\";\r\n\t    return VisualTypeSelector;\r\n\t}(Selector));\r\n\texports.VisualTypeSelector = VisualTypeSelector;\r\n\tvar SlicerTargetSelector = /** @class */ (function (_super) {\r\n\t    __extends(SlicerTargetSelector, _super);\r\n\t    function SlicerTargetSelector(target) {\r\n\t        var _this = _super.call(this, VisualSelector.schemaUrl) || this;\r\n\t        _this.target = target;\r\n\t        return _this;\r\n\t    }\r\n\t    SlicerTargetSelector.prototype.toJSON = function () {\r\n\t        var selector = _super.prototype.toJSON.call(this);\r\n\t        selector.target = this.target;\r\n\t        return selector;\r\n\t    };\r\n\t    SlicerTargetSelector.schemaUrl = \"http://powerbi.com/product/schema#slicerTargetSelector\";\r\n\t    return SlicerTargetSelector;\r\n\t}(Selector));\r\n\texports.SlicerTargetSelector = SlicerTargetSelector;\r\n\tvar CommandDisplayOption;\r\n\t(function (CommandDisplayOption) {\r\n\t    CommandDisplayOption[CommandDisplayOption[\"Enabled\"] = 0] = \"Enabled\";\r\n\t    CommandDisplayOption[CommandDisplayOption[\"Disabled\"] = 1] = \"Disabled\";\r\n\t    CommandDisplayOption[CommandDisplayOption[\"Hidden\"] = 2] = \"Hidden\";\r\n\t})(CommandDisplayOption = exports.CommandDisplayOption || (exports.CommandDisplayOption = {}));\r\n\t/*\r\n\t * Visual CRUD\r\n\t */\r\n\tvar VisualDataRoleKind;\r\n\t(function (VisualDataRoleKind) {\r\n\t    // Indicates that the role should be bound to something that evaluates to a grouping of values.\r\n\t    VisualDataRoleKind[VisualDataRoleKind[\"Grouping\"] = 0] = \"Grouping\";\r\n\t    // Indicates that the role should be bound to something that evaluates to a single value in a scope.\r\n\t    VisualDataRoleKind[VisualDataRoleKind[\"Measure\"] = 1] = \"Measure\";\r\n\t    // Indicates that the role can be bound to either Grouping or Measure.\r\n\t    VisualDataRoleKind[VisualDataRoleKind[\"GroupingOrMeasure\"] = 2] = \"GroupingOrMeasure\";\r\n\t})(VisualDataRoleKind = exports.VisualDataRoleKind || (exports.VisualDataRoleKind = {}));\r\n\t// Indicates the visual preference on Grouping or Measure. Only applicable if kind is GroupingOrMeasure.\r\n\tvar VisualDataRoleKindPreference;\r\n\t(function (VisualDataRoleKindPreference) {\r\n\t    VisualDataRoleKindPreference[VisualDataRoleKindPreference[\"Measure\"] = 0] = \"Measure\";\r\n\t    VisualDataRoleKindPreference[VisualDataRoleKindPreference[\"Grouping\"] = 1] = \"Grouping\";\r\n\t})(VisualDataRoleKindPreference = exports.VisualDataRoleKindPreference || (exports.VisualDataRoleKindPreference = {}));\r\n\tfunction normalizeError(error) {\r\n\t    var message = error.message;\r\n\t    if (!message) {\r\n\t        message = error.path + \" is invalid. Not meeting \" + error.keyword + \" constraint\";\r\n\t    }\r\n\t    return {\r\n\t        message: message\r\n\t    };\r\n\t}\r\n\tfunction validateVisualSelector(input) {\r\n\t    var errors = exports.Validators.visualSelectorValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateVisualSelector = validateVisualSelector;\r\n\tfunction validateSlicer(input) {\r\n\t    var errors = exports.Validators.slicerValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateSlicer = validateSlicer;\r\n\tfunction validateSlicerState(input) {\r\n\t    var errors = exports.Validators.slicerStateValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateSlicerState = validateSlicerState;\r\n\tfunction validatePlayBookmarkRequest(input) {\r\n\t    var errors = exports.Validators.playBookmarkRequestValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validatePlayBookmarkRequest = validatePlayBookmarkRequest;\r\n\tfunction validateAddBookmarkRequest(input) {\r\n\t    var errors = exports.Validators.addBookmarkRequestValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateAddBookmarkRequest = validateAddBookmarkRequest;\r\n\tfunction validateApplyBookmarkByNameRequest(input) {\r\n\t    var errors = exports.Validators.applyBookmarkByNameRequestValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateApplyBookmarkByNameRequest = validateApplyBookmarkByNameRequest;\r\n\tfunction validateApplyBookmarkStateRequest(input) {\r\n\t    var errors = exports.Validators.applyBookmarkStateRequestValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateApplyBookmarkStateRequest = validateApplyBookmarkStateRequest;\r\n\tfunction validateSettings(input) {\r\n\t    var errors = exports.Validators.settingsValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateSettings = validateSettings;\r\n\tfunction validateCustomPageSize(input) {\r\n\t    var errors = exports.Validators.customPageSizeValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateCustomPageSize = validateCustomPageSize;\r\n\tfunction validateExtension(input) {\r\n\t    var errors = exports.Validators.extensionValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateExtension = validateExtension;\r\n\tfunction validateReportLoad(input) {\r\n\t    var errors = exports.Validators.reportLoadValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateReportLoad = validateReportLoad;\r\n\tfunction validateCreateReport(input) {\r\n\t    var errors = exports.Validators.reportCreateValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateCreateReport = validateCreateReport;\r\n\tfunction validateDashboardLoad(input) {\r\n\t    var errors = exports.Validators.dashboardLoadValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateDashboardLoad = validateDashboardLoad;\r\n\tfunction validateTileLoad(input) {\r\n\t    var errors = exports.Validators.tileLoadValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateTileLoad = validateTileLoad;\r\n\tfunction validatePage(input) {\r\n\t    var errors = exports.Validators.pageValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validatePage = validatePage;\r\n\tfunction validateFilter(input) {\r\n\t    var errors = exports.Validators.filtersValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateFilter = validateFilter;\r\n\tfunction validateSaveAsParameters(input) {\r\n\t    var errors = exports.Validators.saveAsParametersValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateSaveAsParameters = validateSaveAsParameters;\r\n\tfunction validateLoadQnaConfiguration(input) {\r\n\t    var errors = exports.Validators.loadQnaValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateLoadQnaConfiguration = validateLoadQnaConfiguration;\r\n\tfunction validateQnaInterpretInputData(input) {\r\n\t    var errors = exports.Validators.qnaInterpretInputDataValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateQnaInterpretInputData = validateQnaInterpretInputData;\r\n\tfunction validateExportDataRequest(input) {\r\n\t    var errors = exports.Validators.exportDataRequestValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateExportDataRequest = validateExportDataRequest;\r\n\tfunction validateVisualHeader(input) {\r\n\t    var errors = exports.Validators.visualHeaderValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateVisualHeader = validateVisualHeader;\r\n\tfunction validateVisualSettings(input) {\r\n\t    var errors = exports.Validators.visualSettingsValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateVisualSettings = validateVisualSettings;\r\n\tfunction validateCommandsSettings(input) {\r\n\t    var errors = exports.Validators.commandsSettingsValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateCommandsSettings = validateCommandsSettings;\r\n\tfunction validateCustomTheme(input) {\r\n\t    var errors = exports.Validators.customThemeValidator.validate(input);\r\n\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t}\r\n\texports.validateCustomTheme = validateCustomTheme;\r\n\t\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar extensionsValidator_1 = __webpack_require__(3);\r\n\tvar settingsValidator_1 = __webpack_require__(5);\r\n\tvar bookmarkValidator_1 = __webpack_require__(6);\r\n\tvar filtersValidator_1 = __webpack_require__(7);\r\n\tvar fieldRequiredValidator_1 = __webpack_require__(8);\r\n\tvar anyOfValidator_1 = __webpack_require__(9);\r\n\tvar reportLoadValidator_1 = __webpack_require__(10);\r\n\tvar reportCreateValidator_1 = __webpack_require__(11);\r\n\tvar dashboardLoadValidator_1 = __webpack_require__(12);\r\n\tvar tileLoadValidator_1 = __webpack_require__(13);\r\n\tvar pageValidator_1 = __webpack_require__(14);\r\n\tvar qnaValidator_1 = __webpack_require__(15);\r\n\tvar saveAsParametersValidator_1 = __webpack_require__(16);\r\n\tvar mapValidator_1 = __webpack_require__(17);\r\n\tvar layoutValidator_1 = __webpack_require__(18);\r\n\tvar exportDataValidator_1 = __webpack_require__(19);\r\n\tvar selectorsValidator_1 = __webpack_require__(20);\r\n\tvar slicersValidator_1 = __webpack_require__(21);\r\n\tvar visualSettingsValidator_1 = __webpack_require__(22);\r\n\tvar commandsSettingsValidator_1 = __webpack_require__(23);\r\n\tvar customThemeValidator_1 = __webpack_require__(24);\r\n\tvar datasetBindingValidator_1 = __webpack_require__(25);\r\n\texports.Validators = {\r\n\t    addBookmarkRequestValidator: new bookmarkValidator_1.AddBookmarkRequestValidator(),\r\n\t    advancedFilterTypeValidator: new typeValidator_1.EnumValidator([0]),\r\n\t    advancedFilterValidator: new filtersValidator_1.AdvancedFilterValidator(),\r\n\t    anyArrayValidator: new typeValidator_1.ArrayValidator([new anyOfValidator_1.AnyOfValidator([new typeValidator_1.StringValidator(), new typeValidator_1.NumberValidator(), new typeValidator_1.BooleanValidator()])]),\r\n\t    anyFilterValidator: new anyOfValidator_1.AnyOfValidator([new filtersValidator_1.BasicFilterValidator(), new filtersValidator_1.AdvancedFilterValidator(), new filtersValidator_1.IncludeExcludeFilterValidator(), new filtersValidator_1.NotSupportedFilterValidator(), new filtersValidator_1.RelativeDateFilterValidator(), new filtersValidator_1.TopNFilterValidator()]),\r\n\t    anyValueValidator: new anyOfValidator_1.AnyOfValidator([new typeValidator_1.StringValidator(), new typeValidator_1.NumberValidator(), new typeValidator_1.BooleanValidator()]),\r\n\t    applyBookmarkByNameRequestValidator: new bookmarkValidator_1.ApplyBookmarkByNameRequestValidator(),\r\n\t    applyBookmarkStateRequestValidator: new bookmarkValidator_1.ApplyBookmarkStateRequestValidator(),\r\n\t    applyBookmarkValidator: new anyOfValidator_1.AnyOfValidator([new bookmarkValidator_1.ApplyBookmarkByNameRequestValidator(), new bookmarkValidator_1.ApplyBookmarkStateRequestValidator()]),\r\n\t    backgroundValidator: new typeValidator_1.EnumValidator([0, 1]),\r\n\t    basicFilterTypeValidator: new typeValidator_1.EnumValidator([1]),\r\n\t    basicFilterValidator: new filtersValidator_1.BasicFilterValidator(),\r\n\t    booleanArrayValidator: new typeValidator_1.BooleanArrayValidator(),\r\n\t    booleanValidator: new typeValidator_1.BooleanValidator(),\r\n\t    commandDisplayOptionValidator: new typeValidator_1.EnumValidator([0, 1, 2]),\r\n\t    commandExtensionSelectorValidator: new anyOfValidator_1.AnyOfValidator([new selectorsValidator_1.VisualSelectorValidator(), new selectorsValidator_1.VisualTypeSelectorValidator()]),\r\n\t    commandExtensionValidator: new extensionsValidator_1.CommandExtensionValidator(),\r\n\t    commandsSettingsArrayValidator: new typeValidator_1.ArrayValidator([new commandsSettingsValidator_1.CommandsSettingsValidator()]),\r\n\t    commandsSettingsValidator: new commandsSettingsValidator_1.CommandsSettingsValidator(),\r\n\t    conditionItemValidator: new filtersValidator_1.ConditionItemValidator(),\r\n\t    contrastModeValidator: new typeValidator_1.EnumValidator([0, 1, 2, 3, 4]),\r\n\t    customLayoutDisplayOptionValidator: new typeValidator_1.EnumValidator([0, 1, 2]),\r\n\t    customLayoutValidator: new layoutValidator_1.CustomLayoutValidator(),\r\n\t    customPageSizeValidator: new pageValidator_1.CustomPageSizeValidator(),\r\n\t    customThemeValidator: new customThemeValidator_1.CustomThemeValidator(),\r\n\t    dashboardLoadValidator: new dashboardLoadValidator_1.DashboardLoadValidator(),\r\n\t    datasetBindingValidator: new datasetBindingValidator_1.DatasetBindingValidator(),\r\n\t    displayStateModeValidator: new typeValidator_1.EnumValidator([0, 1]),\r\n\t    displayStateValidator: new layoutValidator_1.DisplayStateValidator(),\r\n\t    exportDataRequestValidator: new exportDataValidator_1.ExportDataRequestValidator(),\r\n\t    extensionArrayValidator: new typeValidator_1.ArrayValidator([new extensionsValidator_1.ExtensionValidator()]),\r\n\t    extensionPointsValidator: new extensionsValidator_1.ExtensionPointsValidator(),\r\n\t    extensionValidator: new extensionsValidator_1.ExtensionValidator(),\r\n\t    fieldRequiredValidator: new fieldRequiredValidator_1.FieldRequiredValidator(),\r\n\t    filterColumnTargetValidator: new filtersValidator_1.FilterColumnTargetValidator(),\r\n\t    filterConditionsValidator: new typeValidator_1.ArrayValidator([new filtersValidator_1.ConditionItemValidator()]),\r\n\t    filterHierarchyTargetValidator: new filtersValidator_1.FilterHierarchyTargetValidator(),\r\n\t    filterMeasureTargetValidator: new filtersValidator_1.FilterMeasureTargetValidator(),\r\n\t    filterTargetValidator: new anyOfValidator_1.AnyOfValidator([new filtersValidator_1.FilterColumnTargetValidator(), new filtersValidator_1.FilterHierarchyTargetValidator(), new filtersValidator_1.FilterMeasureTargetValidator()]),\r\n\t    filtersArrayValidator: new typeValidator_1.ArrayValidator([new anyOfValidator_1.AnyOfValidator([new filtersValidator_1.BasicFilterValidator(), new filtersValidator_1.AdvancedFilterValidator(), new filtersValidator_1.RelativeDateFilterValidator()])]),\r\n\t    filtersValidator: new filtersValidator_1.FilterValidator(),\r\n\t    hyperlinkClickBehaviorValidator: new typeValidator_1.EnumValidator([0, 1, 2]),\r\n\t    includeExcludeFilterValidator: new filtersValidator_1.IncludeExcludeFilterValidator(),\r\n\t    includeExludeFilterTypeValidator: new typeValidator_1.EnumValidator([3]),\r\n\t    layoutTypeValidator: new typeValidator_1.EnumValidator([0, 1, 2, 3]),\r\n\t    loadQnaValidator: new qnaValidator_1.LoadQnaValidator(),\r\n\t    menuExtensionValidator: new extensionsValidator_1.MenuExtensionValidator(),\r\n\t    menuLocationValidator: new typeValidator_1.EnumValidator([0, 1]),\r\n\t    notSupportedFilterTypeValidator: new typeValidator_1.EnumValidator([2]),\r\n\t    notSupportedFilterValidator: new filtersValidator_1.NotSupportedFilterValidator(),\r\n\t    numberArrayValidator: new typeValidator_1.NumberArrayValidator(),\r\n\t    numberValidator: new typeValidator_1.NumberValidator(),\r\n\t    pageLayoutValidator: new mapValidator_1.MapValidator([new typeValidator_1.StringValidator()], [new layoutValidator_1.VisualLayoutValidator()]),\r\n\t    pageSizeTypeValidator: new typeValidator_1.EnumValidator([0, 1, 2, 3, 4, 5]),\r\n\t    pageSizeValidator: new pageValidator_1.PageSizeValidator(),\r\n\t    pageValidator: new pageValidator_1.PageValidator(),\r\n\t    pageViewFieldValidator: new pageValidator_1.PageViewFieldValidator(),\r\n\t    pagesLayoutValidator: new mapValidator_1.MapValidator([new typeValidator_1.StringValidator()], [new layoutValidator_1.PageLayoutValidator()]),\r\n\t    permissionsValidator: new typeValidator_1.EnumValidator([0, 1, 2, 4, 7]),\r\n\t    playBookmarkRequestValidator: new bookmarkValidator_1.PlayBookmarkRequestValidator(),\r\n\t    qnaInterpretInputDataValidator: new qnaValidator_1.QnaInterpretInputDataValidator(),\r\n\t    qnaSettingValidator: new qnaValidator_1.QnaSettingsValidator(),\r\n\t    relativeDateFilterOperatorValidator: new typeValidator_1.EnumValidator([0, 1, 2]),\r\n\t    relativeDateFilterTimeUnitTypeValidator: new typeValidator_1.EnumValidator([0, 1, 2, 3, 4, 5, 6]),\r\n\t    relativeDateFilterTypeValidator: new typeValidator_1.EnumValidator([4]),\r\n\t    relativeDateFilterValidator: new filtersValidator_1.RelativeDateFilterValidator(),\r\n\t    reportCreateValidator: new reportCreateValidator_1.ReportCreateValidator(),\r\n\t    reportLoadValidator: new reportLoadValidator_1.ReportLoadValidator(),\r\n\t    saveAsParametersValidator: new saveAsParametersValidator_1.SaveAsParametersValidator(),\r\n\t    settingsValidator: new settingsValidator_1.SettingsValidator(),\r\n\t    singleCommandSettingsValidator: new commandsSettingsValidator_1.SingleCommandSettingsValidator(),\r\n\t    slicerSelectorValidator: new anyOfValidator_1.AnyOfValidator([new selectorsValidator_1.VisualSelectorValidator(), new selectorsValidator_1.SlicerTargetSelectorValidator()]),\r\n\t    slicerStateValidator: new slicersValidator_1.SlicerStateValidator(),\r\n\t    slicerTargetValidator: new anyOfValidator_1.AnyOfValidator([new filtersValidator_1.FilterColumnTargetValidator(), new filtersValidator_1.FilterHierarchyTargetValidator(), new filtersValidator_1.FilterMeasureTargetValidator(), new filtersValidator_1.FilterKeyColumnsTargetValidator(), new filtersValidator_1.FilterKeyHierarchyTargetValidator()]),\r\n\t    slicerValidator: new slicersValidator_1.SlicerValidator(),\r\n\t    stringArrayValidator: new typeValidator_1.StringArrayValidator(),\r\n\t    stringValidator: new typeValidator_1.StringValidator(),\r\n\t    tileLoadValidator: new tileLoadValidator_1.TileLoadValidator(),\r\n\t    tokenTypeValidator: new typeValidator_1.EnumValidator([0, 1]),\r\n\t    topNFilterTypeValidator: new typeValidator_1.EnumValidator([5]),\r\n\t    topNFilterValidator: new filtersValidator_1.TopNFilterValidator(),\r\n\t    viewModeValidator: new typeValidator_1.EnumValidator([0, 1]),\r\n\t    visualCommandSelectorValidator: new anyOfValidator_1.AnyOfValidator([new selectorsValidator_1.VisualSelectorValidator(), new selectorsValidator_1.VisualTypeSelectorValidator()]),\r\n\t    visualHeaderSelectorValidator: new anyOfValidator_1.AnyOfValidator([new selectorsValidator_1.VisualSelectorValidator(), new selectorsValidator_1.VisualTypeSelectorValidator()]),\r\n\t    visualHeaderSettingsValidator: new visualSettingsValidator_1.VisualHeaderSettingsValidator(),\r\n\t    visualHeaderValidator: new visualSettingsValidator_1.VisualHeaderValidator(),\r\n\t    visualHeadersValidator: new typeValidator_1.ArrayValidator([new visualSettingsValidator_1.VisualHeaderValidator()]),\r\n\t    visualLayoutValidator: new layoutValidator_1.VisualLayoutValidator(),\r\n\t    visualSelectorValidator: new selectorsValidator_1.VisualSelectorValidator(),\r\n\t    visualSettingsValidator: new visualSettingsValidator_1.VisualSettingsValidator(),\r\n\t    visualTypeSelectorValidator: new selectorsValidator_1.VisualTypeSelectorValidator(),\r\n\t};\r\n\t\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar ObjectValidator = /** @class */ (function () {\r\n\t    function ObjectValidator() {\r\n\t    }\r\n\t    ObjectValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        if (typeof input !== \"object\" || Array.isArray(input)) {\r\n\t            return [{\r\n\t                    message: field !== undefined ? field + \" must be an object\" : \"input must be an object\",\r\n\t                    path: path,\r\n\t                    keyword: \"type\"\r\n\t                }];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return ObjectValidator;\r\n\t}());\r\n\texports.ObjectValidator = ObjectValidator;\r\n\tvar ArrayValidator = /** @class */ (function () {\r\n\t    function ArrayValidator(itemValidators) {\r\n\t        this.itemValidators = itemValidators;\r\n\t    }\r\n\t    ArrayValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        if (!(Array.isArray(input))) {\r\n\t            return [{\r\n\t                    message: field + \" property is invalid\",\r\n\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t                    keyword: \"type\"\r\n\t                }];\r\n\t        }\r\n\t        for (var i = 0; i < input.length; i++) {\r\n\t            var fieldsPath = (path ? path + \".\" : \"\") + field + \".\" + i;\r\n\t            for (var _i = 0, _a = this.itemValidators; _i < _a.length; _i++) {\r\n\t                var validator = _a[_i];\r\n\t                var errors = validator.validate(input[i], fieldsPath, field);\r\n\t                if (errors) {\r\n\t                    return [{\r\n\t                            message: field + \" property is invalid\",\r\n\t                            path: (path ? path + \".\" : \"\") + field,\r\n\t                            keyword: \"type\"\r\n\t                        }];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return ArrayValidator;\r\n\t}());\r\n\texports.ArrayValidator = ArrayValidator;\r\n\tvar TypeValidator = /** @class */ (function () {\r\n\t    function TypeValidator(expectedType) {\r\n\t        this.expectedType = expectedType;\r\n\t    }\r\n\t    TypeValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        if (!(typeof input === this.expectedType)) {\r\n\t            return [{\r\n\t                    message: field + \" must be a \" + this.expectedType,\r\n\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t                    keyword: \"type\"\r\n\t                }];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return TypeValidator;\r\n\t}());\r\n\texports.TypeValidator = TypeValidator;\r\n\tvar StringValidator = /** @class */ (function (_super) {\r\n\t    __extends(StringValidator, _super);\r\n\t    function StringValidator() {\r\n\t        return _super.call(this, \"string\") || this;\r\n\t    }\r\n\t    return StringValidator;\r\n\t}(TypeValidator));\r\n\texports.StringValidator = StringValidator;\r\n\tvar BooleanValidator = /** @class */ (function (_super) {\r\n\t    __extends(BooleanValidator, _super);\r\n\t    function BooleanValidator() {\r\n\t        return _super.call(this, \"boolean\") || this;\r\n\t    }\r\n\t    return BooleanValidator;\r\n\t}(TypeValidator));\r\n\texports.BooleanValidator = BooleanValidator;\r\n\tvar NumberValidator = /** @class */ (function (_super) {\r\n\t    __extends(NumberValidator, _super);\r\n\t    function NumberValidator() {\r\n\t        return _super.call(this, \"number\") || this;\r\n\t    }\r\n\t    return NumberValidator;\r\n\t}(TypeValidator));\r\n\texports.NumberValidator = NumberValidator;\r\n\tvar ValueValidator = /** @class */ (function () {\r\n\t    function ValueValidator(possibleValues) {\r\n\t        this.possibleValues = possibleValues;\r\n\t    }\r\n\t    ValueValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        if (this.possibleValues.indexOf(input) < 0) {\r\n\t            return [{\r\n\t                    message: field + \" property is invalid\",\r\n\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t                    keyword: \"invalid\"\r\n\t                }];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return ValueValidator;\r\n\t}());\r\n\texports.ValueValidator = ValueValidator;\r\n\tvar SchemaValidator = /** @class */ (function (_super) {\r\n\t    __extends(SchemaValidator, _super);\r\n\t    function SchemaValidator(schemaValue) {\r\n\t        var _this = _super.call(this, [schemaValue]) || this;\r\n\t        _this.schemaValue = schemaValue;\r\n\t        return _this;\r\n\t    }\r\n\t    SchemaValidator.prototype.validate = function (input, path, field) {\r\n\t        return _super.prototype.validate.call(this, input, path, field);\r\n\t    };\r\n\t    return SchemaValidator;\r\n\t}(ValueValidator));\r\n\texports.SchemaValidator = SchemaValidator;\r\n\tvar EnumValidator = /** @class */ (function (_super) {\r\n\t    __extends(EnumValidator, _super);\r\n\t    function EnumValidator(possibleValues) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.possibleValues = possibleValues;\r\n\t        return _this;\r\n\t    }\r\n\t    EnumValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var valueValidator = new ValueValidator(this.possibleValues);\r\n\t        return valueValidator.validate(input, path, field);\r\n\t    };\r\n\t    return EnumValidator;\r\n\t}(NumberValidator));\r\n\texports.EnumValidator = EnumValidator;\r\n\tvar StringArrayValidator = /** @class */ (function (_super) {\r\n\t    __extends(StringArrayValidator, _super);\r\n\t    function StringArrayValidator() {\r\n\t        return _super.call(this, [new StringValidator()]) || this;\r\n\t    }\r\n\t    StringArrayValidator.prototype.validate = function (input, path, field) {\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return [{\r\n\t                    message: field + \" must be an array of strings\",\r\n\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t                    keyword: \"type\"\r\n\t                }];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return StringArrayValidator;\r\n\t}(ArrayValidator));\r\n\texports.StringArrayValidator = StringArrayValidator;\r\n\tvar BooleanArrayValidator = /** @class */ (function (_super) {\r\n\t    __extends(BooleanArrayValidator, _super);\r\n\t    function BooleanArrayValidator() {\r\n\t        return _super.call(this, [new BooleanValidator()]) || this;\r\n\t    }\r\n\t    BooleanArrayValidator.prototype.validate = function (input, path, field) {\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return [{\r\n\t                    message: field + \" must be an array of booleans\",\r\n\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t                    keyword: \"type\"\r\n\t                }];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return BooleanArrayValidator;\r\n\t}(ArrayValidator));\r\n\texports.BooleanArrayValidator = BooleanArrayValidator;\r\n\tvar NumberArrayValidator = /** @class */ (function (_super) {\r\n\t    __extends(NumberArrayValidator, _super);\r\n\t    function NumberArrayValidator() {\r\n\t        return _super.call(this, [new NumberValidator()]) || this;\r\n\t    }\r\n\t    NumberArrayValidator.prototype.validate = function (input, path, field) {\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return [{\r\n\t                    message: field + \" must be an array of numbers\",\r\n\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t                    keyword: \"type\"\r\n\t                }];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return NumberArrayValidator;\r\n\t}(ArrayValidator));\r\n\texports.NumberArrayValidator = NumberArrayValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 3 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar MenuExtensionValidator = /** @class */ (function (_super) {\r\n\t    __extends(MenuExtensionValidator, _super);\r\n\t    function MenuExtensionValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    MenuExtensionValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"title\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"icon\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"menuLocation\",\r\n\t                validators: [validator_1.Validators.menuLocationValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return MenuExtensionValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.MenuExtensionValidator = MenuExtensionValidator;\r\n\tvar ExtensionPointsValidator = /** @class */ (function (_super) {\r\n\t    __extends(ExtensionPointsValidator, _super);\r\n\t    function ExtensionPointsValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    ExtensionPointsValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"visualContextMenu\",\r\n\t                validators: [validator_1.Validators.menuExtensionValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"visualOptionsMenu\",\r\n\t                validators: [validator_1.Validators.menuExtensionValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return ExtensionPointsValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.ExtensionPointsValidator = ExtensionPointsValidator;\r\n\tvar ExtensionItemValidator = /** @class */ (function (_super) {\r\n\t    __extends(ExtensionItemValidator, _super);\r\n\t    function ExtensionItemValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    ExtensionItemValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"name\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"extend\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.extensionPointsValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return ExtensionItemValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.ExtensionItemValidator = ExtensionItemValidator;\r\n\tvar CommandExtensionValidator = /** @class */ (function (_super) {\r\n\t    __extends(CommandExtensionValidator, _super);\r\n\t    function CommandExtensionValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    CommandExtensionValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"title\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"icon\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"selector\",\r\n\t                validators: [validator_1.Validators.commandExtensionSelectorValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return CommandExtensionValidator;\r\n\t}(ExtensionItemValidator));\r\n\texports.CommandExtensionValidator = CommandExtensionValidator;\r\n\tvar ExtensionValidator = /** @class */ (function (_super) {\r\n\t    __extends(ExtensionValidator, _super);\r\n\t    function ExtensionValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    ExtensionValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"command\",\r\n\t                validators: [validator_1.Validators.commandExtensionValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return ExtensionValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.ExtensionValidator = ExtensionValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 4 */\n\t/***/ (function(module, exports) {\n\t\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar MultipleFieldsValidator = /** @class */ (function () {\r\n\t    function MultipleFieldsValidator(fieldValidatorsPairs) {\r\n\t        this.fieldValidatorsPairs = fieldValidatorsPairs;\r\n\t    }\r\n\t    MultipleFieldsValidator.prototype.validate = function (input, path, field) {\r\n\t        if (!this.fieldValidatorsPairs) {\r\n\t            return null;\r\n\t        }\r\n\t        var fieldsPath = path ? path + \".\" + field : field;\r\n\t        for (var _i = 0, _a = this.fieldValidatorsPairs; _i < _a.length; _i++) {\r\n\t            var fieldValidators = _a[_i];\r\n\t            for (var _b = 0, _c = fieldValidators.validators; _b < _c.length; _b++) {\r\n\t                var validator = _c[_b];\r\n\t                var errors = validator.validate(input[fieldValidators.field], fieldsPath, fieldValidators.field);\r\n\t                if (errors) {\r\n\t                    return errors;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return MultipleFieldsValidator;\r\n\t}());\r\n\texports.MultipleFieldsValidator = MultipleFieldsValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 5 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar SettingsValidator = /** @class */ (function (_super) {\r\n\t    __extends(SettingsValidator, _super);\r\n\t    function SettingsValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    SettingsValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"filterPaneEnabled\",\r\n\t                validators: [validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"navContentPaneEnabled\",\r\n\t                validators: [validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"bookmarksPaneEnabled\",\r\n\t                validators: [validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"useCustomSaveAsDialog\",\r\n\t                validators: [validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"extensions\",\r\n\t                validators: [validator_1.Validators.extensionArrayValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"layoutType\",\r\n\t                validators: [validator_1.Validators.layoutTypeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"customLayout\",\r\n\t                validators: [validator_1.Validators.customLayoutValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"background\",\r\n\t                validators: [validator_1.Validators.backgroundValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"visualSettings\",\r\n\t                validators: [validator_1.Validators.visualSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"hideErrors\",\r\n\t                validators: [validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"commands\",\r\n\t                validators: [validator_1.Validators.commandsSettingsArrayValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"hyperlinkClickBehavior\",\r\n\t                validators: [validator_1.Validators.hyperlinkClickBehaviorValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return SettingsValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.SettingsValidator = SettingsValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 6 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar PlayBookmarkRequestValidator = /** @class */ (function (_super) {\r\n\t    __extends(PlayBookmarkRequestValidator, _super);\r\n\t    function PlayBookmarkRequestValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    PlayBookmarkRequestValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"playMode\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, new typeValidator_1.EnumValidator([0, 1])]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return PlayBookmarkRequestValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.PlayBookmarkRequestValidator = PlayBookmarkRequestValidator;\r\n\tvar AddBookmarkRequestValidator = /** @class */ (function (_super) {\r\n\t    __extends(AddBookmarkRequestValidator, _super);\r\n\t    function AddBookmarkRequestValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    AddBookmarkRequestValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"state\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"displayName\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"apply\",\r\n\t                validators: [validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return AddBookmarkRequestValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.AddBookmarkRequestValidator = AddBookmarkRequestValidator;\r\n\tvar ApplyBookmarkByNameRequestValidator = /** @class */ (function (_super) {\r\n\t    __extends(ApplyBookmarkByNameRequestValidator, _super);\r\n\t    function ApplyBookmarkByNameRequestValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    ApplyBookmarkByNameRequestValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"name\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return ApplyBookmarkByNameRequestValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.ApplyBookmarkByNameRequestValidator = ApplyBookmarkByNameRequestValidator;\r\n\tvar ApplyBookmarkStateRequestValidator = /** @class */ (function (_super) {\r\n\t    __extends(ApplyBookmarkStateRequestValidator, _super);\r\n\t    function ApplyBookmarkStateRequestValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    ApplyBookmarkStateRequestValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"state\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return ApplyBookmarkStateRequestValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.ApplyBookmarkStateRequestValidator = ApplyBookmarkStateRequestValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 7 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar FilterColumnTargetValidator = /** @class */ (function (_super) {\r\n\t    __extends(FilterColumnTargetValidator, _super);\r\n\t    function FilterColumnTargetValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    FilterColumnTargetValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"table\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"column\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return FilterColumnTargetValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.FilterColumnTargetValidator = FilterColumnTargetValidator;\r\n\tvar FilterKeyColumnsTargetValidator = /** @class */ (function (_super) {\r\n\t    __extends(FilterKeyColumnsTargetValidator, _super);\r\n\t    function FilterKeyColumnsTargetValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    FilterKeyColumnsTargetValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"keys\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringArrayValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return FilterKeyColumnsTargetValidator;\r\n\t}(FilterColumnTargetValidator));\r\n\texports.FilterKeyColumnsTargetValidator = FilterKeyColumnsTargetValidator;\r\n\tvar FilterHierarchyTargetValidator = /** @class */ (function (_super) {\r\n\t    __extends(FilterHierarchyTargetValidator, _super);\r\n\t    function FilterHierarchyTargetValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    FilterHierarchyTargetValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"table\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"hierarchy\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"hierarchyLevel\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return FilterHierarchyTargetValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.FilterHierarchyTargetValidator = FilterHierarchyTargetValidator;\r\n\tvar FilterKeyHierarchyTargetValidator = /** @class */ (function (_super) {\r\n\t    __extends(FilterKeyHierarchyTargetValidator, _super);\r\n\t    function FilterKeyHierarchyTargetValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    FilterKeyHierarchyTargetValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"keys\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringArrayValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return FilterKeyHierarchyTargetValidator;\r\n\t}(FilterHierarchyTargetValidator));\r\n\texports.FilterKeyHierarchyTargetValidator = FilterKeyHierarchyTargetValidator;\r\n\tvar FilterMeasureTargetValidator = /** @class */ (function (_super) {\r\n\t    __extends(FilterMeasureTargetValidator, _super);\r\n\t    function FilterMeasureTargetValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    FilterMeasureTargetValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"table\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"measure\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return FilterMeasureTargetValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.FilterMeasureTargetValidator = FilterMeasureTargetValidator;\r\n\tvar BasicFilterValidator = /** @class */ (function (_super) {\r\n\t    __extends(BasicFilterValidator, _super);\r\n\t    function BasicFilterValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    BasicFilterValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"target\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"operator\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"values\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.anyArrayValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"filterType\",\r\n\t                validators: [validator_1.Validators.basicFilterTypeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"requireSingleSelection\",\r\n\t                validators: [validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return BasicFilterValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.BasicFilterValidator = BasicFilterValidator;\r\n\tvar AdvancedFilterValidator = /** @class */ (function (_super) {\r\n\t    __extends(AdvancedFilterValidator, _super);\r\n\t    function AdvancedFilterValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    AdvancedFilterValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"target\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"logicalOperator\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"conditions\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterConditionsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"filterType\",\r\n\t                validators: [validator_1.Validators.advancedFilterTypeValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return AdvancedFilterValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.AdvancedFilterValidator = AdvancedFilterValidator;\r\n\tvar RelativeDateFilterValidator = /** @class */ (function (_super) {\r\n\t    __extends(RelativeDateFilterValidator, _super);\r\n\t    function RelativeDateFilterValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    RelativeDateFilterValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"target\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"operator\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.relativeDateFilterOperatorValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"timeUnitsCount\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.numberValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"timeUnitType\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.relativeDateFilterTimeUnitTypeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"includeToday\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"filterType\",\r\n\t                validators: [validator_1.Validators.relativeDateFilterTypeValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return RelativeDateFilterValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.RelativeDateFilterValidator = RelativeDateFilterValidator;\r\n\tvar TopNFilterValidator = /** @class */ (function (_super) {\r\n\t    __extends(TopNFilterValidator, _super);\r\n\t    function TopNFilterValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    TopNFilterValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"target\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"operator\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"itemCount\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.numberValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"filterType\",\r\n\t                validators: [validator_1.Validators.topNFilterTypeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"orderBy\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return TopNFilterValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.TopNFilterValidator = TopNFilterValidator;\r\n\tvar NotSupportedFilterValidator = /** @class */ (function (_super) {\r\n\t    __extends(NotSupportedFilterValidator, _super);\r\n\t    function NotSupportedFilterValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    NotSupportedFilterValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"target\",\r\n\t                validators: [validator_1.Validators.filterTargetValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"message\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"notSupportedTypeName\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"filterType\",\r\n\t                validators: [validator_1.Validators.notSupportedFilterTypeValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return NotSupportedFilterValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.NotSupportedFilterValidator = NotSupportedFilterValidator;\r\n\tvar IncludeExcludeFilterValidator = /** @class */ (function (_super) {\r\n\t    __extends(IncludeExcludeFilterValidator, _super);\r\n\t    function IncludeExcludeFilterValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    IncludeExcludeFilterValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"target\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"isExclude\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"values\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.anyArrayValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"filterType\",\r\n\t                validators: [validator_1.Validators.includeExludeFilterTypeValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return IncludeExcludeFilterValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.IncludeExcludeFilterValidator = IncludeExcludeFilterValidator;\r\n\tvar FilterValidator = /** @class */ (function (_super) {\r\n\t    __extends(FilterValidator, _super);\r\n\t    function FilterValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    FilterValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        return validator_1.Validators.anyFilterValidator.validate(input, path, field);\r\n\t    };\r\n\t    return FilterValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.FilterValidator = FilterValidator;\r\n\tvar ConditionItemValidator = /** @class */ (function (_super) {\r\n\t    __extends(ConditionItemValidator, _super);\r\n\t    function ConditionItemValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    ConditionItemValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"value\",\r\n\t                validators: [validator_1.Validators.anyValueValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"operator\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return ConditionItemValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.ConditionItemValidator = ConditionItemValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 8 */\n\t/***/ (function(module, exports) {\n\t\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar FieldRequiredValidator = /** @class */ (function () {\r\n\t    function FieldRequiredValidator() {\r\n\t    }\r\n\t    FieldRequiredValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return [{\r\n\t                    message: field + \" is required\",\r\n\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t                    keyword: \"required\"\r\n\t                }];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return FieldRequiredValidator;\r\n\t}());\r\n\texports.FieldRequiredValidator = FieldRequiredValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 9 */\n\t/***/ (function(module, exports) {\n\t\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar AnyOfValidator = /** @class */ (function () {\r\n\t    function AnyOfValidator(validators) {\r\n\t        this.validators = validators;\r\n\t    }\r\n\t    AnyOfValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var valid = false;\r\n\t        for (var _i = 0, _a = this.validators; _i < _a.length; _i++) {\r\n\t            var validator = _a[_i];\r\n\t            var errors = validator.validate(input, path, field);\r\n\t            if (!errors) {\r\n\t                valid = true;\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        if (!valid) {\r\n\t            return [{\r\n\t                    message: field + \" property is invalid\",\r\n\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t                    keyword: \"invalid\"\r\n\t                }];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return AnyOfValidator;\r\n\t}());\r\n\texports.AnyOfValidator = AnyOfValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 10 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar ReportLoadValidator = /** @class */ (function (_super) {\r\n\t    __extends(ReportLoadValidator, _super);\r\n\t    function ReportLoadValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    ReportLoadValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"accessToken\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"id\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"groupId\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"settings\",\r\n\t                validators: [validator_1.Validators.settingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"pageName\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"filters\",\r\n\t                validators: [validator_1.Validators.filtersArrayValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"permissions\",\r\n\t                validators: [validator_1.Validators.permissionsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"viewMode\",\r\n\t                validators: [validator_1.Validators.viewModeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"tokenType\",\r\n\t                validators: [validator_1.Validators.tokenTypeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"bookmark\",\r\n\t                validators: [validator_1.Validators.applyBookmarkValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"theme\",\r\n\t                validators: [validator_1.Validators.customThemeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"embedUrl\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"datasetBinding\",\r\n\t                validators: [validator_1.Validators.datasetBindingValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"contrastMode\",\r\n\t                validators: [validator_1.Validators.contrastModeValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return ReportLoadValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.ReportLoadValidator = ReportLoadValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 11 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar ReportCreateValidator = /** @class */ (function (_super) {\r\n\t    __extends(ReportCreateValidator, _super);\r\n\t    function ReportCreateValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    ReportCreateValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"accessToken\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"datasetId\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"groupId\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"tokenType\",\r\n\t                validators: [validator_1.Validators.tokenTypeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"theme\",\r\n\t                validators: [validator_1.Validators.customThemeValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return ReportCreateValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.ReportCreateValidator = ReportCreateValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 12 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar DashboardLoadValidator = /** @class */ (function (_super) {\r\n\t    __extends(DashboardLoadValidator, _super);\r\n\t    function DashboardLoadValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    DashboardLoadValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"accessToken\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"id\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"groupId\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"pageView\",\r\n\t                validators: [validator_1.Validators.pageViewFieldValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"tokenType\",\r\n\t                validators: [validator_1.Validators.tokenTypeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"embedUrl\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return DashboardLoadValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.DashboardLoadValidator = DashboardLoadValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 13 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar TileLoadValidator = /** @class */ (function (_super) {\r\n\t    __extends(TileLoadValidator, _super);\r\n\t    function TileLoadValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    TileLoadValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"accessToken\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"id\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"dashboardId\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"groupId\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"pageView\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"tokenType\",\r\n\t                validators: [validator_1.Validators.tokenTypeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"width\",\r\n\t                validators: [validator_1.Validators.numberValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"height\",\r\n\t                validators: [validator_1.Validators.numberValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return TileLoadValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.TileLoadValidator = TileLoadValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 14 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar PageSizeValidator = /** @class */ (function (_super) {\r\n\t    __extends(PageSizeValidator, _super);\r\n\t    function PageSizeValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    PageSizeValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"type\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.pageSizeTypeValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return PageSizeValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.PageSizeValidator = PageSizeValidator;\r\n\tvar CustomPageSizeValidator = /** @class */ (function (_super) {\r\n\t    __extends(CustomPageSizeValidator, _super);\r\n\t    function CustomPageSizeValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    CustomPageSizeValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"width\",\r\n\t                validators: [validator_1.Validators.numberValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"height\",\r\n\t                validators: [validator_1.Validators.numberValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return CustomPageSizeValidator;\r\n\t}(PageSizeValidator));\r\n\texports.CustomPageSizeValidator = CustomPageSizeValidator;\r\n\tvar PageValidator = /** @class */ (function (_super) {\r\n\t    __extends(PageValidator, _super);\r\n\t    function PageValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    PageValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"name\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return PageValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.PageValidator = PageValidator;\r\n\tvar PageViewFieldValidator = /** @class */ (function (_super) {\r\n\t    __extends(PageViewFieldValidator, _super);\r\n\t    function PageViewFieldValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    PageViewFieldValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var possibleValues = [\"actualSize\", \"fitToWidth\", \"oneColumn\"];\r\n\t        if (possibleValues.indexOf(input) < 0) {\r\n\t            return [{\r\n\t                    message: \"pageView must be a string with one of the following values: \\\"actualSize\\\", \\\"fitToWidth\\\", \\\"oneColumn\\\"\"\r\n\t                }];\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return PageViewFieldValidator;\r\n\t}(typeValidator_1.StringValidator));\r\n\texports.PageViewFieldValidator = PageViewFieldValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 15 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar LoadQnaValidator = /** @class */ (function (_super) {\r\n\t    __extends(LoadQnaValidator, _super);\r\n\t    function LoadQnaValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    LoadQnaValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"accessToken\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"datasetIds\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringArrayValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"question\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"viewMode\",\r\n\t                validators: [validator_1.Validators.viewModeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"settings\",\r\n\t                validators: [validator_1.Validators.qnaSettingValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"tokenType\",\r\n\t                validators: [validator_1.Validators.tokenTypeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"groupId\",\r\n\t                validators: [validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return LoadQnaValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.LoadQnaValidator = LoadQnaValidator;\r\n\tvar QnaSettingsValidator = /** @class */ (function (_super) {\r\n\t    __extends(QnaSettingsValidator, _super);\r\n\t    function QnaSettingsValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    QnaSettingsValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"filterPaneEnabled\",\r\n\t                validators: [validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"hideErrors\",\r\n\t                validators: [validator_1.Validators.booleanValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return QnaSettingsValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.QnaSettingsValidator = QnaSettingsValidator;\r\n\tvar QnaInterpretInputDataValidator = /** @class */ (function (_super) {\r\n\t    __extends(QnaInterpretInputDataValidator, _super);\r\n\t    function QnaInterpretInputDataValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    QnaInterpretInputDataValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"datasetIds\",\r\n\t                validators: [validator_1.Validators.stringArrayValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"question\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return QnaInterpretInputDataValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.QnaInterpretInputDataValidator = QnaInterpretInputDataValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 16 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar SaveAsParametersValidator = /** @class */ (function (_super) {\r\n\t    __extends(SaveAsParametersValidator, _super);\r\n\t    function SaveAsParametersValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    SaveAsParametersValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"name\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return SaveAsParametersValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.SaveAsParametersValidator = SaveAsParametersValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 17 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar MapValidator = /** @class */ (function (_super) {\r\n\t    __extends(MapValidator, _super);\r\n\t    function MapValidator(keyValidators, valueValidators) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.keyValidators = keyValidators;\r\n\t        _this.valueValidators = valueValidators;\r\n\t        return _this;\r\n\t    }\r\n\t    MapValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        for (var key in input) {\r\n\t            if (input.hasOwnProperty(key)) {\r\n\t                var fieldsPath = (path ? path + \".\" : \"\") + field + \".\" + key;\r\n\t                for (var _i = 0, _a = this.keyValidators; _i < _a.length; _i++) {\r\n\t                    var keyValidator = _a[_i];\r\n\t                    errors = keyValidator.validate(key, fieldsPath, field);\r\n\t                    if (errors) {\r\n\t                        return errors;\r\n\t                    }\r\n\t                }\r\n\t                for (var _b = 0, _c = this.valueValidators; _b < _c.length; _b++) {\r\n\t                    var valueValidator = _c[_b];\r\n\t                    errors = valueValidator.validate(input[key], fieldsPath, field);\r\n\t                    if (errors) {\r\n\t                        return errors;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    return MapValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.MapValidator = MapValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 18 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar CustomLayoutValidator = /** @class */ (function (_super) {\r\n\t    __extends(CustomLayoutValidator, _super);\r\n\t    function CustomLayoutValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    CustomLayoutValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"pageSize\",\r\n\t                validators: [validator_1.Validators.pageSizeValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"displayOption\",\r\n\t                validators: [validator_1.Validators.customLayoutDisplayOptionValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"pagesLayout\",\r\n\t                validators: [validator_1.Validators.pagesLayoutValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return CustomLayoutValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.CustomLayoutValidator = CustomLayoutValidator;\r\n\tvar VisualLayoutValidator = /** @class */ (function (_super) {\r\n\t    __extends(VisualLayoutValidator, _super);\r\n\t    function VisualLayoutValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    VisualLayoutValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"x\",\r\n\t                validators: [validator_1.Validators.numberValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"y\",\r\n\t                validators: [validator_1.Validators.numberValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"z\",\r\n\t                validators: [validator_1.Validators.numberValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"width\",\r\n\t                validators: [validator_1.Validators.numberValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"height\",\r\n\t                validators: [validator_1.Validators.numberValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"displayState\",\r\n\t                validators: [validator_1.Validators.displayStateValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return VisualLayoutValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.VisualLayoutValidator = VisualLayoutValidator;\r\n\tvar DisplayStateValidator = /** @class */ (function (_super) {\r\n\t    __extends(DisplayStateValidator, _super);\r\n\t    function DisplayStateValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    DisplayStateValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"mode\",\r\n\t                validators: [validator_1.Validators.displayStateModeValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return DisplayStateValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.DisplayStateValidator = DisplayStateValidator;\r\n\tvar PageLayoutValidator = /** @class */ (function (_super) {\r\n\t    __extends(PageLayoutValidator, _super);\r\n\t    function PageLayoutValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    PageLayoutValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"visualsLayout\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.pageLayoutValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"defaultLayout\",\r\n\t                validators: [validator_1.Validators.visualLayoutValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return PageLayoutValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.PageLayoutValidator = PageLayoutValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 19 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar ExportDataRequestValidator = /** @class */ (function (_super) {\r\n\t    __extends(ExportDataRequestValidator, _super);\r\n\t    function ExportDataRequestValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    ExportDataRequestValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"rows\",\r\n\t                validators: [new typeValidator_1.NumberValidator()]\r\n\t            },\r\n\t            {\r\n\t                field: \"exportDataType\",\r\n\t                validators: [new typeValidator_1.EnumValidator([0, 1])]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return ExportDataRequestValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.ExportDataRequestValidator = ExportDataRequestValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 20 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar typeValidator_2 = __webpack_require__(2);\r\n\tvar VisualSelectorValidator = /** @class */ (function (_super) {\r\n\t    __extends(VisualSelectorValidator, _super);\r\n\t    function VisualSelectorValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    VisualSelectorValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                // Not required for this selector only - Backward compatibility \r\n\t                field: \"$schema\",\r\n\t                validators: [validator_1.Validators.stringValidator, new typeValidator_2.SchemaValidator(\"http://powerbi.com/product/schema#visualSelector\")]\r\n\t            },\r\n\t            {\r\n\t                field: \"visualName\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return VisualSelectorValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.VisualSelectorValidator = VisualSelectorValidator;\r\n\tvar VisualTypeSelectorValidator = /** @class */ (function (_super) {\r\n\t    __extends(VisualTypeSelectorValidator, _super);\r\n\t    function VisualTypeSelectorValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    VisualTypeSelectorValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"$schema\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator, new typeValidator_2.SchemaValidator(\"http://powerbi.com/product/schema#visualTypeSelector\")]\r\n\t            },\r\n\t            {\r\n\t                field: \"visualType\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return VisualTypeSelectorValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.VisualTypeSelectorValidator = VisualTypeSelectorValidator;\r\n\tvar SlicerTargetSelectorValidator = /** @class */ (function (_super) {\r\n\t    __extends(SlicerTargetSelectorValidator, _super);\r\n\t    function SlicerTargetSelectorValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    SlicerTargetSelectorValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"$schema\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator, new typeValidator_2.SchemaValidator(\"http://powerbi.com/product/schema#slicerTargetSelector\")]\r\n\t            },\r\n\t            {\r\n\t                field: \"target\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.slicerTargetValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return SlicerTargetSelectorValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.SlicerTargetSelectorValidator = SlicerTargetSelectorValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 21 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar SlicerValidator = /** @class */ (function (_super) {\r\n\t    __extends(SlicerValidator, _super);\r\n\t    function SlicerValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    SlicerValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"selector\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.slicerSelectorValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"state\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.slicerStateValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return SlicerValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.SlicerValidator = SlicerValidator;\r\n\tvar SlicerStateValidator = /** @class */ (function (_super) {\r\n\t    __extends(SlicerStateValidator, _super);\r\n\t    function SlicerStateValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    SlicerStateValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"filters\",\r\n\t                validators: [validator_1.Validators.filtersArrayValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return SlicerStateValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.SlicerStateValidator = SlicerStateValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 22 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar VisualSettingsValidator = /** @class */ (function (_super) {\r\n\t    __extends(VisualSettingsValidator, _super);\r\n\t    function VisualSettingsValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    VisualSettingsValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"visualHeaders\",\r\n\t                validators: [validator_1.Validators.visualHeadersValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return VisualSettingsValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.VisualSettingsValidator = VisualSettingsValidator;\r\n\tvar VisualHeaderSettingsValidator = /** @class */ (function (_super) {\r\n\t    __extends(VisualHeaderSettingsValidator, _super);\r\n\t    function VisualHeaderSettingsValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    VisualHeaderSettingsValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"visible\",\r\n\t                validators: [validator_1.Validators.booleanValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return VisualHeaderSettingsValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.VisualHeaderSettingsValidator = VisualHeaderSettingsValidator;\r\n\tvar VisualHeaderValidator = /** @class */ (function (_super) {\r\n\t    __extends(VisualHeaderValidator, _super);\r\n\t    function VisualHeaderValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    VisualHeaderValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"settings\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.visualHeaderSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"selector\",\r\n\t                validators: [validator_1.Validators.visualHeaderSelectorValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return VisualHeaderValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.VisualHeaderValidator = VisualHeaderValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 23 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar CommandsSettingsValidator = /** @class */ (function (_super) {\r\n\t    __extends(CommandsSettingsValidator, _super);\r\n\t    function CommandsSettingsValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    CommandsSettingsValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"copy\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"drill\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"drillthrough\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"expandCollapse\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"exportData\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"includeExclude\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"removeVisual\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"search\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"seeData\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"sort\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"spotlight\",\r\n\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return CommandsSettingsValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.CommandsSettingsValidator = CommandsSettingsValidator;\r\n\tvar SingleCommandSettingsValidator = /** @class */ (function (_super) {\r\n\t    __extends(SingleCommandSettingsValidator, _super);\r\n\t    function SingleCommandSettingsValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    SingleCommandSettingsValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"displayOption\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.commandDisplayOptionValidator]\r\n\t            },\r\n\t            {\r\n\t                field: \"selector\",\r\n\t                validators: [validator_1.Validators.visualCommandSelectorValidator]\r\n\t            },\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return SingleCommandSettingsValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.SingleCommandSettingsValidator = SingleCommandSettingsValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 24 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar CustomThemeValidator = /** @class */ (function (_super) {\r\n\t    __extends(CustomThemeValidator, _super);\r\n\t    function CustomThemeValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    CustomThemeValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"themeJson\",\r\n\t                validators: [new typeValidator_1.ObjectValidator()]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return CustomThemeValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.CustomThemeValidator = CustomThemeValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 25 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar validator_1 = __webpack_require__(1);\r\n\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\tvar typeValidator_1 = __webpack_require__(2);\r\n\tvar DatasetBindingValidator = /** @class */ (function (_super) {\r\n\t    __extends(DatasetBindingValidator, _super);\r\n\t    function DatasetBindingValidator() {\r\n\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t    }\r\n\t    DatasetBindingValidator.prototype.validate = function (input, path, field) {\r\n\t        if (input == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t        if (errors) {\r\n\t            return errors;\r\n\t        }\r\n\t        var fields = [\r\n\t            {\r\n\t                field: \"datasetId\",\r\n\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t            }\r\n\t        ];\r\n\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t    };\r\n\t    return DatasetBindingValidator;\r\n\t}(typeValidator_1.ObjectValidator));\r\n\texports.DatasetBindingValidator = DatasetBindingValidator;\r\n\t\n\t\n\t/***/ })\n\t/******/ ]);\n\t});\n\t//# sourceMappingURL=models.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\texports.APINotSupportedForRDLError = \"This API is currently not supported for RDL reports\";\r\n\texports.EmbedUrlNotSupported = \"Embed URL is invalid for this scenario. Please use Power BI REST APIs to get the valid URL\";\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar embed = __webpack_require__(2);\r\n\tvar models = __webpack_require__(5);\r\n\tvar utils = __webpack_require__(3);\r\n\tvar errors = __webpack_require__(6);\r\n\tvar page_1 = __webpack_require__(8);\r\n\tvar defaults_1 = __webpack_require__(10);\r\n\tvar bookmarksManager_1 = __webpack_require__(11);\r\n\t/**\r\n\t * The Power BI Report embed component\r\n\t *\r\n\t * @export\r\n\t * @class Report\r\n\t * @extends {embed.Embed}\r\n\t * @implements {IReportNode}\r\n\t * @implements {IFilterable}\r\n\t */\r\n\tvar Report = (function (_super) {\r\n\t    __extends(Report, _super);\r\n\t    /**\r\n\t     * Creates an instance of a Power BI Report.\r\n\t     *\r\n\t     * @param {service.Service} service\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IEmbedConfiguration} config\r\n\t     * @hidden\r\n\t     */\r\n\t    function Report(service, element, baseConfig, phasedRender, isBootstrap, iframe) {\r\n\t        var config = baseConfig;\r\n\t        _super.call(this, service, element, config, iframe, phasedRender, isBootstrap);\r\n\t        this.loadPath = \"/report/load\";\r\n\t        this.phasedLoadPath = \"/report/prepare\";\r\n\t        Array.prototype.push.apply(this.allowedEvents, Report.allowedEvents);\r\n\t        this.bookmarksManager = new bookmarksManager_1.BookmarksManager(service, config, this.iframe);\r\n\t    }\r\n\t    /**\r\n\t     * Adds backwards compatibility for the previous load configuration, which used the reportId query parameter to specify the report ID\r\n\t     * (e.g. http://embedded.powerbi.com/appTokenReportEmbed?reportId=854846ed-2106-4dc2-bc58-eb77533bf2f1).\r\n\t     *\r\n\t     * By extracting the ID we can ensure that the ID is always explicitly provided as part of the load configuration.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {string} url\r\n\t     * @returns {string}\r\n\t     * @hidden\r\n\t     */\r\n\t    Report.findIdFromEmbedUrl = function (url) {\r\n\t        var reportIdRegEx = /reportId=\"?([^&]+)\"?/;\r\n\t        var reportIdMatch = url.match(reportIdRegEx);\r\n\t        var reportId;\r\n\t        if (reportIdMatch) {\r\n\t            reportId = reportIdMatch[1];\r\n\t        }\r\n\t        return reportId;\r\n\t    };\r\n\t    /**\r\n\t     * Render a preloaded report, using phased embedding API\r\n\t     *\r\n\t     * ```javascript\r\n\t     * // Load report\r\n\t     * var report = powerbi.load(element, config);\r\n\t     *\r\n\t     * ...\r\n\t     *\r\n\t     * // Render report\r\n\t     * report.render()\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.render = function (config) {\r\n\t        return this.service.hpm.post(\"/report/render\", config, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Gets filters that are applied at the report level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * // Get filters applied at report level\r\n\t     * report.getFilters()\r\n\t     *   .then(filters => {\r\n\t     *     ...\r\n\t     *   });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<models.IFilter[]>}\r\n\t     */\r\n\t    Report.prototype.getFilters = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.get(\"/report/filters\", { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Gets the report ID from the first available location: options, attribute, embed url.\r\n\t     *\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Report.prototype.getId = function () {\r\n\t        var config = this.config;\r\n\t        var reportId = config.id || this.element.getAttribute(Report.reportIdAttribute) || Report.findIdFromEmbedUrl(config.embedUrl);\r\n\t        if (typeof reportId !== 'string' || reportId.length === 0) {\r\n\t            throw new Error(\"Report id is required, but it was not found. You must provide an id either as part of embed configuration or as attribute '\" + Report.reportIdAttribute + \"'.\");\r\n\t        }\r\n\t        return reportId;\r\n\t    };\r\n\t    /**\r\n\t     * Gets the list of pages within the report.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.getPages()\r\n\t     *  .then(pages => {\r\n\t     *      ...\r\n\t     *  });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<Page[]>}\r\n\t     */\r\n\t    Report.prototype.getPages = function () {\r\n\t        var _this = this;\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.get('/report/pages', { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body\r\n\t                .map(function (page) {\r\n\t                return new page_1.Page(_this, page.name, page.displayName, page.isActive, page.visibility, page.defaultSize, page.defaultDisplayOption);\r\n\t            });\r\n\t        }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Creates an instance of a Page.\r\n\t     *\r\n\t     * Normally you would get Page objects by calling `report.getPages()`, but in the case\r\n\t     * that the page name is known and you want to perform an action on a page without having to retrieve it\r\n\t     * you can create it directly.\r\n\t     *\r\n\t     * Note: Because you are creating the page manually there is no guarantee that the page actually exists in the report, and subsequent requests could fail.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * const page = report.page('ReportSection1');\r\n\t     * page.setActive();\r\n\t     * ```\r\n\t     *\r\n\t     * @param {string} name\r\n\t     * @param {string} [displayName]\r\n\t     * @param {boolean} [isActive]\r\n\t     * @returns {Page}\r\n\t     */\r\n\t    Report.prototype.page = function (name, displayName, isActive, visibility) {\r\n\t        return new page_1.Page(this, name, displayName, isActive, visibility);\r\n\t    };\r\n\t    /**\r\n\t     * Prints the active page of the report by invoking `window.print()` on the embed iframe component.\r\n\t     */\r\n\t    Report.prototype.print = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.post('/report/print', null, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Removes all filters at the report level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.removeFilters();\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.removeFilters = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.setFilters([]);\r\n\t    };\r\n\t    /**\r\n\t     * Sets the active page of the report.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.setPage(\"page2\")\r\n\t     *  .catch(error => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {string} pageName\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.setPage = function (pageName) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        var page = {\r\n\t            name: pageName,\r\n\t            displayName: null,\r\n\t            isActive: true\r\n\t        };\r\n\t        return this.service.hpm.put('/report/pages/active', page, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Sets filters at the report level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * const filters: [\r\n\t     *    ...\r\n\t     * ];\r\n\t     *\r\n\t     * report.setFilters(filters)\r\n\t     *  .catch(errors => {\r\n\t     *    ...\r\n\t     *  });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {(models.IFilter[])} filters\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.setFilters = function (filters) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.put(\"/report/filters\", filters, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Updates visibility settings for the filter pane and the page navigation pane.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * const newSettings = {\r\n\t     *   navContentPaneEnabled: true,\r\n\t     *   filterPaneEnabled: false\r\n\t     * };\r\n\t     *\r\n\t     * report.updateSettings(newSettings)\r\n\t     *   .catch(error => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {models.ISettings} settings\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.updateSettings = function (settings) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl) && settings.customLayout != null) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.patch('/report/settings', settings, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Validate load configuration.\r\n\t     */\r\n\t    Report.prototype.validate = function (config) {\r\n\t        return models.validateReportLoad(config);\r\n\t    };\r\n\t    /**\r\n\t     * Handle config changes.\r\n\t     *\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Report.prototype.configChanged = function (isBootstrap) {\r\n\t        var config = this.config;\r\n\t        if (this.isMobileSettings(config.settings))\r\n\t            config.embedUrl = utils.addParamToUrl(config.embedUrl, \"isMobile\", \"true\");\r\n\t        // Calculate settings from HTML element attributes if available.\r\n\t        var filterPaneEnabledAttribute = this.element.getAttribute(Report.filterPaneEnabledAttribute);\r\n\t        var navContentPaneEnabledAttribute = this.element.getAttribute(Report.navContentPaneEnabledAttribute);\r\n\t        var elementAttrSettings = {\r\n\t            filterPaneEnabled: (filterPaneEnabledAttribute == null) ? defaults_1.Defaults.defaultSettings.filterPaneEnabled : (filterPaneEnabledAttribute !== \"false\"),\r\n\t            navContentPaneEnabled: (navContentPaneEnabledAttribute == null) ? defaults_1.Defaults.defaultSettings.navContentPaneEnabled : (navContentPaneEnabledAttribute !== \"false\")\r\n\t        };\r\n\t        // Set the settings back into the config.\r\n\t        this.config.settings = utils.assign({}, elementAttrSettings, config.settings);\r\n\t        if (isBootstrap) {\r\n\t            return;\r\n\t        }\r\n\t        config.id = this.getId();\r\n\t    };\r\n\t    /**\r\n\t     * @hidden\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Report.prototype.getDefaultEmbedUrlEndpoint = function () {\r\n\t        return \"reportEmbed\";\r\n\t    };\r\n\t    /**\r\n\t     * Switch Report view mode.\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.switchMode = function (viewMode) {\r\n\t        var newMode;\r\n\t        if (typeof viewMode === \"string\") {\r\n\t            newMode = viewMode;\r\n\t        }\r\n\t        else {\r\n\t            newMode = this.viewModeToString(viewMode);\r\n\t        }\r\n\t        var url = '/report/switchMode/' + newMode;\r\n\t        return this.service.hpm.post(url, null, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t    * Refreshes data sources for the report.\r\n\t    *\r\n\t    * ```javascript\r\n\t    * report.refresh();\r\n\t    * ```\r\n\t    */\r\n\t    Report.prototype.refresh = function () {\r\n\t        return this.service.hpm.post('/report/refresh', null, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * checks if the report is saved.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.isSaved()\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<boolean>}\r\n\t     */\r\n\t    Report.prototype.isSaved = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return utils.isSavedInternal(this.service.hpm, this.config.uniqueId, this.iframe.contentWindow);\r\n\t    };\r\n\t    /**\r\n\t     * Apply a theme to the report\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.applyTheme(theme);\r\n\t     * ```\r\n\t     */\r\n\t    Report.prototype.applyTheme = function (theme) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.applyThemeInternal(theme);\r\n\t    };\r\n\t    /**\r\n\t    * Reset and apply the default theme of the report\r\n\t    *\r\n\t    * ```javascript\r\n\t    * report.resetTheme();\r\n\t    * ```\r\n\t    */\r\n\t    Report.prototype.resetTheme = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.applyThemeInternal({});\r\n\t    };\r\n\t    /**\r\n\t     * @hidden\r\n\t     */\r\n\t    Report.prototype.applyThemeInternal = function (theme) {\r\n\t        return this.service.hpm.put('/report/theme', theme, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * @hidden\r\n\t     */\r\n\t    Report.prototype.viewModeToString = function (viewMode) {\r\n\t        var mode;\r\n\t        switch (viewMode) {\r\n\t            case models.ViewMode.Edit:\r\n\t                mode = \"edit\";\r\n\t                break;\r\n\t            case models.ViewMode.View:\r\n\t                mode = \"view\";\r\n\t                break;\r\n\t        }\r\n\t        return mode;\r\n\t    };\r\n\t    /**\r\n\t     * @hidden\r\n\t     */\r\n\t    Report.prototype.isMobileSettings = function (settings) {\r\n\t        return settings && (settings.layoutType === models.LayoutType.MobileLandscape || settings.layoutType === models.LayoutType.MobilePortrait);\r\n\t    };\r\n\t    /** @hidden */\r\n\t    Report.allowedEvents = [\"filtersApplied\", \"pageChanged\", \"commandTriggered\", \"swipeStart\", \"swipeEnd\", \"bookmarkApplied\", \"dataHyperlinkClicked\"];\r\n\t    /** @hidden */\r\n\t    Report.reportIdAttribute = 'powerbi-report-id';\r\n\t    /** @hidden */\r\n\t    Report.filterPaneEnabledAttribute = 'powerbi-settings-filter-pane-enabled';\r\n\t    /** @hidden */\r\n\t    Report.navContentPaneEnabledAttribute = 'powerbi-settings-nav-content-pane-enabled';\r\n\t    /** @hidden */\r\n\t    Report.typeAttribute = 'powerbi-type';\r\n\t    /** @hidden */\r\n\t    Report.type = \"Report\";\r\n\t    return Report;\r\n\t}(embed.Embed));\r\n\texports.Report = Report;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar visualDescriptor_1 = __webpack_require__(9);\r\n\tvar models = __webpack_require__(5);\r\n\tvar utils = __webpack_require__(3);\r\n\tvar errors = __webpack_require__(6);\r\n\t/**\r\n\t * A Power BI report page\r\n\t *\r\n\t * @export\r\n\t * @class Page\r\n\t * @implements {IPageNode}\r\n\t * @implements {IFilterable}\r\n\t */\r\n\tvar Page = (function () {\r\n\t    /**\r\n\t     * Creates an instance of a Power BI report page.\r\n\t     *\r\n\t     * @param {IReportNode} report\r\n\t     * @param {string} name\r\n\t     * @param {string} [displayName]\r\n\t     * @param {boolean} [isActivePage]\r\n\t     * @param {models.SectionVisibility} [visibility]\r\n\t     * @hidden\r\n\t     */\r\n\t    function Page(report, name, displayName, isActivePage, visibility, defaultSize, defaultDisplayOption) {\r\n\t        this.report = report;\r\n\t        this.name = name;\r\n\t        this.displayName = displayName;\r\n\t        this.isActive = isActivePage;\r\n\t        this.visibility = visibility;\r\n\t        this.defaultSize = defaultSize;\r\n\t        this.defaultDisplayOption = defaultDisplayOption;\r\n\t    }\r\n\t    /**\r\n\t     * Gets all page level filters within the report.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * page.getFilters()\r\n\t     *  .then(filters => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {(Promise<models.IFilter[]>)}\r\n\t     */\r\n\t    Page.prototype.getFilters = function () {\r\n\t        return this.report.service.hpm.get(\"/report/pages/\" + this.name + \"/filters\", { uid: this.report.config.uniqueId }, this.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Removes all filters from this page of the report.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * page.removeFilters();\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Page.prototype.removeFilters = function () {\r\n\t        return this.setFilters([]);\r\n\t    };\r\n\t    /**\r\n\t     * Makes the current page the active page of the report.\r\n\t     *\r\n\t     * ```javascripot\r\n\t     * page.setActive();\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Page.prototype.setActive = function () {\r\n\t        var page = {\r\n\t            name: this.name,\r\n\t            displayName: null,\r\n\t            isActive: true\r\n\t        };\r\n\t        return this.report.service.hpm.put('/report/pages/active', page, { uid: this.report.config.uniqueId }, this.report.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Sets all filters on the current page.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * page.setFilters(filters);\r\n\t     *   .catch(errors => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {(models.IFilter[])} filters\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Page.prototype.setFilters = function (filters) {\r\n\t        return this.report.service.hpm.put(\"/report/pages/\" + this.name + \"/filters\", filters, { uid: this.report.config.uniqueId }, this.report.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Gets all the visuals on the page.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * page.getVisuals()\r\n\t     *   .then(visuals => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<VisualDescriptor[]>}\r\n\t     */\r\n\t    Page.prototype.getVisuals = function () {\r\n\t        var _this = this;\r\n\t        if (utils.isRDLEmbed(this.report.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.report.service.hpm.get(\"/report/pages/\" + this.name + \"/visuals\", { uid: this.report.config.uniqueId }, this.report.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body\r\n\t                .map(function (visual) {\r\n\t                return new visualDescriptor_1.VisualDescriptor(_this, visual.name, visual.title, visual.type, visual.layout);\r\n\t            });\r\n\t        }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Checks if page has layout.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * page.hasLayout(layoutType)\r\n\t     *  .then(hasLayout: boolean => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {(Promise<boolean>)}\r\n\t     */\r\n\t    Page.prototype.hasLayout = function (layoutType) {\r\n\t        if (utils.isRDLEmbed(this.report.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        var layoutTypeEnum = models.LayoutType[layoutType];\r\n\t        return this.report.service.hpm.get(\"/report/pages/\" + this.name + \"/layoutTypes/\" + layoutTypeEnum, { uid: this.report.config.uniqueId }, this.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    return Page;\r\n\t}());\r\n\texports.Page = Page;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * A Power BI visual within a page\r\n\t *\r\n\t * @export\r\n\t * @class VisualDescriptor\r\n\t * @implements {IVisualNode}\r\n\t */\r\n\tvar VisualDescriptor = (function () {\r\n\t    /**\r\n\t     * @hidden\r\n\t     */\r\n\t    function VisualDescriptor(page, name, title, type, layout) {\r\n\t        this.name = name;\r\n\t        this.title = title;\r\n\t        this.type = type;\r\n\t        this.layout = layout;\r\n\t        this.page = page;\r\n\t    }\r\n\t    /**\r\n\t     * Gets all visual level filters of the current visual.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.getFilters()\r\n\t     *  .then(filters => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {(Promise<models.IFilter[]>)}\r\n\t     */\r\n\t    VisualDescriptor.prototype.getFilters = function () {\r\n\t        return this.page.report.service.hpm.get(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/filters\", { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Removes all filters from the current visual.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.removeFilters();\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    VisualDescriptor.prototype.removeFilters = function () {\r\n\t        return this.setFilters([]);\r\n\t    };\r\n\t    /**\r\n\t     * Sets the filters on the current visual to 'filters'.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.setFilters(filters);\r\n\t     *   .catch(errors => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {(models.IFilter[])} filters\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    VisualDescriptor.prototype.setFilters = function (filters) {\r\n\t        return this.page.report.service.hpm.put(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/filters\", filters, { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Exports Visual data.\r\n\t     * Can export up to 30K rows.\r\n\t     * @param rows: Optional. Default value is 30K, maximum value is 30K as well.\r\n\t     * @param exportDataType: Optional. Default is models.ExportDataType.Summarized.\r\n\t     * ```javascript\r\n\t     * visual.exportData()\r\n\t     *  .then(data => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {(Promise<models.ExportDataType>)}\r\n\t     */\r\n\t    VisualDescriptor.prototype.exportData = function (exportDataType, rows) {\r\n\t        var exportDataRequestBody = {\r\n\t            rows: rows,\r\n\t            exportDataType: exportDataType\r\n\t        };\r\n\t        return this.page.report.service.hpm.post(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/exportData\", exportDataRequestBody, { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Set slicer state.\r\n\t     * Works only for visuals of type slicer.\r\n\t     * @param state: A new state which contains the slicer filters.\r\n\t     * ```javascript\r\n\t     * visual.setSlicerState()\r\n\t     *  .then(() => { ... });\r\n\t     * ```\r\n\t     */\r\n\t    VisualDescriptor.prototype.setSlicerState = function (state) {\r\n\t        return this.page.report.service.hpm.put(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/slicer\", state, { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Get slicer state.\r\n\t     * Works only for visuals of type slicer.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.getSlicerState()\r\n\t     *  .then(state => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {(Promise<models.ISlicerState>)}\r\n\t     */\r\n\t    VisualDescriptor.prototype.getSlicerState = function () {\r\n\t        return this.page.report.service.hpm.get(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/slicer\", { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Clone existing visual to a new instance.\r\n\t     *\r\n\t     * @returns {(Promise<models.ICloneVisualResponse>)}\r\n\t     */\r\n\t    VisualDescriptor.prototype.clone = function (request) {\r\n\t        if (request === void 0) { request = {}; }\r\n\t        return this.page.report.service.hpm.post(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/clone\", request, { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Sort a visual by dataField and direction.\r\n\t     *\r\n\t     * @param request: Sort by visual request.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.sortBy(request)\r\n\t     *  .then(() => { ... });\r\n\t     * ```\r\n\t     */\r\n\t    VisualDescriptor.prototype.sortBy = function (request) {\r\n\t        return this.page.report.service.hpm.put(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/sortBy\", request, { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    return VisualDescriptor;\r\n\t}());\r\n\texports.VisualDescriptor = VisualDescriptor;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\t/** @hidden */\r\n\tvar Defaults = (function () {\r\n\t    function Defaults() {\r\n\t    }\r\n\t    Defaults.defaultSettings = {\r\n\t        filterPaneEnabled: true\r\n\t    };\r\n\t    Defaults.defaultQnaSettings = {\r\n\t        filterPaneEnabled: false\r\n\t    };\r\n\t    return Defaults;\r\n\t}());\r\n\texports.Defaults = Defaults;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar utils = __webpack_require__(3);\r\n\tvar errors = __webpack_require__(6);\r\n\t/**\r\n\t * Manages report bookmarks.\r\n\t *\r\n\t * @export\r\n\t * @class BookmarksManager\r\n\t * @implements {IBookmarksManager}\r\n\t */\r\n\tvar BookmarksManager = (function () {\r\n\t    /**\r\n\t     * @hidden\r\n\t     */\r\n\t    function BookmarksManager(service, config, iframe) {\r\n\t        this.service = service;\r\n\t        this.config = config;\r\n\t        this.iframe = iframe;\r\n\t    }\r\n\t    /**\r\n\t     * Gets bookmarks that are defined in the report.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * // Gets bookmarks that are defined in the report\r\n\t     * bookmarksManager.getBookmarks()\r\n\t     *   .then(bookmarks => {\r\n\t     *     ...\r\n\t     *   });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<models.IReportBookmark[]>}\r\n\t     */\r\n\t    BookmarksManager.prototype.getBookmarks = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.get(\"/report/bookmarks\", { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Apply bookmark by name.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * bookmarksManager.apply(bookmarkName)\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    BookmarksManager.prototype.apply = function (bookmarkName) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        var request = {\r\n\t            name: bookmarkName\r\n\t        };\r\n\t        return this.service.hpm.post(\"/report/bookmarks/applyByName\", request, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Play bookmarks: Enter or Exit bookmarks presentation mode.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * // Enter presentation mode.\r\n\t     * bookmarksManager.play(true)\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    BookmarksManager.prototype.play = function (playMode) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        var playBookmarkRequest = {\r\n\t            playMode: playMode\r\n\t        };\r\n\t        return this.service.hpm.post(\"/report/bookmarks/play\", playBookmarkRequest, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Capture bookmark from current state.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * bookmarksManager.capture()\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<models.IReportBookmark>}\r\n\t     */\r\n\t    BookmarksManager.prototype.capture = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.post(\"/report/bookmarks/capture\", null, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Apply bookmark state.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * bookmarksManager.applyState(bookmarkState)\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    BookmarksManager.prototype.applyState = function (state) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        var request = {\r\n\t            state: state\r\n\t        };\r\n\t        return this.service.hpm.post(\"/report/bookmarks/applyState\", request, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    return BookmarksManager;\r\n\t}());\r\n\texports.BookmarksManager = BookmarksManager;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar models = __webpack_require__(5);\r\n\tvar embed = __webpack_require__(2);\r\n\tvar utils = __webpack_require__(3);\r\n\t/**\r\n\t * A Power BI Report creator component\r\n\t *\r\n\t * @export\r\n\t * @class Create\r\n\t * @extends {embed.Embed}\r\n\t */\r\n\tvar Create = (function (_super) {\r\n\t    __extends(Create, _super);\r\n\t    /*\r\n\t     * @hidden\r\n\t     */\r\n\t    function Create(service, element, config, phasedRender, isBootstrap) {\r\n\t        _super.call(this, service, element, config, /* iframe */ undefined, phasedRender, isBootstrap);\r\n\t    }\r\n\t    /**\r\n\t     * Gets the dataset ID from the first available location: createConfig or embed url.\r\n\t     *\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Create.prototype.getId = function () {\r\n\t        var datasetId = (this.createConfig && this.createConfig.datasetId) ? this.createConfig.datasetId : Create.findIdFromEmbedUrl(this.config.embedUrl);\r\n\t        if (typeof datasetId !== 'string' || datasetId.length === 0) {\r\n\t            throw new Error('Dataset id is required, but it was not found. You must provide an id either as part of embed configuration.');\r\n\t        }\r\n\t        return datasetId;\r\n\t    };\r\n\t    /**\r\n\t     * Validate create report configuration.\r\n\t     */\r\n\t    Create.prototype.validate = function (config) {\r\n\t        return models.validateCreateReport(config);\r\n\t    };\r\n\t    /**\r\n\t     * Handle config changes.\r\n\t     *\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Create.prototype.configChanged = function (isBootstrap) {\r\n\t        if (isBootstrap) {\r\n\t            return;\r\n\t        }\r\n\t        var config = this.config;\r\n\t        this.createConfig = {\r\n\t            accessToken: config.accessToken,\r\n\t            datasetId: config.datasetId || this.getId(),\r\n\t            groupId: config.groupId,\r\n\t            settings: config.settings,\r\n\t            tokenType: config.tokenType,\r\n\t            theme: config.theme\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * @hidden\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Create.prototype.getDefaultEmbedUrlEndpoint = function () {\r\n\t        return \"reportEmbed\";\r\n\t    };\r\n\t    /**\r\n\t     * checks if the report is saved.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.isSaved()\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<boolean>}\r\n\t     */\r\n\t    Create.prototype.isSaved = function () {\r\n\t        return utils.isSavedInternal(this.service.hpm, this.config.uniqueId, this.iframe.contentWindow);\r\n\t    };\r\n\t    /**\r\n\t     * Adds the ability to get datasetId from url.\r\n\t     * (e.g. http://embedded.powerbi.com/appTokenReportEmbed?datasetId=854846ed-2106-4dc2-bc58-eb77533bf2f1).\r\n\t     *\r\n\t     * By extracting the ID we can ensure that the ID is always explicitly provided as part of the create configuration.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {string} url\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Create.findIdFromEmbedUrl = function (url) {\r\n\t        var datasetIdRegEx = /datasetId=\"?([^&]+)\"?/;\r\n\t        var datasetIdMatch = url.match(datasetIdRegEx);\r\n\t        var datasetId;\r\n\t        if (datasetIdMatch) {\r\n\t            datasetId = datasetIdMatch[1];\r\n\t        }\r\n\t        return datasetId;\r\n\t    };\r\n\t    return Create;\r\n\t}(embed.Embed));\r\n\texports.Create = Create;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar embed = __webpack_require__(2);\r\n\tvar models = __webpack_require__(5);\r\n\t/**\r\n\t * A Power BI Dashboard embed component\r\n\t *\r\n\t * @export\r\n\t * @class Dashboard\r\n\t * @extends {embed.Embed}\r\n\t * @implements {IDashboardNode}\r\n\t * @implements {IFilterable}\r\n\t */\r\n\tvar Dashboard = (function (_super) {\r\n\t    __extends(Dashboard, _super);\r\n\t    /**\r\n\t     * Creates an instance of a Power BI Dashboard.\r\n\t     *\r\n\t     * @param {service.Service} service\r\n\t     * @hidden\r\n\t     * @param {HTMLElement} element\r\n\t     */\r\n\t    function Dashboard(service, element, config, phasedRender, isBootstrap) {\r\n\t        _super.call(this, service, element, config, /* iframe */ undefined, phasedRender, isBootstrap);\r\n\t        this.loadPath = \"/dashboard/load\";\r\n\t        this.phasedLoadPath = \"/dashboard/prepare\";\r\n\t        Array.prototype.push.apply(this.allowedEvents, Dashboard.allowedEvents);\r\n\t    }\r\n\t    /**\r\n\t     * This adds backwards compatibility for older config which used the dashboardId query param to specify dashboard id.\r\n\t     * E.g. https://powerbi-df.analysis-df.windows.net/dashboardEmbedHost?dashboardId=e9363c62-edb6-4eac-92d3-2199c5ca2a9e\r\n\t     *\r\n\t     * By extracting the id we can ensure id is always explicitly provided as part of the load configuration.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {string} url\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Dashboard.findIdFromEmbedUrl = function (url) {\r\n\t        var dashboardIdRegEx = /dashboardId=\"?([^&]+)\"?/;\r\n\t        var dashboardIdMatch = url.match(dashboardIdRegEx);\r\n\t        var dashboardId;\r\n\t        if (dashboardIdMatch) {\r\n\t            dashboardId = dashboardIdMatch[1];\r\n\t        }\r\n\t        return dashboardId;\r\n\t    };\r\n\t    /**\r\n\t     * Get dashboard id from first available location: options, attribute, embed url.\r\n\t     *\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Dashboard.prototype.getId = function () {\r\n\t        var config = this.config;\r\n\t        var dashboardId = config.id || this.element.getAttribute(Dashboard.dashboardIdAttribute) || Dashboard.findIdFromEmbedUrl(config.embedUrl);\r\n\t        if (typeof dashboardId !== 'string' || dashboardId.length === 0) {\r\n\t            throw new Error(\"Dashboard id is required, but it was not found. You must provide an id either as part of embed configuration or as attribute '\" + Dashboard.dashboardIdAttribute + \"'.\");\r\n\t        }\r\n\t        return dashboardId;\r\n\t    };\r\n\t    /**\r\n\t     * Validate load configuration.\r\n\t     */\r\n\t    Dashboard.prototype.validate = function (baseConfig) {\r\n\t        var config = baseConfig;\r\n\t        var error = models.validateDashboardLoad(config);\r\n\t        return error ? error : this.ValidatePageView(config.pageView);\r\n\t    };\r\n\t    /**\r\n\t     * Handle config changes.\r\n\t     * @hidden\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Dashboard.prototype.configChanged = function (isBootstrap) {\r\n\t        if (isBootstrap) {\r\n\t            return;\r\n\t        }\r\n\t        // Populate dashboard id into config object.\r\n\t        this.config.id = this.getId();\r\n\t    };\r\n\t    /**\r\n\t     * @hidden\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Dashboard.prototype.getDefaultEmbedUrlEndpoint = function () {\r\n\t        return \"dashboardEmbed\";\r\n\t    };\r\n\t    /**\r\n\t     * Validate that pageView has a legal value: if page view is defined it must have one of the values defined in models.PageView\r\n\t     * @hidden\r\n\t     */\r\n\t    Dashboard.prototype.ValidatePageView = function (pageView) {\r\n\t        if (pageView && pageView !== \"fitToWidth\" && pageView !== \"oneColumn\" && pageView !== \"actualSize\") {\r\n\t            return [{ message: \"pageView must be one of the followings: fitToWidth, oneColumn, actualSize\" }];\r\n\t        }\r\n\t    };\r\n\t    /** @hidden */\r\n\t    Dashboard.allowedEvents = [\"tileClicked\", \"error\"];\r\n\t    /** @hidden */\r\n\t    Dashboard.dashboardIdAttribute = 'powerbi-dashboard-id';\r\n\t    /** @hidden */\r\n\t    Dashboard.typeAttribute = 'powerbi-type';\r\n\t    /** @hidden */\r\n\t    Dashboard.type = \"Dashboard\";\r\n\t    return Dashboard;\r\n\t}(embed.Embed));\r\n\texports.Dashboard = Dashboard;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar models = __webpack_require__(5);\r\n\tvar embed = __webpack_require__(2);\r\n\t/**\r\n\t * The Power BI tile embed component\r\n\t *\r\n\t * @export\r\n\t * @class Tile\r\n\t * @extends {Embed}\r\n\t */\r\n\tvar Tile = (function (_super) {\r\n\t    __extends(Tile, _super);\r\n\t    /**\r\n\t     * @hidden\r\n\t     */\r\n\t    function Tile(service, element, baseConfig, phasedRender, isBootstrap) {\r\n\t        var config = baseConfig;\r\n\t        _super.call(this, service, element, config, /* iframe */ undefined, phasedRender, isBootstrap);\r\n\t        this.loadPath = \"/tile/load\";\r\n\t        Array.prototype.push.apply(this.allowedEvents, Tile.allowedEvents);\r\n\t    }\r\n\t    /**\r\n\t     * The ID of the tile\r\n\t     *\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Tile.prototype.getId = function () {\r\n\t        var config = this.config;\r\n\t        var tileId = config.id || Tile.findIdFromEmbedUrl(this.config.embedUrl);\r\n\t        if (typeof tileId !== 'string' || tileId.length === 0) {\r\n\t            throw new Error(\"Tile id is required, but it was not found. You must provide an id either as part of embed configuration.\");\r\n\t        }\r\n\t        return tileId;\r\n\t    };\r\n\t    /**\r\n\t     * Validate load configuration.\r\n\t     */\r\n\t    Tile.prototype.validate = function (config) {\r\n\t        var embedConfig = config;\r\n\t        return models.validateTileLoad(embedConfig);\r\n\t    };\r\n\t    /**\r\n\t     * Handle config changes.\r\n\t     *\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Tile.prototype.configChanged = function (isBootstrap) {\r\n\t        if (isBootstrap) {\r\n\t            return;\r\n\t        }\r\n\t        // Populate tile id into config object.\r\n\t        this.config.id = this.getId();\r\n\t    };\r\n\t    /**\r\n\t     * @hidden\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Tile.prototype.getDefaultEmbedUrlEndpoint = function () {\r\n\t        return \"tileEmbed\";\r\n\t    };\r\n\t    /**\r\n\t     * Adds the ability to get tileId from url.\r\n\t     * By extracting the ID we can ensure that the ID is always explicitly provided as part of the load configuration.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {string} url\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Tile.findIdFromEmbedUrl = function (url) {\r\n\t        var tileIdRegEx = /tileId=\"?([^&]+)\"?/;\r\n\t        var tileIdMatch = url.match(tileIdRegEx);\r\n\t        var tileId;\r\n\t        if (tileIdMatch) {\r\n\t            tileId = tileIdMatch[1];\r\n\t        }\r\n\t        return tileId;\r\n\t    };\r\n\t    /** @hidden */\r\n\t    Tile.type = \"Tile\";\r\n\t    /** @hidden */\r\n\t    Tile.allowedEvents = [\"tileClicked\", \"tileLoaded\"];\r\n\t    return Tile;\r\n\t}(embed.Embed));\r\n\texports.Tile = Tile;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar models = __webpack_require__(5);\r\n\tvar embed = __webpack_require__(2);\r\n\t/**\r\n\t * The Power BI Qna embed component\r\n\t *\r\n\t * @export\r\n\t * @class Qna\r\n\t * @extends {Embed}\r\n\t */\r\n\tvar Qna = (function (_super) {\r\n\t    __extends(Qna, _super);\r\n\t    /**\r\n\t     * @hidden\r\n\t     */\r\n\t    function Qna(service, element, config, phasedRender, isBootstrap) {\r\n\t        _super.call(this, service, element, config, /* iframe */ undefined, phasedRender, isBootstrap);\r\n\t        this.loadPath = \"/qna/load\";\r\n\t        this.phasedLoadPath = \"/qna/prepare\";\r\n\t        Array.prototype.push.apply(this.allowedEvents, Qna.allowedEvents);\r\n\t    }\r\n\t    /**\r\n\t     * The ID of the Qna embed component\r\n\t     *\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Qna.prototype.getId = function () {\r\n\t        return null;\r\n\t    };\r\n\t    /**\r\n\t     * Change the question of the Q&A embed component\r\n\t     *\r\n\t     * @param question - question which will render Q&A data\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Qna.prototype.setQuestion = function (question) {\r\n\t        var qnaData = {\r\n\t            question: question\r\n\t        };\r\n\t        return this.service.hpm.post('/qna/interpret', qnaData, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Handle config changes.\r\n\t     *\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Qna.prototype.configChanged = function (isBootstrap) {\r\n\t        // Nothing to do in qna embed.\r\n\t    };\r\n\t    /**\r\n\t     * @hidden\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Qna.prototype.getDefaultEmbedUrlEndpoint = function () {\r\n\t        return \"qnaEmbed\";\r\n\t    };\r\n\t    /**\r\n\t     * Validate load configuration.\r\n\t     */\r\n\t    Qna.prototype.validate = function (config) {\r\n\t        return models.validateLoadQnaConfiguration(config);\r\n\t    };\r\n\t    /** @hidden */\r\n\t    Qna.type = \"Qna\";\r\n\t    /** @hidden */\r\n\t    Qna.allowedEvents = [\"loaded\", \"visualRendered\"];\r\n\t    return Qna;\r\n\t}(embed.Embed));\r\n\texports.Qna = Qna;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar models = __webpack_require__(5);\r\n\tvar report_1 = __webpack_require__(7);\r\n\t/**\r\n\t * The Power BI Visual embed component\r\n\t *\r\n\t * @export\r\n\t * @class Visual\r\n\t */\r\n\tvar Visual = (function (_super) {\r\n\t    __extends(Visual, _super);\r\n\t    /**\r\n\t     * Creates an instance of a Power BI Single Visual.\r\n\t     *\r\n\t     * @param {service.Service} service\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IEmbedConfiguration} config\r\n\t     * @hidden\r\n\t     */\r\n\t    function Visual(service, element, baseConfig, phasedRender, isBootstrap, iframe) {\r\n\t        _super.call(this, service, element, baseConfig, phasedRender, isBootstrap, iframe);\r\n\t    }\r\n\t    Visual.prototype.load = function (baseConfig, phasedRender) {\r\n\t        var config = baseConfig;\r\n\t        if (!config.accessToken) {\r\n\t            // bootstrap flow.\r\n\t            return;\r\n\t        }\r\n\t        if (typeof config.pageName !== 'string' || config.pageName.length === 0) {\r\n\t            throw new Error(\"Page name is required when embedding a visual.\");\r\n\t        }\r\n\t        if (typeof config.visualName !== 'string' || config.visualName.length === 0) {\r\n\t            throw new Error(\"Visual name is required, but it was not found. You must provide a visual name as part of embed configuration.\");\r\n\t        }\r\n\t        // calculate custom layout settings and override config.\r\n\t        var width = config.width ? config.width : this.iframe.offsetWidth;\r\n\t        var height = config.height ? config.height : this.iframe.offsetHeight;\r\n\t        var pageSize = {\r\n\t            type: models.PageSizeType.Custom,\r\n\t            width: width,\r\n\t            height: height,\r\n\t        };\r\n\t        var pagesLayout = {};\r\n\t        pagesLayout[config.pageName] = {\r\n\t            defaultLayout: {\r\n\t                displayState: {\r\n\t                    mode: models.VisualContainerDisplayMode.Hidden\r\n\t                }\r\n\t            },\r\n\t            visualsLayout: {}\r\n\t        };\r\n\t        pagesLayout[config.pageName].visualsLayout[config.visualName] = {\r\n\t            displayState: {\r\n\t                mode: models.VisualContainerDisplayMode.Visible\r\n\t            },\r\n\t            x: 1,\r\n\t            y: 1,\r\n\t            z: 1,\r\n\t            width: pageSize.width,\r\n\t            height: pageSize.height\r\n\t        };\r\n\t        config.settings = config.settings || {};\r\n\t        config.settings.filterPaneEnabled = false;\r\n\t        config.settings.navContentPaneEnabled = false;\r\n\t        config.settings.layoutType = models.LayoutType.Custom;\r\n\t        config.settings.customLayout = {\r\n\t            displayOption: models.DisplayOption.FitToPage,\r\n\t            pageSize: pageSize,\r\n\t            pagesLayout: pagesLayout\r\n\t        };\r\n\t        return _super.prototype.load.call(this, config, phasedRender);\r\n\t    };\r\n\t    /**\r\n\t     * Gets the list of pages within the report - not supported in visual embed.\r\n\t     *\r\n\t     * @returns {Promise<Page[]>}\r\n\t     */\r\n\t    Visual.prototype.getPages = function () {\r\n\t        throw Visual.GetPagesNotSupportedError;\r\n\t    };\r\n\t    /**\r\n\t     * Sets the active page of the report - not supported in visual embed.\r\n\t     *\r\n\t     * @param {string} pageName\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Visual.prototype.setPage = function (pageName) {\r\n\t        throw Visual.SetPageNotSupportedError;\r\n\t    };\r\n\t    /**\r\n\t     * Gets filters that are applied to the filter level.\r\n\t     * Default filter level is visual level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.getFilters(filtersLevel)\r\n\t     *   .then(filters => {\r\n\t     *     ...\r\n\t     *   });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<models.IFilter[]>}\r\n\t     */\r\n\t    Visual.prototype.getFilters = function (filtersLevel) {\r\n\t        var url = this.getFiltersLevelUrl(filtersLevel);\r\n\t        return this.service.hpm.get(url, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Sets filters at the filter level.\r\n\t     * Default filter level is visual level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * const filters: [\r\n\t     *    ...\r\n\t     * ];\r\n\t     *\r\n\t     * visual.setFilters(filters, filtersLevel)\r\n\t     *  .catch(errors => {\r\n\t     *    ...\r\n\t     *  });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {(models.IFilter[])} filters\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Visual.prototype.setFilters = function (filters, filtersLevel) {\r\n\t        var url = this.getFiltersLevelUrl(filtersLevel);\r\n\t        return this.service.hpm.put(url, filters, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Removes all filters from the current filter level.\r\n\t     * Default filter level is visual level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.removeFilters(filtersLevel);\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Visual.prototype.removeFilters = function (filtersLevel) {\r\n\t        return this.setFilters([], filtersLevel);\r\n\t    };\r\n\t    /**\r\n\t     * @hidden\r\n\t     */\r\n\t    Visual.prototype.getFiltersLevelUrl = function (filtersLevel) {\r\n\t        var config = this.config;\r\n\t        switch (filtersLevel) {\r\n\t            case models.FiltersLevel.Report:\r\n\t                return \"/report/filters\";\r\n\t            case models.FiltersLevel.Page:\r\n\t                return \"/report/pages/\" + config.pageName + \"/filters\";\r\n\t            default:\r\n\t                return \"/report/pages/\" + config.pageName + \"/visuals/\" + config.visualName + \"/filters\";\r\n\t        }\r\n\t    };\r\n\t    /** @hidden */\r\n\t    Visual.type = \"visual\";\r\n\t    /** @hidden */\r\n\t    Visual.GetPagesNotSupportedError = \"Get pages is not supported while embedding a visual.\";\r\n\t    /** @hidden */\r\n\t    Visual.SetPageNotSupportedError = \"Set page is not supported while embedding a visual.\";\r\n\t    return Visual;\r\n\t}(report_1.Report));\r\n\texports.Visual = Visual;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar config_1 = __webpack_require__(4);\r\n\tvar wpmp = __webpack_require__(18);\r\n\tvar hpm = __webpack_require__(19);\r\n\tvar router = __webpack_require__(20);\r\n\texports.hpmFactory = function (wpmp, defaultTargetWindow, sdkVersion, sdkType) {\r\n\t    if (sdkVersion === void 0) { sdkVersion = config_1.default.version; }\r\n\t    if (sdkType === void 0) { sdkType = config_1.default.type; }\r\n\t    return new hpm.HttpPostMessage(wpmp, {\r\n\t        'x-sdk-type': sdkType,\r\n\t        'x-sdk-version': sdkVersion\r\n\t    }, defaultTargetWindow);\r\n\t};\r\n\texports.wpmpFactory = function (name, logMessages, eventSourceOverrideWindow) {\r\n\t    return new wpmp.WindowPostMessageProxy({\r\n\t        processTrackingProperties: {\r\n\t            addTrackingProperties: hpm.HttpPostMessage.addTrackingProperties,\r\n\t            getTrackingProperties: hpm.HttpPostMessage.getTrackingProperties,\r\n\t        },\r\n\t        isErrorMessage: hpm.HttpPostMessage.isErrorMessage,\r\n\t        suppressWarnings: true,\r\n\t        name: name,\r\n\t        logMessages: logMessages,\r\n\t        eventSourceOverrideWindow: eventSourceOverrideWindow\r\n\t    });\r\n\t};\r\n\texports.routerFactory = function (wpmp) {\r\n\t    return new router.Router(wpmp);\r\n\t};\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! window-post-message-proxy v0.2.6 | (c) 2016 Microsoft Corporation MIT */\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse {}\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports) {\n\t\n\t\t\"use strict\";\r\n\t\tvar WindowPostMessageProxy = (function () {\r\n\t\t    function WindowPostMessageProxy(options) {\r\n\t\t        var _this = this;\r\n\t\t        if (options === void 0) { options = {\r\n\t\t            processTrackingProperties: {\r\n\t\t                addTrackingProperties: WindowPostMessageProxy.defaultAddTrackingProperties,\r\n\t\t                getTrackingProperties: WindowPostMessageProxy.defaultGetTrackingProperties\r\n\t\t            },\r\n\t\t            isErrorMessage: WindowPostMessageProxy.defaultIsErrorMessage,\r\n\t\t            receiveWindow: window,\r\n\t\t            name: WindowPostMessageProxy.createRandomString()\r\n\t\t        }; }\r\n\t\t        this.pendingRequestPromises = {};\r\n\t\t        // save options with defaults\r\n\t\t        this.addTrackingProperties = (options.processTrackingProperties && options.processTrackingProperties.addTrackingProperties) || WindowPostMessageProxy.defaultAddTrackingProperties;\r\n\t\t        this.getTrackingProperties = (options.processTrackingProperties && options.processTrackingProperties.getTrackingProperties) || WindowPostMessageProxy.defaultGetTrackingProperties;\r\n\t\t        this.isErrorMessage = options.isErrorMessage || WindowPostMessageProxy.defaultIsErrorMessage;\r\n\t\t        this.receiveWindow = options.receiveWindow || window;\r\n\t\t        this.name = options.name || WindowPostMessageProxy.createRandomString();\r\n\t\t        this.logMessages = options.logMessages || false;\r\n\t\t        this.eventSourceOverrideWindow = options.eventSourceOverrideWindow;\r\n\t\t        this.suppressWarnings = options.suppressWarnings || false;\r\n\t\t        if (this.logMessages) {\r\n\t\t            console.log(\"new WindowPostMessageProxy created with name: \" + this.name + \" receiving on window: \" + this.receiveWindow.document.title);\r\n\t\t        }\r\n\t\t        // Initialize\r\n\t\t        this.handlers = [];\r\n\t\t        this.windowMessageHandler = function (event) { return _this.onMessageReceived(event); };\r\n\t\t        this.start();\r\n\t\t    }\r\n\t\t    // Static\r\n\t\t    WindowPostMessageProxy.defaultAddTrackingProperties = function (message, trackingProperties) {\r\n\t\t        message[WindowPostMessageProxy.messagePropertyName] = trackingProperties;\r\n\t\t        return message;\r\n\t\t    };\r\n\t\t    WindowPostMessageProxy.defaultGetTrackingProperties = function (message) {\r\n\t\t        return message[WindowPostMessageProxy.messagePropertyName];\r\n\t\t    };\r\n\t\t    WindowPostMessageProxy.defaultIsErrorMessage = function (message) {\r\n\t\t        return !!message.error;\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Utility to create a deferred object.\r\n\t\t     */\r\n\t\t    // TODO: Look to use RSVP library instead of doing this manually.\r\n\t\t    // From what I searched RSVP would work better because it has .finally and .deferred; however, it doesn't have Typings information. \r\n\t\t    WindowPostMessageProxy.createDeferred = function () {\r\n\t\t        var deferred = {\r\n\t\t            resolve: null,\r\n\t\t            reject: null,\r\n\t\t            promise: null\r\n\t\t        };\r\n\t\t        var promise = new Promise(function (resolve, reject) {\r\n\t\t            deferred.resolve = resolve;\r\n\t\t            deferred.reject = reject;\r\n\t\t        });\r\n\t\t        deferred.promise = promise;\r\n\t\t        return deferred;\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Utility to generate random sequence of characters used as tracking id for promises.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.createRandomString = function () {\r\n\t\t        // window.msCrypto for IE\r\n\t\t        var cryptoObj = window.crypto || window.msCrypto;\r\n\t\t        var randomValueArray = new Uint32Array(1);\r\n\t\t        cryptoObj.getRandomValues(randomValueArray);\r\n\t\t        return randomValueArray[0].toString(36).substring(1);\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Adds handler.\r\n\t\t     * If the first handler whose test method returns true will handle the message and provide a response.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.addHandler = function (handler) {\r\n\t\t        this.handlers.push(handler);\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Removes handler.\r\n\t\t     * The reference must match the original object that was provided when adding the handler.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.removeHandler = function (handler) {\r\n\t\t        var handlerIndex = this.handlers.indexOf(handler);\r\n\t\t        if (handlerIndex === -1) {\r\n\t\t            throw new Error(\"You attempted to remove a handler but no matching handler was found.\");\r\n\t\t        }\r\n\t\t        this.handlers.splice(handlerIndex, 1);\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Start listening to message events.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.start = function () {\r\n\t\t        this.receiveWindow.addEventListener('message', this.windowMessageHandler);\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Stops listening to message events.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.stop = function () {\r\n\t\t        this.receiveWindow.removeEventListener('message', this.windowMessageHandler);\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Post message to target window with tracking properties added and save deferred object referenced by tracking id.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.postMessage = function (targetWindow, message) {\r\n\t\t        // Add tracking properties to indicate message came from this proxy\r\n\t\t        var trackingProperties = { id: WindowPostMessageProxy.createRandomString() };\r\n\t\t        this.addTrackingProperties(message, trackingProperties);\r\n\t\t        if (this.logMessages) {\r\n\t\t            console.log(this.name + \" Posting message:\");\r\n\t\t            console.log(JSON.stringify(message, null, '  '));\r\n\t\t        }\r\n\t\t        targetWindow.postMessage(message, \"*\");\r\n\t\t        var deferred = WindowPostMessageProxy.createDeferred();\r\n\t\t        this.pendingRequestPromises[trackingProperties.id] = deferred;\r\n\t\t        return deferred.promise;\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Send response message to target window.\r\n\t\t     * Response messages re-use tracking properties from a previous request message.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.sendResponse = function (targetWindow, message, trackingProperties) {\r\n\t\t        this.addTrackingProperties(message, trackingProperties);\r\n\t\t        if (this.logMessages) {\r\n\t\t            console.log(this.name + \" Sending response:\");\r\n\t\t            console.log(JSON.stringify(message, null, '  '));\r\n\t\t        }\r\n\t\t        targetWindow.postMessage(message, \"*\");\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Message handler.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.onMessageReceived = function (event) {\r\n\t\t        var _this = this;\r\n\t\t        if (this.logMessages) {\r\n\t\t            console.log(this.name + \" Received message:\");\r\n\t\t            console.log(\"type: \" + event.type);\r\n\t\t            console.log(JSON.stringify(event.data, null, '  '));\r\n\t\t        }\r\n\t\t        var sendingWindow = this.eventSourceOverrideWindow || event.source;\r\n\t\t        var message = event.data;\r\n\t\t        if (typeof message !== \"object\") {\r\n\t\t            if (!this.suppressWarnings) {\r\n\t\t                console.warn(\"Proxy(\" + this.name + \"): Received message that was not an object. Discarding message\");\r\n\t\t            }\r\n\t\t            return;\r\n\t\t        }\r\n\t\t        var trackingProperties;\r\n\t\t        try {\r\n\t\t            trackingProperties = this.getTrackingProperties(message);\r\n\t\t        }\r\n\t\t        catch (e) {\r\n\t\t            if (!this.suppressWarnings) {\r\n\t\t                console.warn(\"Proxy(\" + this.name + \"): Error occurred when attempting to get tracking properties from incoming message:\", JSON.stringify(message, null, '  '), \"Error: \", e);\r\n\t\t            }\r\n\t\t        }\r\n\t\t        var deferred;\r\n\t\t        if (trackingProperties) {\r\n\t\t            deferred = this.pendingRequestPromises[trackingProperties.id];\r\n\t\t        }\r\n\t\t        // If message does not have a known ID, treat it as a request\r\n\t\t        // Otherwise, treat message as response\r\n\t\t        if (!deferred) {\r\n\t\t            var handled = this.handlers.some(function (handler) {\r\n\t\t                var canMessageBeHandled = false;\r\n\t\t                try {\r\n\t\t                    canMessageBeHandled = handler.test(message);\r\n\t\t                }\r\n\t\t                catch (e) {\r\n\t\t                    if (!_this.suppressWarnings) {\r\n\t\t                        console.warn(\"Proxy(\" + _this.name + \"): Error occurred when handler was testing incoming message:\", JSON.stringify(message, null, '  '), \"Error: \", e);\r\n\t\t                    }\r\n\t\t                }\r\n\t\t                if (canMessageBeHandled) {\r\n\t\t                    var responseMessagePromise = void 0;\r\n\t\t                    try {\r\n\t\t                        responseMessagePromise = Promise.resolve(handler.handle(message));\r\n\t\t                    }\r\n\t\t                    catch (e) {\r\n\t\t                        if (!_this.suppressWarnings) {\r\n\t\t                            console.warn(\"Proxy(\" + _this.name + \"): Error occurred when handler was processing incoming message:\", JSON.stringify(message, null, '  '), \"Error: \", e);\r\n\t\t                        }\r\n\t\t                        responseMessagePromise = Promise.resolve();\r\n\t\t                    }\r\n\t\t                    responseMessagePromise\r\n\t\t                        .then(function (responseMessage) {\r\n\t\t                        if (!responseMessage) {\r\n\t\t                            var warningMessage = \"Handler for message: \" + JSON.stringify(message, null, '  ') + \" did not return a response message. The default response message will be returned instead.\";\r\n\t\t                            if (!_this.suppressWarnings) {\r\n\t\t                                console.warn(\"Proxy(\" + _this.name + \"): \" + warningMessage);\r\n\t\t                            }\r\n\t\t                            responseMessage = {\r\n\t\t                                warning: warningMessage\r\n\t\t                            };\r\n\t\t                        }\r\n\t\t                        _this.sendResponse(sendingWindow, responseMessage, trackingProperties);\r\n\t\t                    });\r\n\t\t                    return true;\r\n\t\t                }\r\n\t\t            });\r\n\t\t            /**\r\n\t\t             * TODO: Consider returning an error message if nothing handled the message.\r\n\t\t             * In the case of the Report receiving messages all of them should be handled,\r\n\t\t             * however, in the case of the SDK receiving messages it's likely it won't register handlers\r\n\t\t             * for all events. Perhaps make this an option at construction time.\r\n\t\t             */\r\n\t\t            if (!handled && !this.suppressWarnings) {\r\n\t\t                console.warn(\"Proxy(\" + this.name + \") did not handle message. Handlers: \" + this.handlers.length + \"  Message: \" + JSON.stringify(message, null, '') + \".\");\r\n\t\t            }\r\n\t\t        }\r\n\t\t        else {\r\n\t\t            /**\r\n\t\t             * If error message reject promise,\r\n\t\t             * Otherwise, resolve promise\r\n\t\t             */\r\n\t\t            var isErrorMessage = true;\r\n\t\t            try {\r\n\t\t                isErrorMessage = this.isErrorMessage(message);\r\n\t\t            }\r\n\t\t            catch (e) {\r\n\t\t                console.warn(\"Proxy(\" + this.name + \") Error occurred when trying to determine if message is consider an error response. Message: \", JSON.stringify(message, null, ''), 'Error: ', e);\r\n\t\t            }\r\n\t\t            if (isErrorMessage) {\r\n\t\t                deferred.reject(message);\r\n\t\t            }\r\n\t\t            else {\r\n\t\t                deferred.resolve(message);\r\n\t\t            }\r\n\t\t            // TODO: Move to .finally clause up where promise is created for better maitenance like original proxy code.\r\n\t\t            delete this.pendingRequestPromises[trackingProperties.id];\r\n\t\t        }\r\n\t\t    };\r\n\t\t    WindowPostMessageProxy.messagePropertyName = \"windowPostMessageProxy\";\r\n\t\t    return WindowPostMessageProxy;\r\n\t\t}());\r\n\t\texports.WindowPostMessageProxy = WindowPostMessageProxy;\r\n\t\n\t\n\t/***/ })\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=windowPostMessageProxy.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! http-post-message v0.2.3 | (c) 2016 Microsoft Corporation MIT */\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse {}\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\tvar HttpPostMessage = (function () {\n\t\t    function HttpPostMessage(windowPostMessageProxy, defaultHeaders, defaultTargetWindow) {\n\t\t        if (defaultHeaders === void 0) { defaultHeaders = {}; }\n\t\t        this.defaultHeaders = defaultHeaders;\n\t\t        this.defaultTargetWindow = defaultTargetWindow;\n\t\t        this.windowPostMessageProxy = windowPostMessageProxy;\n\t\t    }\n\t\t    // TODO: See if it's possible to share tracking properties interface?\n\t\t    // The responsibility of knowing how to configure windowPostMessageProxy for http should\n\t\t    // live in this http class, but the configuration would need ITrackingProperties\n\t\t    // interface which lives in WindowPostMessageProxy. Use <any> type as workaround\n\t\t    HttpPostMessage.addTrackingProperties = function (message, trackingProperties) {\n\t\t        message.headers = message.headers || {};\n\t\t        if (trackingProperties && trackingProperties.id) {\n\t\t            message.headers.id = trackingProperties.id;\n\t\t        }\n\t\t        return message;\n\t\t    };\n\t\t    HttpPostMessage.getTrackingProperties = function (message) {\n\t\t        return {\n\t\t            id: message.headers && message.headers.id\n\t\t        };\n\t\t    };\n\t\t    HttpPostMessage.isErrorMessage = function (message) {\n\t\t        if (typeof (message && message.statusCode) !== 'number') {\n\t\t            return false;\n\t\t        }\n\t\t        return !(200 <= message.statusCode && message.statusCode < 300);\n\t\t    };\n\t\t    HttpPostMessage.prototype.get = function (url, headers, targetWindow) {\n\t\t        if (headers === void 0) { headers = {}; }\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        return this.send({\n\t\t            method: \"GET\",\n\t\t            url: url,\n\t\t            headers: headers\n\t\t        }, targetWindow);\n\t\t    };\n\t\t    HttpPostMessage.prototype.post = function (url, body, headers, targetWindow) {\n\t\t        if (headers === void 0) { headers = {}; }\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        return this.send({\n\t\t            method: \"POST\",\n\t\t            url: url,\n\t\t            headers: headers,\n\t\t            body: body\n\t\t        }, targetWindow);\n\t\t    };\n\t\t    HttpPostMessage.prototype.put = function (url, body, headers, targetWindow) {\n\t\t        if (headers === void 0) { headers = {}; }\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        return this.send({\n\t\t            method: \"PUT\",\n\t\t            url: url,\n\t\t            headers: headers,\n\t\t            body: body\n\t\t        }, targetWindow);\n\t\t    };\n\t\t    HttpPostMessage.prototype.patch = function (url, body, headers, targetWindow) {\n\t\t        if (headers === void 0) { headers = {}; }\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        return this.send({\n\t\t            method: \"PATCH\",\n\t\t            url: url,\n\t\t            headers: headers,\n\t\t            body: body\n\t\t        }, targetWindow);\n\t\t    };\n\t\t    HttpPostMessage.prototype.delete = function (url, body, headers, targetWindow) {\n\t\t        if (body === void 0) { body = null; }\n\t\t        if (headers === void 0) { headers = {}; }\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        return this.send({\n\t\t            method: \"DELETE\",\n\t\t            url: url,\n\t\t            headers: headers,\n\t\t            body: body\n\t\t        }, targetWindow);\n\t\t    };\n\t\t    HttpPostMessage.prototype.send = function (request, targetWindow) {\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        request.headers = this.assign({}, this.defaultHeaders, request.headers);\n\t\t        if (!targetWindow) {\n\t\t            throw new Error(\"target window is not provided.  You must either provide the target window explicitly as argument to request, or specify default target window when constructing instance of this class.\");\n\t\t        }\n\t\t        return this.windowPostMessageProxy.postMessage(targetWindow, request);\n\t\t    };\n\t\t    /**\n\t\t     * Object.assign() polyfill\n\t\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\t\t     */\n\t\t    HttpPostMessage.prototype.assign = function (target) {\n\t\t        var sources = [];\n\t\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t\t            sources[_i - 1] = arguments[_i];\n\t\t        }\n\t\t        if (target === undefined || target === null) {\n\t\t            throw new TypeError('Cannot convert undefined or null to object');\n\t\t        }\n\t\t        var output = Object(target);\n\t\t        sources.forEach(function (source) {\n\t\t            if (source !== undefined && source !== null) {\n\t\t                for (var nextKey in source) {\n\t\t                    if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n\t\t                        output[nextKey] = source[nextKey];\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        });\n\t\t        return output;\n\t\t    };\n\t\t    return HttpPostMessage;\n\t\t}());\n\t\texports.HttpPostMessage = HttpPostMessage;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=httpPostMessage.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! powerbi-router v0.1.5 | (c) 2016 Microsoft Corporation MIT */\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse {}\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar RouteRecognizer = __webpack_require__(1);\n\t\tvar Router = (function () {\n\t\t    function Router(handlers) {\n\t\t        this.handlers = handlers;\n\t\t        /**\n\t\t         * TODO: look at generating the router dynamically based on list of supported http methods\n\t\t         * instead of hardcoding the creation of these and the methods.\n\t\t         */\n\t\t        this.getRouteRecognizer = new RouteRecognizer();\n\t\t        this.patchRouteRecognizer = new RouteRecognizer();\n\t\t        this.postRouteRecognizer = new RouteRecognizer();\n\t\t        this.putRouteRecognizer = new RouteRecognizer();\n\t\t        this.deleteRouteRecognizer = new RouteRecognizer();\n\t\t    }\n\t\t    Router.prototype.get = function (url, handler) {\n\t\t        this.registerHandler(this.getRouteRecognizer, \"GET\", url, handler);\n\t\t        return this;\n\t\t    };\n\t\t    Router.prototype.patch = function (url, handler) {\n\t\t        this.registerHandler(this.patchRouteRecognizer, \"PATCH\", url, handler);\n\t\t        return this;\n\t\t    };\n\t\t    Router.prototype.post = function (url, handler) {\n\t\t        this.registerHandler(this.postRouteRecognizer, \"POST\", url, handler);\n\t\t        return this;\n\t\t    };\n\t\t    Router.prototype.put = function (url, handler) {\n\t\t        this.registerHandler(this.putRouteRecognizer, \"PUT\", url, handler);\n\t\t        return this;\n\t\t    };\n\t\t    Router.prototype.delete = function (url, handler) {\n\t\t        this.registerHandler(this.deleteRouteRecognizer, \"DELETE\", url, handler);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t     * TODO: This method could use some refactoring.  There is conflict of interest between keeping clean separation of test and handle method\n\t\t     * Test method only returns boolean indicating if request can be handled, and handle method has opportunity to modify response and return promise of it.\n\t\t     * In the case of the router with route-recognizer where handlers are associated with routes, this already guarantees that only one handler is selected and makes the test method feel complicated\n\t\t     * Will leave as is an investigate cleaner ways at later time.\n\t\t     */\n\t\t    Router.prototype.registerHandler = function (routeRecognizer, method, url, handler) {\n\t\t        var routeRecognizerHandler = function (request) {\n\t\t            var response = new Response();\n\t\t            return Promise.resolve(handler(request, response))\n\t\t                .then(function (x) { return response; });\n\t\t        };\n\t\t        routeRecognizer.add([\n\t\t            { path: url, handler: routeRecognizerHandler }\n\t\t        ]);\n\t\t        var internalHandler = {\n\t\t            test: function (request) {\n\t\t                if (request.method !== method) {\n\t\t                    return false;\n\t\t                }\n\t\t                var matchingRoutes = routeRecognizer.recognize(request.url);\n\t\t                if (matchingRoutes === undefined) {\n\t\t                    return false;\n\t\t                }\n\t\t                /**\n\t\t                 * Copy parameters from recognized route to the request so they can be used within the handler function\n\t\t                 * This isn't ideal because it is side affect which modifies the request instead of strictly testing for true or false\n\t\t                 * but I don't see a better place to put this.  If we move it between the call to test and the handle it becomes part of the window post message proxy\n\t\t                 * even though it's responsibility is related to routing.\n\t\t                 */\n\t\t                var route = matchingRoutes[0];\n\t\t                request.params = route.params;\n\t\t                request.queryParams = matchingRoutes.queryParams;\n\t\t                request.handler = route.handler;\n\t\t                return true;\n\t\t            },\n\t\t            handle: function (request) {\n\t\t                return request.handler(request);\n\t\t            }\n\t\t        };\n\t\t        this.handlers.addHandler(internalHandler);\n\t\t    };\n\t\t    return Router;\n\t\t}());\n\t\texports.Router = Router;\n\t\tvar Response = (function () {\n\t\t    function Response() {\n\t\t        this.statusCode = 200;\n\t\t        this.headers = {};\n\t\t        this.body = null;\n\t\t    }\n\t\t    Response.prototype.send = function (statusCode, body) {\n\t\t        this.statusCode = statusCode;\n\t\t        this.body = body;\n\t\t    };\n\t\t    return Response;\n\t\t}());\n\t\texports.Response = Response;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {(function() {\n\t\t    \"use strict\";\n\t\t    function $$route$recognizer$dsl$$Target(path, matcher, delegate) {\n\t\t      this.path = path;\n\t\t      this.matcher = matcher;\n\t\t      this.delegate = delegate;\n\t\t    }\n\t\t\n\t\t    $$route$recognizer$dsl$$Target.prototype = {\n\t\t      to: function(target, callback) {\n\t\t        var delegate = this.delegate;\n\t\t\n\t\t        if (delegate && delegate.willAddRoute) {\n\t\t          target = delegate.willAddRoute(this.matcher.target, target);\n\t\t        }\n\t\t\n\t\t        this.matcher.add(this.path, target);\n\t\t\n\t\t        if (callback) {\n\t\t          if (callback.length === 0) { throw new Error(\"You must have an argument in the function passed to `to`\"); }\n\t\t          this.matcher.addChild(this.path, target, callback, this.delegate);\n\t\t        }\n\t\t        return this;\n\t\t      }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$dsl$$Matcher(target) {\n\t\t      this.routes = {};\n\t\t      this.children = {};\n\t\t      this.target = target;\n\t\t    }\n\t\t\n\t\t    $$route$recognizer$dsl$$Matcher.prototype = {\n\t\t      add: function(path, handler) {\n\t\t        this.routes[path] = handler;\n\t\t      },\n\t\t\n\t\t      addChild: function(path, target, callback, delegate) {\n\t\t        var matcher = new $$route$recognizer$dsl$$Matcher(target);\n\t\t        this.children[path] = matcher;\n\t\t\n\t\t        var match = $$route$recognizer$dsl$$generateMatch(path, matcher, delegate);\n\t\t\n\t\t        if (delegate && delegate.contextEntered) {\n\t\t          delegate.contextEntered(target, match);\n\t\t        }\n\t\t\n\t\t        callback(match);\n\t\t      }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$dsl$$generateMatch(startingPath, matcher, delegate) {\n\t\t      return function(path, nestedCallback) {\n\t\t        var fullPath = startingPath + path;\n\t\t\n\t\t        if (nestedCallback) {\n\t\t          nestedCallback($$route$recognizer$dsl$$generateMatch(fullPath, matcher, delegate));\n\t\t        } else {\n\t\t          return new $$route$recognizer$dsl$$Target(startingPath + path, matcher, delegate);\n\t\t        }\n\t\t      };\n\t\t    }\n\t\t\n\t\t    function $$route$recognizer$dsl$$addRoute(routeArray, path, handler) {\n\t\t      var len = 0;\n\t\t      for (var i=0; i<routeArray.length; i++) {\n\t\t        len += routeArray[i].path.length;\n\t\t      }\n\t\t\n\t\t      path = path.substr(len);\n\t\t      var route = { path: path, handler: handler };\n\t\t      routeArray.push(route);\n\t\t    }\n\t\t\n\t\t    function $$route$recognizer$dsl$$eachRoute(baseRoute, matcher, callback, binding) {\n\t\t      var routes = matcher.routes;\n\t\t\n\t\t      for (var path in routes) {\n\t\t        if (routes.hasOwnProperty(path)) {\n\t\t          var routeArray = baseRoute.slice();\n\t\t          $$route$recognizer$dsl$$addRoute(routeArray, path, routes[path]);\n\t\t\n\t\t          if (matcher.children[path]) {\n\t\t            $$route$recognizer$dsl$$eachRoute(routeArray, matcher.children[path], callback, binding);\n\t\t          } else {\n\t\t            callback.call(binding, routeArray);\n\t\t          }\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t\n\t\t    var $$route$recognizer$dsl$$default = function(callback, addRouteCallback) {\n\t\t      var matcher = new $$route$recognizer$dsl$$Matcher();\n\t\t\n\t\t      callback($$route$recognizer$dsl$$generateMatch(\"\", matcher, this.delegate));\n\t\t\n\t\t      $$route$recognizer$dsl$$eachRoute([], matcher, function(route) {\n\t\t        if (addRouteCallback) { addRouteCallback(this, route); }\n\t\t        else { this.add(route); }\n\t\t      }, this);\n\t\t    };\n\t\t\n\t\t    var $$route$recognizer$$specials = [\n\t\t      '/', '.', '*', '+', '?', '|',\n\t\t      '(', ')', '[', ']', '{', '}', '\\\\'\n\t\t    ];\n\t\t\n\t\t    var $$route$recognizer$$escapeRegex = new RegExp('(\\\\' + $$route$recognizer$$specials.join('|\\\\') + ')', 'g');\n\t\t\n\t\t    function $$route$recognizer$$isArray(test) {\n\t\t      return Object.prototype.toString.call(test) === \"[object Array]\";\n\t\t    }\n\t\t\n\t\t    // A Segment represents a segment in the original route description.\n\t\t    // Each Segment type provides an `eachChar` and `regex` method.\n\t\t    //\n\t\t    // The `eachChar` method invokes the callback with one or more character\n\t\t    // specifications. A character specification consumes one or more input\n\t\t    // characters.\n\t\t    //\n\t\t    // The `regex` method returns a regex fragment for the segment. If the\n\t\t    // segment is a dynamic of star segment, the regex fragment also includes\n\t\t    // a capture.\n\t\t    //\n\t\t    // A character specification contains:\n\t\t    //\n\t\t    // * `validChars`: a String with a list of all valid characters, or\n\t\t    // * `invalidChars`: a String with a list of all invalid characters\n\t\t    // * `repeat`: true if the character specification can repeat\n\t\t\n\t\t    function $$route$recognizer$$StaticSegment(string) { this.string = string; }\n\t\t    $$route$recognizer$$StaticSegment.prototype = {\n\t\t      eachChar: function(currentState) {\n\t\t        var string = this.string, ch;\n\t\t\n\t\t        for (var i=0; i<string.length; i++) {\n\t\t          ch = string.charAt(i);\n\t\t          currentState = currentState.put({ invalidChars: undefined, repeat: false, validChars: ch });\n\t\t        }\n\t\t\n\t\t        return currentState;\n\t\t      },\n\t\t\n\t\t      regex: function() {\n\t\t        return this.string.replace($$route$recognizer$$escapeRegex, '\\\\$1');\n\t\t      },\n\t\t\n\t\t      generate: function() {\n\t\t        return this.string;\n\t\t      }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$$DynamicSegment(name) { this.name = name; }\n\t\t    $$route$recognizer$$DynamicSegment.prototype = {\n\t\t      eachChar: function(currentState) {\n\t\t        return currentState.put({ invalidChars: \"/\", repeat: true, validChars: undefined });\n\t\t      },\n\t\t\n\t\t      regex: function() {\n\t\t        return \"([^/]+)\";\n\t\t      },\n\t\t\n\t\t      generate: function(params) {\n\t\t        return params[this.name];\n\t\t      }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$$StarSegment(name) { this.name = name; }\n\t\t    $$route$recognizer$$StarSegment.prototype = {\n\t\t      eachChar: function(currentState) {\n\t\t        return currentState.put({ invalidChars: \"\", repeat: true, validChars: undefined });\n\t\t      },\n\t\t\n\t\t      regex: function() {\n\t\t        return \"(.+)\";\n\t\t      },\n\t\t\n\t\t      generate: function(params) {\n\t\t        return params[this.name];\n\t\t      }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$$EpsilonSegment() {}\n\t\t    $$route$recognizer$$EpsilonSegment.prototype = {\n\t\t      eachChar: function(currentState) {\n\t\t        return currentState;\n\t\t      },\n\t\t      regex: function() { return \"\"; },\n\t\t      generate: function() { return \"\"; }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$$parse(route, names, specificity) {\n\t\t      // normalize route as not starting with a \"/\". Recognition will\n\t\t      // also normalize.\n\t\t      if (route.charAt(0) === \"/\") { route = route.substr(1); }\n\t\t\n\t\t      var segments = route.split(\"/\");\n\t\t      var results = new Array(segments.length);\n\t\t\n\t\t      // A routes has specificity determined by the order that its different segments\n\t\t      // appear in. This system mirrors how the magnitude of numbers written as strings\n\t\t      // works.\n\t\t      // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t\t      // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t\t      // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t\t      // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t\t      // leading symbol, \"1\".\n\t\t      // The rule is that symbols to the left carry more weight than symbols to the right\n\t\t      // when a number is written out as a string. In the above strings, the leading digit\n\t\t      // represents how many 100's are in the number, and it carries more weight than the middle\n\t\t      // number which represents how many 10's are in the number.\n\t\t      // This system of number magnitude works well for route specificity, too. A route written as\n\t\t      // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t\t      // `x`, irrespective of the other parts.\n\t\t      // Because of this similarity, we assign each type of segment a number value written as a\n\t\t      // string. We can find the specificity of compound routes by concatenating these strings\n\t\t      // together, from left to right. After we have looped through all of the segments,\n\t\t      // we convert the string to a number.\n\t\t      specificity.val = '';\n\t\t\n\t\t      for (var i=0; i<segments.length; i++) {\n\t\t        var segment = segments[i], match;\n\t\t\n\t\t        if (match = segment.match(/^:([^\\/]+)$/)) {\n\t\t          results[i] = new $$route$recognizer$$DynamicSegment(match[1]);\n\t\t          names.push(match[1]);\n\t\t          specificity.val += '3';\n\t\t        } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t\t          results[i] = new $$route$recognizer$$StarSegment(match[1]);\n\t\t          specificity.val += '1';\n\t\t          names.push(match[1]);\n\t\t        } else if(segment === \"\") {\n\t\t          results[i] = new $$route$recognizer$$EpsilonSegment();\n\t\t          specificity.val += '2';\n\t\t        } else {\n\t\t          results[i] = new $$route$recognizer$$StaticSegment(segment);\n\t\t          specificity.val += '4';\n\t\t        }\n\t\t      }\n\t\t\n\t\t      specificity.val = +specificity.val;\n\t\t\n\t\t      return results;\n\t\t    }\n\t\t\n\t\t    // A State has a character specification and (`charSpec`) and a list of possible\n\t\t    // subsequent states (`nextStates`).\n\t\t    //\n\t\t    // If a State is an accepting state, it will also have several additional\n\t\t    // properties:\n\t\t    //\n\t\t    // * `regex`: A regular expression that is used to extract parameters from paths\n\t\t    //   that reached this accepting state.\n\t\t    // * `handlers`: Information on how to convert the list of captures into calls\n\t\t    //   to registered handlers with the specified parameters\n\t\t    // * `types`: How many static, dynamic or star segments in this route. Used to\n\t\t    //   decide which route to use if multiple registered routes match a path.\n\t\t    //\n\t\t    // Currently, State is implemented naively by looping over `nextStates` and\n\t\t    // comparing a character specification against a character. A more efficient\n\t\t    // implementation would use a hash of keys pointing at one or more next states.\n\t\t\n\t\t    function $$route$recognizer$$State(charSpec) {\n\t\t      this.charSpec = charSpec;\n\t\t      this.nextStates = [];\n\t\t      this.charSpecs = {};\n\t\t      this.regex = undefined;\n\t\t      this.handlers = undefined;\n\t\t      this.specificity = undefined;\n\t\t    }\n\t\t\n\t\t    $$route$recognizer$$State.prototype = {\n\t\t      get: function(charSpec) {\n\t\t        if (this.charSpecs[charSpec.validChars]) {\n\t\t          return this.charSpecs[charSpec.validChars];\n\t\t        }\n\t\t\n\t\t        var nextStates = this.nextStates;\n\t\t\n\t\t        for (var i=0; i<nextStates.length; i++) {\n\t\t          var child = nextStates[i];\n\t\t\n\t\t          var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t\t          isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\t\n\t\t          if (isEqual) {\n\t\t            this.charSpecs[charSpec.validChars] = child;\n\t\t            return child;\n\t\t          }\n\t\t        }\n\t\t      },\n\t\t\n\t\t      put: function(charSpec) {\n\t\t        var state;\n\t\t\n\t\t        // If the character specification already exists in a child of the current\n\t\t        // state, just return that state.\n\t\t        if (state = this.get(charSpec)) { return state; }\n\t\t\n\t\t        // Make a new state for the character spec\n\t\t        state = new $$route$recognizer$$State(charSpec);\n\t\t\n\t\t        // Insert the new state as a child of the current state\n\t\t        this.nextStates.push(state);\n\t\t\n\t\t        // If this character specification repeats, insert the new state as a child\n\t\t        // of itself. Note that this will not trigger an infinite loop because each\n\t\t        // transition during recognition consumes a character.\n\t\t        if (charSpec.repeat) {\n\t\t          state.nextStates.push(state);\n\t\t        }\n\t\t\n\t\t        // Return the new state\n\t\t        return state;\n\t\t      },\n\t\t\n\t\t      // Find a list of child states matching the next character\n\t\t      match: function(ch) {\n\t\t        var nextStates = this.nextStates,\n\t\t            child, charSpec, chars;\n\t\t\n\t\t        var returned = [];\n\t\t\n\t\t        for (var i=0; i<nextStates.length; i++) {\n\t\t          child = nextStates[i];\n\t\t\n\t\t          charSpec = child.charSpec;\n\t\t\n\t\t          if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t\t            if (chars.indexOf(ch) !== -1) { returned.push(child); }\n\t\t          } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t\t            if (chars.indexOf(ch) === -1) { returned.push(child); }\n\t\t          }\n\t\t        }\n\t\t\n\t\t        return returned;\n\t\t      }\n\t\t    };\n\t\t\n\t\t    // Sort the routes by specificity\n\t\t    function $$route$recognizer$$sortSolutions(states) {\n\t\t      return states.sort(function(a, b) {\n\t\t        return b.specificity.val - a.specificity.val;\n\t\t      });\n\t\t    }\n\t\t\n\t\t    function $$route$recognizer$$recognizeChar(states, ch) {\n\t\t      var nextStates = [];\n\t\t\n\t\t      for (var i=0, l=states.length; i<l; i++) {\n\t\t        var state = states[i];\n\t\t\n\t\t        nextStates = nextStates.concat(state.match(ch));\n\t\t      }\n\t\t\n\t\t      return nextStates;\n\t\t    }\n\t\t\n\t\t    var $$route$recognizer$$oCreate = Object.create || function(proto) {\n\t\t      function F() {}\n\t\t      F.prototype = proto;\n\t\t      return new F();\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$$RecognizeResults(queryParams) {\n\t\t      this.queryParams = queryParams || {};\n\t\t    }\n\t\t    $$route$recognizer$$RecognizeResults.prototype = $$route$recognizer$$oCreate({\n\t\t      splice: Array.prototype.splice,\n\t\t      slice:  Array.prototype.slice,\n\t\t      push:   Array.prototype.push,\n\t\t      length: 0,\n\t\t      queryParams: null\n\t\t    });\n\t\t\n\t\t    function $$route$recognizer$$findHandler(state, path, queryParams) {\n\t\t      var handlers = state.handlers, regex = state.regex;\n\t\t      var captures = path.match(regex), currentCapture = 1;\n\t\t      var result = new $$route$recognizer$$RecognizeResults(queryParams);\n\t\t\n\t\t      result.length = handlers.length;\n\t\t\n\t\t      for (var i=0; i<handlers.length; i++) {\n\t\t        var handler = handlers[i], names = handler.names, params = {};\n\t\t\n\t\t        for (var j=0; j<names.length; j++) {\n\t\t          params[names[j]] = captures[currentCapture++];\n\t\t        }\n\t\t\n\t\t        result[i] = { handler: handler.handler, params: params, isDynamic: !!names.length };\n\t\t      }\n\t\t\n\t\t      return result;\n\t\t    }\n\t\t\n\t\t    function $$route$recognizer$$decodeQueryParamPart(part) {\n\t\t      // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t\t      part = part.replace(/\\+/gm, '%20');\n\t\t      var result;\n\t\t      try {\n\t\t        result = decodeURIComponent(part);\n\t\t      } catch(error) {result = '';}\n\t\t      return result;\n\t\t    }\n\t\t\n\t\t    // The main interface\n\t\t\n\t\t    var $$route$recognizer$$RouteRecognizer = function() {\n\t\t      this.rootState = new $$route$recognizer$$State();\n\t\t      this.names = {};\n\t\t    };\n\t\t\n\t\t\n\t\t    $$route$recognizer$$RouteRecognizer.prototype = {\n\t\t      add: function(routes, options) {\n\t\t        var currentState = this.rootState, regex = \"^\",\n\t\t            specificity = {},\n\t\t            handlers = new Array(routes.length), allSegments = [], name;\n\t\t\n\t\t        var isEmpty = true;\n\t\t\n\t\t        for (var i=0; i<routes.length; i++) {\n\t\t          var route = routes[i], names = [];\n\t\t\n\t\t          var segments = $$route$recognizer$$parse(route.path, names, specificity);\n\t\t\n\t\t          allSegments = allSegments.concat(segments);\n\t\t\n\t\t          for (var j=0; j<segments.length; j++) {\n\t\t            var segment = segments[j];\n\t\t\n\t\t            if (segment instanceof $$route$recognizer$$EpsilonSegment) { continue; }\n\t\t\n\t\t            isEmpty = false;\n\t\t\n\t\t            // Add a \"/\" for the new segment\n\t\t            currentState = currentState.put({ invalidChars: undefined, repeat: false, validChars: \"/\" });\n\t\t            regex += \"/\";\n\t\t\n\t\t            // Add a representation of the segment to the NFA and regex\n\t\t            currentState = segment.eachChar(currentState);\n\t\t            regex += segment.regex();\n\t\t          }\n\t\t          var handler = { handler: route.handler, names: names };\n\t\t          handlers[i] = handler;\n\t\t        }\n\t\t\n\t\t        if (isEmpty) {\n\t\t          currentState = currentState.put({ invalidChars: undefined, repeat: false, validChars: \"/\" });\n\t\t          regex += \"/\";\n\t\t        }\n\t\t\n\t\t        currentState.handlers = handlers;\n\t\t        currentState.regex = new RegExp(regex + \"$\");\n\t\t        currentState.specificity = specificity;\n\t\t\n\t\t        if (name = options && options.as) {\n\t\t          this.names[name] = {\n\t\t            segments: allSegments,\n\t\t            handlers: handlers\n\t\t          };\n\t\t        }\n\t\t      },\n\t\t\n\t\t      handlersFor: function(name) {\n\t\t        var route = this.names[name];\n\t\t\n\t\t        if (!route) { throw new Error(\"There is no route named \" + name); }\n\t\t\n\t\t        var result = new Array(route.handlers.length);\n\t\t\n\t\t        for (var i=0; i<route.handlers.length; i++) {\n\t\t          result[i] = route.handlers[i];\n\t\t        }\n\t\t\n\t\t        return result;\n\t\t      },\n\t\t\n\t\t      hasRoute: function(name) {\n\t\t        return !!this.names[name];\n\t\t      },\n\t\t\n\t\t      generate: function(name, params) {\n\t\t        var route = this.names[name], output = \"\";\n\t\t        if (!route) { throw new Error(\"There is no route named \" + name); }\n\t\t\n\t\t        var segments = route.segments;\n\t\t\n\t\t        for (var i=0; i<segments.length; i++) {\n\t\t          var segment = segments[i];\n\t\t\n\t\t          if (segment instanceof $$route$recognizer$$EpsilonSegment) { continue; }\n\t\t\n\t\t          output += \"/\";\n\t\t          output += segment.generate(params);\n\t\t        }\n\t\t\n\t\t        if (output.charAt(0) !== '/') { output = '/' + output; }\n\t\t\n\t\t        if (params && params.queryParams) {\n\t\t          output += this.generateQueryString(params.queryParams, route.handlers);\n\t\t        }\n\t\t\n\t\t        return output;\n\t\t      },\n\t\t\n\t\t      generateQueryString: function(params, handlers) {\n\t\t        var pairs = [];\n\t\t        var keys = [];\n\t\t        for(var key in params) {\n\t\t          if (params.hasOwnProperty(key)) {\n\t\t            keys.push(key);\n\t\t          }\n\t\t        }\n\t\t        keys.sort();\n\t\t        for (var i = 0; i < keys.length; i++) {\n\t\t          key = keys[i];\n\t\t          var value = params[key];\n\t\t          if (value == null) {\n\t\t            continue;\n\t\t          }\n\t\t          var pair = encodeURIComponent(key);\n\t\t          if ($$route$recognizer$$isArray(value)) {\n\t\t            for (var j = 0; j < value.length; j++) {\n\t\t              var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t\t              pairs.push(arrayPair);\n\t\t            }\n\t\t          } else {\n\t\t            pair += \"=\" + encodeURIComponent(value);\n\t\t            pairs.push(pair);\n\t\t          }\n\t\t        }\n\t\t\n\t\t        if (pairs.length === 0) { return ''; }\n\t\t\n\t\t        return \"?\" + pairs.join(\"&\");\n\t\t      },\n\t\t\n\t\t      parseQueryString: function(queryString) {\n\t\t        var pairs = queryString.split(\"&\"), queryParams = {};\n\t\t        for(var i=0; i < pairs.length; i++) {\n\t\t          var pair      = pairs[i].split('='),\n\t\t              key       = $$route$recognizer$$decodeQueryParamPart(pair[0]),\n\t\t              keyLength = key.length,\n\t\t              isArray = false,\n\t\t              value;\n\t\t          if (pair.length === 1) {\n\t\t            value = 'true';\n\t\t          } else {\n\t\t            //Handle arrays\n\t\t            if (keyLength > 2 && key.slice(keyLength -2) === '[]') {\n\t\t              isArray = true;\n\t\t              key = key.slice(0, keyLength - 2);\n\t\t              if(!queryParams[key]) {\n\t\t                queryParams[key] = [];\n\t\t              }\n\t\t            }\n\t\t            value = pair[1] ? $$route$recognizer$$decodeQueryParamPart(pair[1]) : '';\n\t\t          }\n\t\t          if (isArray) {\n\t\t            queryParams[key].push(value);\n\t\t          } else {\n\t\t            queryParams[key] = value;\n\t\t          }\n\t\t        }\n\t\t        return queryParams;\n\t\t      },\n\t\t\n\t\t      recognize: function(path) {\n\t\t        var states = [ this.rootState ],\n\t\t            pathLen, i, l, queryStart, queryParams = {},\n\t\t            isSlashDropped = false;\n\t\t\n\t\t        queryStart = path.indexOf('?');\n\t\t        if (queryStart !== -1) {\n\t\t          var queryString = path.substr(queryStart + 1, path.length);\n\t\t          path = path.substr(0, queryStart);\n\t\t          queryParams = this.parseQueryString(queryString);\n\t\t        }\n\t\t\n\t\t        path = decodeURI(path);\n\t\t\n\t\t        if (path.charAt(0) !== \"/\") { path = \"/\" + path; }\n\t\t\n\t\t        pathLen = path.length;\n\t\t        if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t\t          path = path.substr(0, pathLen - 1);\n\t\t          isSlashDropped = true;\n\t\t        }\n\t\t\n\t\t        for (i=0; i<path.length; i++) {\n\t\t          states = $$route$recognizer$$recognizeChar(states, path.charAt(i));\n\t\t          if (!states.length) { break; }\n\t\t        }\n\t\t\n\t\t        var solutions = [];\n\t\t        for (i=0; i<states.length; i++) {\n\t\t          if (states[i].handlers) { solutions.push(states[i]); }\n\t\t        }\n\t\t\n\t\t        states = $$route$recognizer$$sortSolutions(solutions);\n\t\t\n\t\t        var state = solutions[0];\n\t\t\n\t\t        if (state && state.handlers) {\n\t\t          // if a trailing slash was dropped and a star segment is the last segment\n\t\t          // specified, put the trailing slash back\n\t\t          if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t\t            path = path + \"/\";\n\t\t          }\n\t\t          return $$route$recognizer$$findHandler(state, path, queryParams);\n\t\t        }\n\t\t      }\n\t\t    };\n\t\t\n\t\t    $$route$recognizer$$RouteRecognizer.prototype.map = $$route$recognizer$dsl$$default;\n\t\t\n\t\t    $$route$recognizer$$RouteRecognizer.VERSION = '0.1.11';\n\t\t\n\t\t    var $$route$recognizer$$default = $$route$recognizer$$RouteRecognizer;\n\t\t\n\t\t    /* global define:true module:true window: true */\n\t\t    if ( true && __webpack_require__(3)['amd']) {\n\t\t      !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return $$route$recognizer$$default; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t    } else if (typeof module !== 'undefined' && module['exports']) {\n\t\t      module['exports'] = $$route$recognizer$$default;\n\t\t    } else if (typeof this !== 'undefined') {\n\t\t      this['RouteRecognizer'] = $$route$recognizer$$default;\n\t\t    }\n\t\t}).call(this);\n\t\t\n\t\t//# sourceMappingURL=route-recognizer.js.map\n\t\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = function(module) {\r\n\t\t\tif(!module.webpackPolyfill) {\r\n\t\t\t\tmodule.deprecate = function() {};\r\n\t\t\t\tmodule.paths = [];\r\n\t\t\t\t// module.parent = undefined by default\r\n\t\t\t\tmodule.children = [];\r\n\t\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t\t}\r\n\t\t\treturn module;\r\n\t\t}\r\n\t\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=router.js.map\n\n/***/ })\n/******/ ])\n});\n;\n//# sourceMappingURL=powerbi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/powerbi-client/dist/powerbi.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./src/secure_embed.js":
/*!*****************************!*\
  !*** ./src/secure_embed.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var powerbi_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! powerbi-client */ \"./node_modules/powerbi-client/dist/powerbi.js\");\n/* harmony import */ var powerbi_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(powerbi_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar _require = __webpack_require__(/*! ./version.json */ \"./src/version.json\"),\n    version = _require.version;\n\nvar App = /*#__PURE__*/function () {\n  function App() {\n    var _this = this;\n\n    _classCallCheck(this, App);\n\n    this.embedCSS();\n    this.powerbi = new powerbi_client__WEBPACK_IMPORTED_MODULE_0__[\"service\"].Service(powerbi_client__WEBPACK_IMPORTED_MODULE_0__[\"factories\"].hpmFactory, powerbi_client__WEBPACK_IMPORTED_MODULE_0__[\"factories\"].wpmpFactory, powerbi_client__WEBPACK_IMPORTED_MODULE_0__[\"factories\"].routerFactory);\n    axios__WEBPACK_IMPORTED_MODULE_1___default.a.get('/auth_proxy_routes/embed_data').then(function (response) {\n      _this.data = response.data;\n\n      _this.data.forEach(function (report, i) {\n        Object.defineProperty(_this.data, report.id, {\n          get: function get() {\n            return report;\n          }\n        });\n      });\n\n      _this.$ = window.$ || window.jQuery;\n\n      _this.render();\n\n      _this.attachHandlers();\n    })[\"catch\"](function ($e) {\n      console.log($e);\n    });\n  }\n\n  _createClass(App, [{\n    key: \"embedCSS\",\n    value: function embedCSS() {\n      var l = document.createElement('link');\n      l.href = \"/auth_proxy_routes/asset/secure_embed.css?v=\".concat(version);\n      l.rel = 'stylesheet';\n      document.head.appendChild(l);\n    }\n  }, {\n    key: \"loadReport\",\n    value: function loadReport(link) {\n      var _this2 = this;\n\n      var $ = this.$;\n      $(link).tab('show');\n      var itemdata = $(link).data('reportdata');\n      var $reportContainer = $(link.hash);\n      if ($reportContainer.find('iframe').length) return;\n      $reportContainer.html('<span class=\"loading-indicator\">loading...</span>');\n\n      if (itemdata.type == 'esri') {\n        return this.loadEsriReport(link, $reportContainer);\n      }\n\n      var reportData = this.data[itemdata.id];\n      axios__WEBPACK_IMPORTED_MODULE_1___default.a.get(\"/auth_proxy_routes/report_embed/\".concat(reportData.id)).then(function (response) {\n        var embedConfiguration = {\n          type: 'report',\n          id: reportData.id,\n          groupId: response.data.group_id,\n          embedUrl: 'https://app.powerbi.com/reportEmbed',\n          tokenType: powerbi_client__WEBPACK_IMPORTED_MODULE_0__[\"models\"].TokenType.Embed,\n          accessToken: response.data.embed_token\n        };\n        console.log(embedConfiguration);\n\n        var report = _this2.powerbi.embed($reportContainer.get(0), embedConfiguration);\n      });\n    }\n  }, {\n    key: \"loadEsriReport\",\n    value: function loadEsriReport(link, $reportContainer) {\n      var $ = this.$;\n      var itemdata = $(link).data('reportdata');\n      $reportContainer.html(\"<iframe frameborder=\\\"0\\\" src=\\\"\".concat(itemdata.url, \"\\\"></iframe>\"));\n    }\n  }, {\n    key: \"attachHandlers\",\n    value: function attachHandlers() {\n      var _this3 = this;\n\n      var $ = this.$;\n      var $tabpanes = $('#secure_embed_root .tab-pane');\n      var tabs = {\n        initial_tab: false\n      };\n      $tabpanes.toArray().map(function (v) {\n        var $a = $(\"[href=\\\"#\".concat(v.id, \"\\\"]\"));\n\n        if (!$a.length) {\n          throw new Error(\"The tabpane, \".concat(v.id, \", has no corresponding a to go with it.\"));\n          return;\n        }\n\n        $a.tab();\n        if (!tabs.initial_tab) tabs.initial_tab = $a[0];\n        tabs['#' + v.id] = $a[0];\n      });\n      $(window).on('hashchange', function (event) {\n        var hash = window.location.hash;\n\n        if (!(hash in tabs)) {\n          return;\n        }\n\n        var link = tabs[hash];\n\n        _this3.loadReport(link);\n      });\n      var initial_tab = tabs[window.location.hash] || tabs.initial_tab;\n      this.loadReport(initial_tab);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var $ = this.$;\n      var links = this.data.map(function (v, i) {\n        return \"<li class=\\\"\".concat(i === 0 ? 'active' : '', \"\\\"><a data-reportdata='\").concat(JSON.stringify(v), \"' href=\\\"#\").concat(v.handle, \"\\\">\").concat(v.name || v.id, \"</a></li>\");\n      });\n      var tabs = \"\\n\\t\\t\\t<ul class=\\\"nav nav-tabs\\\" id=\\\"secure_embed_tabs\\\">\\n\\t\\t\\t\\t\".concat(links.join(''), \"\\n\\t\\t\\t</ul>\\n\\t\\t\");\n      var tab_panel_items = this.data.map(function (v, i) {\n        return \"<div id=\\\"\".concat(v.handle, \"\\\" class=\\\"tab-pane fade \").concat(i === 0 ? 'in active' : '', \"\\\">\").concat(v.handle, \"</div>\");\n      });\n      var tab_panels = \"\\n\\t\\t\\t<div class=\\\"tab-content\\\">\\n\\t\\t\\t\".concat(tab_panel_items.join(''), \"\\n\\t\\t\\t</div>\\n\\t\\t\");\n      var page = \"<div id=\\\"secure_embed_root\\\">\\n\\t\\t\\t<div class=\\\"main-container\\\" id=\\\"main-container\\\">\\n\\t\\t\\t\\t<div class=\\\"tabbable\\\">\\n\\t\\t\\t\\t\\t\".concat(tabs, \" \").concat(tab_panels, \"\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\");\n      $(\"script[src=\\\"/auth_proxy_routes/asset/secure_embed.js\\\"]\").before(page);\n    }\n  }]);\n\n  return App;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new App());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/secure_embed.js\n");

/***/ }),

/***/ "./src/secure_embed.scss":
/*!*******************************!*\
  !*** ./src/secure_embed.scss ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2VjdXJlX2VtYmVkLnNjc3M/MjU5MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL3NyYy9zZWN1cmVfZW1iZWQuc2Nzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/secure_embed.scss\n");

/***/ }),

/***/ "./src/version.json":
/*!**************************!*\
  !*** ./src/version.json ***!
  \**************************/
/*! exports provided: version, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"version\\\":\\\"18622d7\\\"}\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3NyYy92ZXJzaW9uLmpzb24uanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/version.json\n");

/***/ }),

/***/ 0:
/*!***********************************************************!*\
  !*** multi ./src/secure_embed.js ./src/secure_embed.scss ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /home/dev/domains/pbi-auth.dev.also-too.com/auth_proxy/src/assets/src/secure_embed.js */"./src/secure_embed.js");
module.exports = __webpack_require__(/*! /home/dev/domains/pbi-auth.dev.also-too.com/auth_proxy/src/assets/src/secure_embed.scss */"./src/secure_embed.scss");


/***/ })

/******/ });