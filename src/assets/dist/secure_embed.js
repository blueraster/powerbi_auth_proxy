/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanM/YmMzYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyxzREFBYSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/index.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL3hoci5qcz9iNTBkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTtBQUNoQyxhQUFhLG1CQUFPLENBQUMsaUVBQWtCO0FBQ3ZDLGVBQWUsbUJBQU8sQ0FBQywyRUFBdUI7QUFDOUMsb0JBQW9CLG1CQUFPLENBQUMsNkVBQXVCO0FBQ25ELG1CQUFtQixtQkFBTyxDQUFDLG1GQUEyQjtBQUN0RCxzQkFBc0IsbUJBQU8sQ0FBQyx5RkFBOEI7QUFDNUQsa0JBQWtCLG1CQUFPLENBQUMseUVBQXFCOztBQUUvQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRDQUE0QztBQUM1Qzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyx5RUFBc0I7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9hZGFwdGVycy94aHIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBidWlsZEZ1bGxQYXRoID0gcmVxdWlyZSgnLi4vY29yZS9idWlsZEZ1bGxQYXRoJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgICBpZiAoY29uZmlnLmF1dGgpIHtcbiAgICAgIHZhciB1c2VybmFtZSA9IGNvbmZpZy5hdXRoLnVzZXJuYW1lIHx8ICcnO1xuICAgICAgdmFyIHBhc3N3b3JkID0gY29uZmlnLmF1dGgucGFzc3dvcmQgfHwgJyc7XG4gICAgICByZXF1ZXN0SGVhZGVycy5BdXRob3JpemF0aW9uID0gJ0Jhc2ljICcgKyBidG9hKHVzZXJuYW1lICsgJzonICsgcGFzc3dvcmQpO1xuICAgIH1cblxuICAgIHZhciBmdWxsUGF0aCA9IGJ1aWxkRnVsbFBhdGgoY29uZmlnLmJhc2VVUkwsIGNvbmZpZy51cmwpO1xuICAgIHJlcXVlc3Qub3Blbihjb25maWcubWV0aG9kLnRvVXBwZXJDYXNlKCksIGJ1aWxkVVJMKGZ1bGxQYXRoLCBjb25maWcucGFyYW1zLCBjb25maWcucGFyYW1zU2VyaWFsaXplciksIHRydWUpO1xuXG4gICAgLy8gU2V0IHRoZSByZXF1ZXN0IHRpbWVvdXQgaW4gTVNcbiAgICByZXF1ZXN0LnRpbWVvdXQgPSBjb25maWcudGltZW91dDtcblxuICAgIC8vIExpc3RlbiBmb3IgcmVhZHkgc3RhdGVcbiAgICByZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUxvYWQoKSB7XG4gICAgICBpZiAoIXJlcXVlc3QgfHwgcmVxdWVzdC5yZWFkeVN0YXRlICE9PSA0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gVGhlIHJlcXVlc3QgZXJyb3JlZCBvdXQgYW5kIHdlIGRpZG4ndCBnZXQgYSByZXNwb25zZSwgdGhpcyB3aWxsIGJlXG4gICAgICAvLyBoYW5kbGVkIGJ5IG9uZXJyb3IgaW5zdGVhZFxuICAgICAgLy8gV2l0aCBvbmUgZXhjZXB0aW9uOiByZXF1ZXN0IHRoYXQgdXNpbmcgZmlsZTogcHJvdG9jb2wsIG1vc3QgYnJvd3NlcnNcbiAgICAgIC8vIHdpbGwgcmV0dXJuIHN0YXR1cyBhcyAwIGV2ZW4gdGhvdWdoIGl0J3MgYSBzdWNjZXNzZnVsIHJlcXVlc3RcbiAgICAgIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gMCAmJiAhKHJlcXVlc3QucmVzcG9uc2VVUkwgJiYgcmVxdWVzdC5yZXNwb25zZVVSTC5pbmRleE9mKCdmaWxlOicpID09PSAwKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFByZXBhcmUgdGhlIHJlc3BvbnNlXG4gICAgICB2YXIgcmVzcG9uc2VIZWFkZXJzID0gJ2dldEFsbFJlc3BvbnNlSGVhZGVycycgaW4gcmVxdWVzdCA/IHBhcnNlSGVhZGVycyhyZXF1ZXN0LmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSA6IG51bGw7XG4gICAgICB2YXIgcmVzcG9uc2VEYXRhID0gIWNvbmZpZy5yZXNwb25zZVR5cGUgfHwgY29uZmlnLnJlc3BvbnNlVHlwZSA9PT0gJ3RleHQnID8gcmVxdWVzdC5yZXNwb25zZVRleHQgOiByZXF1ZXN0LnJlc3BvbnNlO1xuICAgICAgdmFyIHJlc3BvbnNlID0ge1xuICAgICAgICBkYXRhOiByZXNwb25zZURhdGEsXG4gICAgICAgIHN0YXR1czogcmVxdWVzdC5zdGF0dXMsXG4gICAgICAgIHN0YXR1c1RleHQ6IHJlcXVlc3Quc3RhdHVzVGV4dCxcbiAgICAgICAgaGVhZGVyczogcmVzcG9uc2VIZWFkZXJzLFxuICAgICAgICBjb25maWc6IGNvbmZpZyxcbiAgICAgICAgcmVxdWVzdDogcmVxdWVzdFxuICAgICAgfTtcblxuICAgICAgc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgcmVzcG9uc2UpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGJyb3dzZXIgcmVxdWVzdCBjYW5jZWxsYXRpb24gKGFzIG9wcG9zZWQgdG8gYSBtYW51YWwgY2FuY2VsbGF0aW9uKVxuICAgIHJlcXVlc3Qub25hYm9ydCA9IGZ1bmN0aW9uIGhhbmRsZUFib3J0KCkge1xuICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKCdSZXF1ZXN0IGFib3J0ZWQnLCBjb25maWcsICdFQ09OTkFCT1JURUQnLCByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgbG93IGxldmVsIG5ldHdvcmsgZXJyb3JzXG4gICAgcmVxdWVzdC5vbmVycm9yID0gZnVuY3Rpb24gaGFuZGxlRXJyb3IoKSB7XG4gICAgICAvLyBSZWFsIGVycm9ycyBhcmUgaGlkZGVuIGZyb20gdXMgYnkgdGhlIGJyb3dzZXJcbiAgICAgIC8vIG9uZXJyb3Igc2hvdWxkIG9ubHkgZmlyZSBpZiBpdCdzIGEgbmV0d29yayBlcnJvclxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKCdOZXR3b3JrIEVycm9yJywgY29uZmlnLCBudWxsLCByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgdGltZW91dFxuICAgIHJlcXVlc3Qub250aW1lb3V0ID0gZnVuY3Rpb24gaGFuZGxlVGltZW91dCgpIHtcbiAgICAgIHZhciB0aW1lb3V0RXJyb3JNZXNzYWdlID0gJ3RpbWVvdXQgb2YgJyArIGNvbmZpZy50aW1lb3V0ICsgJ21zIGV4Y2VlZGVkJztcbiAgICAgIGlmIChjb25maWcudGltZW91dEVycm9yTWVzc2FnZSkge1xuICAgICAgICB0aW1lb3V0RXJyb3JNZXNzYWdlID0gY29uZmlnLnRpbWVvdXRFcnJvck1lc3NhZ2U7XG4gICAgICB9XG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IodGltZW91dEVycm9yTWVzc2FnZSwgY29uZmlnLCAnRUNPTk5BQk9SVEVEJyxcbiAgICAgICAgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gQWRkIHhzcmYgaGVhZGVyXG4gICAgLy8gVGhpcyBpcyBvbmx5IGRvbmUgaWYgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnQuXG4gICAgLy8gU3BlY2lmaWNhbGx5IG5vdCBpZiB3ZSdyZSBpbiBhIHdlYiB3b3JrZXIsIG9yIHJlYWN0LW5hdGl2ZS5cbiAgICBpZiAodXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSkge1xuICAgICAgdmFyIGNvb2tpZXMgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvY29va2llcycpO1xuXG4gICAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAgIHZhciB4c3JmVmFsdWUgPSAoY29uZmlnLndpdGhDcmVkZW50aWFscyB8fCBpc1VSTFNhbWVPcmlnaW4oZnVsbFBhdGgpKSAmJiBjb25maWcueHNyZkNvb2tpZU5hbWUgP1xuICAgICAgICBjb29raWVzLnJlYWQoY29uZmlnLnhzcmZDb29raWVOYW1lKSA6XG4gICAgICAgIHVuZGVmaW5lZDtcblxuICAgICAgaWYgKHhzcmZWYWx1ZSkge1xuICAgICAgICByZXF1ZXN0SGVhZGVyc1tjb25maWcueHNyZkhlYWRlck5hbWVdID0geHNyZlZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBoZWFkZXJzIHRvIHRoZSByZXF1ZXN0XG4gICAgaWYgKCdzZXRSZXF1ZXN0SGVhZGVyJyBpbiByZXF1ZXN0KSB7XG4gICAgICB1dGlscy5mb3JFYWNoKHJlcXVlc3RIZWFkZXJzLCBmdW5jdGlvbiBzZXRSZXF1ZXN0SGVhZGVyKHZhbCwga2V5KSB7XG4gICAgICAgIGlmICh0eXBlb2YgcmVxdWVzdERhdGEgPT09ICd1bmRlZmluZWQnICYmIGtleS50b0xvd2VyQ2FzZSgpID09PSAnY29udGVudC10eXBlJykge1xuICAgICAgICAgIC8vIFJlbW92ZSBDb250ZW50LVR5cGUgaWYgZGF0YSBpcyB1bmRlZmluZWRcbiAgICAgICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNba2V5XTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBPdGhlcndpc2UgYWRkIGhlYWRlciB0byB0aGUgcmVxdWVzdFxuICAgICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihrZXksIHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEFkZCB3aXRoQ3JlZGVudGlhbHMgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZy53aXRoQ3JlZGVudGlhbHMpKSB7XG4gICAgICByZXF1ZXN0LndpdGhDcmVkZW50aWFscyA9ICEhY29uZmlnLndpdGhDcmVkZW50aWFscztcbiAgICB9XG5cbiAgICAvLyBBZGQgcmVzcG9uc2VUeXBlIHRvIHJlcXVlc3QgaWYgbmVlZGVkXG4gICAgaWYgKGNvbmZpZy5yZXNwb25zZVR5cGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJlcXVlc3QucmVzcG9uc2VUeXBlID0gY29uZmlnLnJlc3BvbnNlVHlwZTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gRXhwZWN0ZWQgRE9NRXhjZXB0aW9uIHRocm93biBieSBicm93c2VycyBub3QgY29tcGF0aWJsZSBYTUxIdHRwUmVxdWVzdCBMZXZlbCAyLlxuICAgICAgICAvLyBCdXQsIHRoaXMgY2FuIGJlIHN1cHByZXNzZWQgZm9yICdqc29uJyB0eXBlIGFzIGl0IGNhbiBiZSBwYXJzZWQgYnkgZGVmYXVsdCAndHJhbnNmb3JtUmVzcG9uc2UnIGZ1bmN0aW9uLlxuICAgICAgICBpZiAoY29uZmlnLnJlc3BvbnNlVHlwZSAhPT0gJ2pzb24nKSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEhhbmRsZSBwcm9ncmVzcyBpZiBuZWVkZWRcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25Eb3dubG9hZFByb2dyZXNzKTtcbiAgICB9XG5cbiAgICAvLyBOb3QgYWxsIGJyb3dzZXJzIHN1cHBvcnQgdXBsb2FkIGV2ZW50c1xuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicgJiYgcmVxdWVzdC51cGxvYWQpIHtcbiAgICAgIHJlcXVlc3QudXBsb2FkLmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIGlmIChjb25maWcuY2FuY2VsVG9rZW4pIHtcbiAgICAgIC8vIEhhbmRsZSBjYW5jZWxsYXRpb25cbiAgICAgIGNvbmZpZy5jYW5jZWxUb2tlbi5wcm9taXNlLnRoZW4oZnVuY3Rpb24gb25DYW5jZWxlZChjYW5jZWwpIHtcbiAgICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVxdWVzdC5hYm9ydCgpO1xuICAgICAgICByZWplY3QoY2FuY2VsKTtcbiAgICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChyZXF1ZXN0RGF0YSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXF1ZXN0RGF0YSA9IG51bGw7XG4gICAgfVxuXG4gICAgLy8gU2VuZCB0aGUgcmVxdWVzdFxuICAgIHJlcXVlc3Quc2VuZChyZXF1ZXN0RGF0YSk7XG4gIH0pO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/adapters/xhr.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzP2NlZTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLGtEQUFTO0FBQzdCLFdBQVcsbUJBQU8sQ0FBQyxnRUFBZ0I7QUFDbkMsWUFBWSxtQkFBTyxDQUFDLDREQUFjO0FBQ2xDLGtCQUFrQixtQkFBTyxDQUFDLHdFQUFvQjtBQUM5QyxlQUFlLG1CQUFPLENBQUMsd0RBQVk7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZLE1BQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLGtFQUFpQjtBQUN4QyxvQkFBb0IsbUJBQU8sQ0FBQyw0RUFBc0I7QUFDbEQsaUJBQWlCLG1CQUFPLENBQUMsc0VBQW1COztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxvRUFBa0I7O0FBRXpDOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vY29yZS9tZXJnZUNvbmZpZycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuYXhpb3MuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gIHJldHVybiBjcmVhdGVJbnN0YW5jZShtZXJnZUNvbmZpZyhheGlvcy5kZWZhdWx0cywgaW5zdGFuY2VDb25maWcpKTtcbn07XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5heGlvcy5zcHJlYWQgPSByZXF1aXJlKCcuL2hlbHBlcnMvc3ByZWFkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/axios.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanM/N2E3NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQSBgQ2FuY2VsYCBpcyBhbiBvYmplY3QgdGhhdCBpcyB0aHJvd24gd2hlbiBhbiBvcGVyYXRpb24gaXMgY2FuY2VsZWQuXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge3N0cmluZz19IG1lc3NhZ2UgVGhlIG1lc3NhZ2UuXG4gKi9cbmZ1bmN0aW9uIENhbmNlbChtZXNzYWdlKSB7XG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG59XG5cbkNhbmNlbC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuICdDYW5jZWwnICsgKHRoaXMubWVzc2FnZSA/ICc6ICcgKyB0aGlzLm1lc3NhZ2UgOiAnJyk7XG59O1xuXG5DYW5jZWwucHJvdG90eXBlLl9fQ0FOQ0VMX18gPSB0cnVlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/Cancel.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcz84ZGY0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsbUJBQU8sQ0FBQywyREFBVTs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuL0NhbmNlbCcpO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBleGVjdXRvciBUaGUgZXhlY3V0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgcmVzb2x2ZVByb21pc2U7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIHByb21pc2VFeGVjdXRvcihyZXNvbHZlKSB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICB9KTtcblxuICB2YXIgdG9rZW4gPSB0aGlzO1xuICBleGVjdXRvcihmdW5jdGlvbiBjYW5jZWwobWVzc2FnZSkge1xuICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgIC8vIENhbmNlbGxhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHJlcXVlc3RlZFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRva2VuLnJlYXNvbiA9IG5ldyBDYW5jZWwobWVzc2FnZSk7XG4gICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgfSk7XG59XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnRocm93SWZSZXF1ZXN0ZWQgPSBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gKiBjYW5jZWxzIHRoZSBgQ2FuY2VsVG9rZW5gLlxuICovXG5DYW5jZWxUb2tlbi5zb3VyY2UgPSBmdW5jdGlvbiBzb3VyY2UoKSB7XG4gIHZhciBjYW5jZWw7XG4gIHZhciB0b2tlbiA9IG5ldyBDYW5jZWxUb2tlbihmdW5jdGlvbiBleGVjdXRvcihjKSB7XG4gICAgY2FuY2VsID0gYztcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdG9rZW46IHRva2VuLFxuICAgIGNhbmNlbDogY2FuY2VsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbFRva2VuO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/CancelToken.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcz8yZTY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQ2FuY2VsKHZhbHVlKSB7XG4gIHJldHVybiAhISh2YWx1ZSAmJiB2YWx1ZS5fX0NBTkNFTF9fKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/isCancel.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanM/MGEwNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7QUFDaEMsZUFBZSxtQkFBTyxDQUFDLHlFQUFxQjtBQUM1Qyx5QkFBeUIsbUJBQU8sQ0FBQyxpRkFBc0I7QUFDdkQsc0JBQXNCLG1CQUFPLENBQUMsMkVBQW1CO0FBQ2pELGtCQUFrQixtQkFBTyxDQUFDLG1FQUFlOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBidWlsZFVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBJbnRlcmNlcHRvck1hbmFnZXIgPSByZXF1aXJlKCcuL0ludGVyY2VwdG9yTWFuYWdlcicpO1xudmFyIGRpc3BhdGNoUmVxdWVzdCA9IHJlcXVpcmUoJy4vZGlzcGF0Y2hSZXF1ZXN0Jyk7XG52YXIgbWVyZ2VDb25maWcgPSByZXF1aXJlKCcuL21lcmdlQ29uZmlnJyk7XG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGluc3RhbmNlQ29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKi9cbmZ1bmN0aW9uIEF4aW9zKGluc3RhbmNlQ29uZmlnKSB7XG4gIHRoaXMuZGVmYXVsdHMgPSBpbnN0YW5jZUNvbmZpZztcbiAgdGhpcy5pbnRlcmNlcHRvcnMgPSB7XG4gICAgcmVxdWVzdDogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpLFxuICAgIHJlc3BvbnNlOiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKClcbiAgfTtcbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcgc3BlY2lmaWMgZm9yIHRoaXMgcmVxdWVzdCAobWVyZ2VkIHdpdGggdGhpcy5kZWZhdWx0cylcbiAqL1xuQXhpb3MucHJvdG90eXBlLnJlcXVlc3QgPSBmdW5jdGlvbiByZXF1ZXN0KGNvbmZpZykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgLy8gQWxsb3cgZm9yIGF4aW9zKCdleGFtcGxlL3VybCdbLCBjb25maWddKSBhIGxhIGZldGNoIEFQSVxuICBpZiAodHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycpIHtcbiAgICBjb25maWcgPSBhcmd1bWVudHNbMV0gfHwge307XG4gICAgY29uZmlnLnVybCA9IGFyZ3VtZW50c1swXTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcgPSBjb25maWcgfHwge307XG4gIH1cblxuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuXG4gIC8vIFNldCBjb25maWcubWV0aG9kXG4gIGlmIChjb25maWcubWV0aG9kKSB7XG4gICAgY29uZmlnLm1ldGhvZCA9IGNvbmZpZy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIGlmICh0aGlzLmRlZmF1bHRzLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSB0aGlzLmRlZmF1bHRzLm1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICB9IGVsc2Uge1xuICAgIGNvbmZpZy5tZXRob2QgPSAnZ2V0JztcbiAgfVxuXG4gIC8vIEhvb2sgdXAgaW50ZXJjZXB0b3JzIG1pZGRsZXdhcmVcbiAgdmFyIGNoYWluID0gW2Rpc3BhdGNoUmVxdWVzdCwgdW5kZWZpbmVkXTtcbiAgdmFyIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoY29uZmlnKTtcblxuICB0aGlzLmludGVyY2VwdG9ycy5yZXF1ZXN0LmZvckVhY2goZnVuY3Rpb24gdW5zaGlmdFJlcXVlc3RJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBjaGFpbi51bnNoaWZ0KGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB0aGlzLmludGVyY2VwdG9ycy5yZXNwb25zZS5mb3JFYWNoKGZ1bmN0aW9uIHB1c2hSZXNwb25zZUludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGNoYWluLnB1c2goaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHdoaWxlIChjaGFpbi5sZW5ndGgpIHtcbiAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKGNoYWluLnNoaWZ0KCksIGNoYWluLnNoaWZ0KCkpO1xuICB9XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuXG5BeGlvcy5wcm90b3R5cGUuZ2V0VXJpID0gZnVuY3Rpb24gZ2V0VXJpKGNvbmZpZykge1xuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuICByZXR1cm4gYnVpbGRVUkwoY29uZmlnLnVybCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLnJlcGxhY2UoL15cXD8vLCAnJyk7XG59O1xuXG4vLyBQcm92aWRlIGFsaWFzZXMgZm9yIHN1cHBvcnRlZCByZXF1ZXN0IG1ldGhvZHNcbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAnb3B0aW9ucyddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdCh1dGlscy5tZXJnZShjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmxcbiAgICB9KSk7XG4gIH07XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGRhdGEsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QodXRpbHMubWVyZ2UoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF4aW9zO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/Axios.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzP2Y2YjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQjtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWRcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/InterceptorManager.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcz84M2I5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLG9CQUFvQixtQkFBTyxDQUFDLG1GQUEwQjtBQUN0RCxrQkFBa0IsbUJBQU8sQ0FBQywrRUFBd0I7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9idWlsZEZ1bGxQYXRoLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNBYnNvbHV0ZVVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTCcpO1xudmFyIGNvbWJpbmVVUkxzID0gcmVxdWlyZSgnLi4vaGVscGVycy9jb21iaW5lVVJMcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgYmFzZVVSTCB3aXRoIHRoZSByZXF1ZXN0ZWRVUkwsXG4gKiBvbmx5IHdoZW4gdGhlIHJlcXVlc3RlZFVSTCBpcyBub3QgYWxyZWFkeSBhbiBhYnNvbHV0ZSBVUkwuXG4gKiBJZiB0aGUgcmVxdWVzdFVSTCBpcyBhYnNvbHV0ZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSByZXF1ZXN0ZWRVUkwgdW50b3VjaGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlcXVlc3RlZFVSTCBBYnNvbHV0ZSBvciByZWxhdGl2ZSBVUkwgdG8gY29tYmluZVxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIGZ1bGwgcGF0aFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkRnVsbFBhdGgoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKSB7XG4gIGlmIChiYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKHJlcXVlc3RlZFVSTCkpIHtcbiAgICByZXR1cm4gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKTtcbiAgfVxuICByZXR1cm4gcmVxdWVzdGVkVVJMO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/buildFullPath.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanM/MmQ4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixtQkFBbUIsbUJBQU8sQ0FBQyxxRUFBZ0I7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBlbmhhbmNlRXJyb3IgPSByZXF1aXJlKCcuL2VuaGFuY2VFcnJvcicpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgbWVzc2FnZSwgY29uZmlnLCBlcnJvciBjb2RlLCByZXF1ZXN0IGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVFcnJvcihtZXNzYWdlLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIHZhciBlcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgcmV0dXJuIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/createError.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzPzUyNzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZO0FBQ2hDLG9CQUFvQixtQkFBTyxDQUFDLHVFQUFpQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsdUVBQW9CO0FBQzNDLGVBQWUsbUJBQU8sQ0FBQyx5REFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CLHVDQUF1QztBQUN2QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciB0cmFuc2Zvcm1EYXRhID0gcmVxdWlyZSgnLi90cmFuc2Zvcm1EYXRhJyk7XG52YXIgaXNDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvaXNDYW5jZWwnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/dispatchRequest.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZW5oYW5jZUVycm9yLmpzPzM4N2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2VuaGFuY2VFcnJvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVcGRhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIGNvbmZpZywgZXJyb3IgY29kZSwgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yIFRoZSBlcnJvciB0byB1cGRhdGUuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBlcnJvci5jb25maWcgPSBjb25maWc7XG4gIGlmIChjb2RlKSB7XG4gICAgZXJyb3IuY29kZSA9IGNvZGU7XG4gIH1cblxuICBlcnJvci5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgZXJyb3IucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgZXJyb3IuaXNBeGlvc0Vycm9yID0gdHJ1ZTtcblxuICBlcnJvci50b0pTT04gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLy8gU3RhbmRhcmRcbiAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgIC8vIE1pY3Jvc29mdFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXG4gICAgICBudW1iZXI6IHRoaXMubnVtYmVyLFxuICAgICAgLy8gTW96aWxsYVxuICAgICAgZmlsZU5hbWU6IHRoaXMuZmlsZU5hbWUsXG4gICAgICBsaW5lTnVtYmVyOiB0aGlzLmxpbmVOdW1iZXIsXG4gICAgICBjb2x1bW5OdW1iZXI6IHRoaXMuY29sdW1uTnVtYmVyLFxuICAgICAgc3RhY2s6IHRoaXMuc3RhY2ssXG4gICAgICAvLyBBeGlvc1xuICAgICAgY29uZmlnOiB0aGlzLmNvbmZpZyxcbiAgICAgIGNvZGU6IHRoaXMuY29kZVxuICAgIH07XG4gIH07XG4gIHJldHVybiBlcnJvcjtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/enhanceError.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanM/NGE3YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsbURBQVU7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9tZXJnZUNvbmZpZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDb25maWctc3BlY2lmaWMgbWVyZ2UtZnVuY3Rpb24gd2hpY2ggY3JlYXRlcyBhIG5ldyBjb25maWctb2JqZWN0XG4gKiBieSBtZXJnaW5nIHR3byBjb25maWd1cmF0aW9uIG9iamVjdHMgdG9nZXRoZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzFcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBOZXcgb2JqZWN0IHJlc3VsdGluZyBmcm9tIG1lcmdpbmcgY29uZmlnMiB0byBjb25maWcxXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIHZhciBjb25maWcgPSB7fTtcblxuICB2YXIgdmFsdWVGcm9tQ29uZmlnMktleXMgPSBbJ3VybCcsICdtZXRob2QnLCAncGFyYW1zJywgJ2RhdGEnXTtcbiAgdmFyIG1lcmdlRGVlcFByb3BlcnRpZXNLZXlzID0gWydoZWFkZXJzJywgJ2F1dGgnLCAncHJveHknXTtcbiAgdmFyIGRlZmF1bHRUb0NvbmZpZzJLZXlzID0gW1xuICAgICdiYXNlVVJMJywgJ3VybCcsICd0cmFuc2Zvcm1SZXF1ZXN0JywgJ3RyYW5zZm9ybVJlc3BvbnNlJywgJ3BhcmFtc1NlcmlhbGl6ZXInLFxuICAgICd0aW1lb3V0JywgJ3dpdGhDcmVkZW50aWFscycsICdhZGFwdGVyJywgJ3Jlc3BvbnNlVHlwZScsICd4c3JmQ29va2llTmFtZScsXG4gICAgJ3hzcmZIZWFkZXJOYW1lJywgJ29uVXBsb2FkUHJvZ3Jlc3MnLCAnb25Eb3dubG9hZFByb2dyZXNzJyxcbiAgICAnbWF4Q29udGVudExlbmd0aCcsICd2YWxpZGF0ZVN0YXR1cycsICdtYXhSZWRpcmVjdHMnLCAnaHR0cEFnZW50JyxcbiAgICAnaHR0cHNBZ2VudCcsICdjYW5jZWxUb2tlbicsICdzb2NrZXRQYXRoJ1xuICBdO1xuXG4gIHV0aWxzLmZvckVhY2godmFsdWVGcm9tQ29uZmlnMktleXMsIGZ1bmN0aW9uIHZhbHVlRnJvbUNvbmZpZzIocHJvcCkge1xuICAgIGlmICh0eXBlb2YgY29uZmlnMltwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzJbcHJvcF07XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKG1lcmdlRGVlcFByb3BlcnRpZXNLZXlzLCBmdW5jdGlvbiBtZXJnZURlZXBQcm9wZXJ0aWVzKHByb3ApIHtcbiAgICBpZiAodXRpbHMuaXNPYmplY3QoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IHV0aWxzLmRlZXBNZXJnZShjb25maWcxW3Byb3BdLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb25maWcyW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMltwcm9wXTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzT2JqZWN0KGNvbmZpZzFbcHJvcF0pKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSB1dGlscy5kZWVwTWVyZ2UoY29uZmlnMVtwcm9wXSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgY29uZmlnMVtwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzFbcHJvcF07XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKGRlZmF1bHRUb0NvbmZpZzJLZXlzLCBmdW5jdGlvbiBkZWZhdWx0VG9Db25maWcyKHByb3ApIHtcbiAgICBpZiAodHlwZW9mIGNvbmZpZzJbcHJvcF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBjb25maWcyW3Byb3BdO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGNvbmZpZzFbcHJvcF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBjb25maWcxW3Byb3BdO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIGF4aW9zS2V5cyA9IHZhbHVlRnJvbUNvbmZpZzJLZXlzXG4gICAgLmNvbmNhdChtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cylcbiAgICAuY29uY2F0KGRlZmF1bHRUb0NvbmZpZzJLZXlzKTtcblxuICB2YXIgb3RoZXJLZXlzID0gT2JqZWN0XG4gICAgLmtleXMoY29uZmlnMilcbiAgICAuZmlsdGVyKGZ1bmN0aW9uIGZpbHRlckF4aW9zS2V5cyhrZXkpIHtcbiAgICAgIHJldHVybiBheGlvc0tleXMuaW5kZXhPZihrZXkpID09PSAtMTtcbiAgICB9KTtcblxuICB1dGlscy5mb3JFYWNoKG90aGVyS2V5cywgZnVuY3Rpb24gb3RoZXJLZXlzRGVmYXVsdFRvQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKHR5cGVvZiBjb25maWcyW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMltwcm9wXTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb25maWcxW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMVtwcm9wXTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBjb25maWc7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/mergeConfig.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzPzQ2N2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0JBQWtCLG1CQUFPLENBQUMsbUVBQWU7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi9jcmVhdGVFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgaWYgKCF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KGNyZWF0ZUVycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIG51bGwsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/settle.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcz9jNDAxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsTUFBTTtBQUNqQixXQUFXLGVBQWU7QUFDMUIsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS90cmFuc2Zvcm1EYXRhLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gZGF0YSBUaGUgZGF0YSB0byBiZSB0cmFuc2Zvcm1lZFxuICogQHBhcmFtIHtBcnJheX0gaGVhZGVycyBUaGUgaGVhZGVycyBmb3IgdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2VcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGRhdGEsIGhlYWRlcnMsIGZucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbihkYXRhLCBoZWFkZXJzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/transformData.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzLmpzPzI0NDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0NBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLGtEQUFTO0FBQzdCLDBCQUEwQixtQkFBTyxDQUFDLDhGQUErQjs7QUFFakU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsZ0VBQWdCO0FBQ3RDLEdBQUc7QUFDSDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxpRUFBaUI7QUFDdkM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sWUFBWTtBQUNuQjtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBub3JtYWxpemVIZWFkZXJOYW1lID0gcmVxdWlyZSgnLi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUnKTtcblxudmFyIERFRkFVTFRfQ09OVEVOVF9UWVBFID0ge1xuICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcbn07XG5cbmZ1bmN0aW9uIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCB2YWx1ZSkge1xuICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnMpICYmIHV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddKSkge1xuICAgIGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gdmFsdWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEFkYXB0ZXIoKSB7XG4gIHZhciBhZGFwdGVyO1xuICBpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBicm93c2VycyB1c2UgWEhSIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy94aHInKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHByb2Nlc3MpID09PSAnW29iamVjdCBwcm9jZXNzXScpIHtcbiAgICAvLyBGb3Igbm9kZSB1c2UgSFRUUCBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMvaHR0cCcpO1xuICB9XG4gIHJldHVybiBhZGFwdGVyO1xufVxuXG52YXIgZGVmYXVsdHMgPSB7XG4gIGFkYXB0ZXI6IGdldERlZmF1bHRBZGFwdGVyKCksXG5cbiAgdHJhbnNmb3JtUmVxdWVzdDogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlcXVlc3QoZGF0YSwgaGVhZGVycykge1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0FjY2VwdCcpO1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0NvbnRlbnQtVHlwZScpO1xuICAgIGlmICh1dGlscy5pc0Zvcm1EYXRhKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0FycmF5QnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0J1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNTdHJlYW0oZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzRmlsZShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCbG9iKGRhdGEpXG4gICAgKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzQXJyYXlCdWZmZXJWaWV3KGRhdGEpKSB7XG4gICAgICByZXR1cm4gZGF0YS5idWZmZXI7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIGRhdGEudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzT2JqZWN0KGRhdGEpKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgdHJhbnNmb3JtUmVzcG9uc2U6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXNwb25zZShkYXRhKSB7XG4gICAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICB9IGNhdGNoIChlKSB7IC8qIElnbm9yZSAqLyB9XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICAvKipcbiAgICogQSB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyB0byBhYm9ydCBhIHJlcXVlc3QuIElmIHNldCB0byAwIChkZWZhdWx0KSBhXG4gICAqIHRpbWVvdXQgaXMgbm90IGNyZWF0ZWQuXG4gICAqL1xuICB0aW1lb3V0OiAwLFxuXG4gIHhzcmZDb29raWVOYW1lOiAnWFNSRi1UT0tFTicsXG4gIHhzcmZIZWFkZXJOYW1lOiAnWC1YU1JGLVRPS0VOJyxcblxuICBtYXhDb250ZW50TGVuZ3RoOiAtMSxcblxuICB2YWxpZGF0ZVN0YXR1czogZnVuY3Rpb24gdmFsaWRhdGVTdGF0dXMoc3RhdHVzKSB7XG4gICAgcmV0dXJuIHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwO1xuICB9XG59O1xuXG5kZWZhdWx0cy5oZWFkZXJzID0ge1xuICBjb21tb246IHtcbiAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKidcbiAgfVxufTtcblxudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB7fTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB1dGlscy5tZXJnZShERUZBVUxUX0NPTlRFTlRfVFlQRSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWZhdWx0cztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/defaults.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcz8xZDJiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixpQkFBaUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9iaW5kLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/bind.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanM/MzBiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyU0MC9naSwgJ0AnKS5cbiAgICByZXBsYWNlKC8lM0EvZ2ksICc6JykuXG4gICAgcmVwbGFjZSgvJTI0L2csICckJykuXG4gICAgcmVwbGFjZSgvJTJDL2dpLCAnLCcpLlxuICAgIHJlcGxhY2UoLyUyMC9nLCAnKycpLlxuICAgIHJlcGxhY2UoLyU1Qi9naSwgJ1snKS5cbiAgICByZXBsYWNlKC8lNUQvZ2ksICddJyk7XG59XG5cbi8qKlxuICogQnVpbGQgYSBVUkwgYnkgYXBwZW5kaW5nIHBhcmFtcyB0byB0aGUgZW5kXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgYmFzZSBvZiB0aGUgdXJsIChlLmcuLCBodHRwOi8vd3d3Lmdvb2dsZS5jb20pXG4gKiBAcGFyYW0ge29iamVjdH0gW3BhcmFtc10gVGhlIHBhcmFtcyB0byBiZSBhcHBlbmRlZFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGZvcm1hdHRlZCB1cmxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBidWlsZFVSTCh1cmwsIHBhcmFtcywgcGFyYW1zU2VyaWFsaXplcikge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgaWYgKCFwYXJhbXMpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdmFyIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIGlmIChwYXJhbXNTZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcmFtc1NlcmlhbGl6ZXIocGFyYW1zKTtcbiAgfSBlbHNlIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMpKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcmFtcy50b1N0cmluZygpO1xuICB9IGVsc2Uge1xuICAgIHZhciBwYXJ0cyA9IFtdO1xuXG4gICAgdXRpbHMuZm9yRWFjaChwYXJhbXMsIGZ1bmN0aW9uIHNlcmlhbGl6ZSh2YWwsIGtleSkge1xuICAgICAgaWYgKHZhbCA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh1dGlscy5pc0FycmF5KHZhbCkpIHtcbiAgICAgICAga2V5ID0ga2V5ICsgJ1tdJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbCA9IFt2YWxdO1xuICAgICAgfVxuXG4gICAgICB1dGlscy5mb3JFYWNoKHZhbCwgZnVuY3Rpb24gcGFyc2VWYWx1ZSh2KSB7XG4gICAgICAgIGlmICh1dGlscy5pc0RhdGUodikpIHtcbiAgICAgICAgICB2ID0gdi50b0lTT1N0cmluZygpO1xuICAgICAgICB9IGVsc2UgaWYgKHV0aWxzLmlzT2JqZWN0KHYpKSB7XG4gICAgICAgICAgdiA9IEpTT04uc3RyaW5naWZ5KHYpO1xuICAgICAgICB9XG4gICAgICAgIHBhcnRzLnB1c2goZW5jb2RlKGtleSkgKyAnPScgKyBlbmNvZGUodikpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFydHMuam9pbignJicpO1xuICB9XG5cbiAgaWYgKHNlcmlhbGl6ZWRQYXJhbXMpIHtcbiAgICB2YXIgaGFzaG1hcmtJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gICAgaWYgKGhhc2htYXJrSW5kZXggIT09IC0xKSB7XG4gICAgICB1cmwgPSB1cmwuc2xpY2UoMCwgaGFzaG1hcmtJbmRleCk7XG4gICAgfVxuXG4gICAgdXJsICs9ICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICc/JyA6ICcmJykgKyBzZXJpYWxpemVkUGFyYW1zO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/buildURL.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanM/ZTY4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBVUkxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZWxhdGl2ZVVSTCkge1xuICByZXR1cm4gcmVsYXRpdmVVUkxcbiAgICA/IGJhc2VVUkwucmVwbGFjZSgvXFwvKyQvLCAnJykgKyAnLycgKyByZWxhdGl2ZVVSTC5yZXBsYWNlKC9eXFwvKy8sICcnKVxuICAgIDogYmFzZVVSTDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/combineURLs.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcz83YWFjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTs7QUFFaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDBDQUEwQztBQUMxQyxTQUFTOztBQUVUO0FBQ0EsNERBQTRELHdCQUF3QjtBQUNwRjtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQywrQkFBK0IsYUFBYSxFQUFFO0FBQzlDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgICB2YXIgY29va2llID0gW107XG4gICAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKHBhdGgpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGRvbWFpbikpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlY3VyZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICAgICAgcmV0dXJuIChtYXRjaCA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFszXSkgOiBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/cookies.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcz9kOTI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBVUkwgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQWJzb2x1dGVVUkwodXJsKSB7XG4gIC8vIEEgVVJMIGlzIGNvbnNpZGVyZWQgYWJzb2x1dGUgaWYgaXQgYmVnaW5zIHdpdGggXCI8c2NoZW1lPjovL1wiIG9yIFwiLy9cIiAocHJvdG9jb2wtcmVsYXRpdmUgVVJMKS5cbiAgLy8gUkZDIDM5ODYgZGVmaW5lcyBzY2hlbWUgbmFtZSBhcyBhIHNlcXVlbmNlIG9mIGNoYXJhY3RlcnMgYmVnaW5uaW5nIHdpdGggYSBsZXR0ZXIgYW5kIGZvbGxvd2VkXG4gIC8vIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBsZXR0ZXJzLCBkaWdpdHMsIHBsdXMsIHBlcmlvZCwgb3IgaHlwaGVuLlxuICByZXR1cm4gL14oW2Etel1bYS16XFxkXFwrXFwtXFwuXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAbsoluteURL.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar isValidXss = __webpack_require__(/*! ./isValidXss */ \"./node_modules/axios/lib/helpers/isValidXss.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (isValidXss(url)) {\n          throw new Error('URL contains XSS injection attempt');\n        }\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzPzM5MzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZO0FBQ2hDLGlCQUFpQixtQkFBTyxDQUFDLG9FQUFjOztBQUV2QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsT0FBTztBQUNyQixnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgaXNWYWxpZFhzcyA9IHJlcXVpcmUoJy4vaXNWYWxpZFhzcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIGhhdmUgZnVsbCBzdXBwb3J0IG9mIHRoZSBBUElzIG5lZWRlZCB0byB0ZXN0XG4gIC8vIHdoZXRoZXIgdGhlIHJlcXVlc3QgVVJMIGlzIG9mIHRoZSBzYW1lIG9yaWdpbiBhcyBjdXJyZW50IGxvY2F0aW9uLlxuICAgIChmdW5jdGlvbiBzdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICB2YXIgbXNpZSA9IC8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICB2YXIgdXJsUGFyc2luZ05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgICB2YXIgb3JpZ2luVVJMO1xuXG4gICAgICAvKipcbiAgICAqIFBhcnNlIGEgVVJMIHRvIGRpc2NvdmVyIGl0J3MgY29tcG9uZW50c1xuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgVGhlIFVSTCB0byBiZSBwYXJzZWRcbiAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgKi9cbiAgICAgIGZ1bmN0aW9uIHJlc29sdmVVUkwodXJsKSB7XG4gICAgICAgIHZhciBocmVmID0gdXJsO1xuXG4gICAgICAgIGlmIChpc1ZhbGlkWHNzKHVybCkpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VSTCBjb250YWlucyBYU1MgaW5qZWN0aW9uIGF0dGVtcHQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChtc2llKSB7XG4gICAgICAgIC8vIElFIG5lZWRzIGF0dHJpYnV0ZSBzZXQgdHdpY2UgdG8gbm9ybWFsaXplIHByb3BlcnRpZXNcbiAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcbiAgICAgICAgICBocmVmID0gdXJsUGFyc2luZ05vZGUuaHJlZjtcbiAgICAgICAgfVxuXG4gICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuXG4gICAgICAgIC8vIHVybFBhcnNpbmdOb2RlIHByb3ZpZGVzIHRoZSBVcmxVdGlscyBpbnRlcmZhY2UgLSBodHRwOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jdXJsdXRpbHNcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBocmVmOiB1cmxQYXJzaW5nTm9kZS5ocmVmLFxuICAgICAgICAgIHByb3RvY29sOiB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbCA/IHVybFBhcnNpbmdOb2RlLnByb3RvY29sLnJlcGxhY2UoLzokLywgJycpIDogJycsXG4gICAgICAgICAgaG9zdDogdXJsUGFyc2luZ05vZGUuaG9zdCxcbiAgICAgICAgICBzZWFyY2g6IHVybFBhcnNpbmdOb2RlLnNlYXJjaCA/IHVybFBhcnNpbmdOb2RlLnNlYXJjaC5yZXBsYWNlKC9eXFw/LywgJycpIDogJycsXG4gICAgICAgICAgaGFzaDogdXJsUGFyc2luZ05vZGUuaGFzaCA/IHVybFBhcnNpbmdOb2RlLmhhc2gucmVwbGFjZSgvXiMvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0bmFtZTogdXJsUGFyc2luZ05vZGUuaG9zdG5hbWUsXG4gICAgICAgICAgcG9ydDogdXJsUGFyc2luZ05vZGUucG9ydCxcbiAgICAgICAgICBwYXRobmFtZTogKHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nKSA/XG4gICAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZSA6XG4gICAgICAgICAgICAnLycgKyB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBvcmlnaW5VUkwgPSByZXNvbHZlVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcblxuICAgICAgLyoqXG4gICAgKiBEZXRlcm1pbmUgaWYgYSBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiBhcyB0aGUgY3VycmVudCBsb2NhdGlvblxuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSByZXF1ZXN0VVJMIFRoZSBVUkwgdG8gdGVzdFxuICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4sIG90aGVyd2lzZSBmYWxzZVxuICAgICovXG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKHJlcXVlc3RVUkwpIHtcbiAgICAgICAgdmFyIHBhcnNlZCA9ICh1dGlscy5pc1N0cmluZyhyZXF1ZXN0VVJMKSkgPyByZXNvbHZlVVJMKHJlcXVlc3RVUkwpIDogcmVxdWVzdFVSTDtcbiAgICAgICAgcmV0dXJuIChwYXJzZWQucHJvdG9jb2wgPT09IG9yaWdpblVSTC5wcm90b2NvbCAmJlxuICAgICAgICAgICAgcGFyc2VkLmhvc3QgPT09IG9yaWdpblVSTC5ob3N0KTtcbiAgICAgIH07XG4gICAgfSkoKSA6XG5cbiAgLy8gTm9uIHN0YW5kYXJkIGJyb3dzZXIgZW52cyAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbigpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9O1xuICAgIH0pKClcbik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isURLSameOrigin.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isValidXss.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isValidXss.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function isValidXss(requestURL) {\n  var xssRegex = /(\\b)(on\\w+)=|javascript|(<\\s*)(\\/*)script/gi;\n  return xssRegex.test(requestURL);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNWYWxpZFhzcy5qcz82ZGMwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVmFsaWRYc3MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNWYWxpZFhzcyhyZXF1ZXN0VVJMKSB7XG4gIHZhciB4c3NSZWdleCA9IC8oXFxiKShvblxcdyspPXxqYXZhc2NyaXB0fCg8XFxzKikoXFwvKilzY3JpcHQvZ2k7XG4gIHJldHVybiB4c3NSZWdleC50ZXN0KHJlcXVlc3RVUkwpO1xufTtcblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isValidXss.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcz9jOGFmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxtREFBVTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCBub3JtYWxpemVkTmFtZSkge1xuICB1dGlscy5mb3JFYWNoKGhlYWRlcnMsIGZ1bmN0aW9uIHByb2Nlc3NIZWFkZXIodmFsdWUsIG5hbWUpIHtcbiAgICBpZiAobmFtZSAhPT0gbm9ybWFsaXplZE5hbWUgJiYgbmFtZS50b1VwcGVyQ2FzZSgpID09PSBub3JtYWxpemVkTmFtZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICBoZWFkZXJzW25vcm1hbGl6ZWROYW1lXSA9IHZhbHVlO1xuICAgICAgZGVsZXRlIGhlYWRlcnNbbmFtZV07XG4gICAgfVxuICB9KTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/normalizeHeaderName.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzP2MzNDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLGVBQWU7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/parseHeaders.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzPzBkZjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFN5bnRhY3RpYyBzdWdhciBmb3IgaW52b2tpbmcgYSBmdW5jdGlvbiBhbmQgZXhwYW5kaW5nIGFuIGFycmF5IGZvciBhcmd1bWVudHMuXG4gKlxuICogQ29tbW9uIHVzZSBjYXNlIHdvdWxkIGJlIHRvIHVzZSBgRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5YC5cbiAqXG4gKiAgYGBganNcbiAqICBmdW5jdGlvbiBmKHgsIHksIHopIHt9XG4gKiAgdmFyIGFyZ3MgPSBbMSwgMiwgM107XG4gKiAgZi5hcHBseShudWxsLCBhcmdzKTtcbiAqICBgYGBcbiAqXG4gKiBXaXRoIGBzcHJlYWRgIHRoaXMgZXhhbXBsZSBjYW4gYmUgcmUtd3JpdHRlbi5cbiAqXG4gKiAgYGBganNcbiAqICBzcHJlYWQoZnVuY3Rpb24oeCwgeSwgeikge30pKFsxLCAyLCAzXSk7XG4gKiAgYGBgXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzcHJlYWQoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoYXJyKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFycik7XG4gIH07XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/spread.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/utils.js\n");

/***/ }),

/***/ "./node_modules/powerbi-client/dist/powerbi.js":
/*!*****************************************************!*\
  !*** ./node_modules/powerbi-client/dist/powerbi.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*! powerbi-client v2.8.0 | (c) 2016 Microsoft Corporation MIT */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar service = __webpack_require__(1);\r\n\texports.service = service;\r\n\tvar factories = __webpack_require__(16);\r\n\texports.factories = factories;\r\n\tvar models = __webpack_require__(4);\r\n\texports.models = models;\r\n\tvar report_1 = __webpack_require__(5);\r\n\texports.Report = report_1.Report;\r\n\tvar dashboard_1 = __webpack_require__(12);\r\n\texports.Dashboard = dashboard_1.Dashboard;\r\n\tvar tile_1 = __webpack_require__(13);\r\n\texports.Tile = tile_1.Tile;\r\n\tvar embed_1 = __webpack_require__(2);\r\n\texports.Embed = embed_1.Embed;\r\n\tvar page_1 = __webpack_require__(7);\r\n\texports.Page = page_1.Page;\r\n\tvar qna_1 = __webpack_require__(14);\r\n\texports.Qna = qna_1.Qna;\r\n\tvar visual_1 = __webpack_require__(15);\r\n\texports.Visual = visual_1.Visual;\r\n\tvar visualDescriptor_1 = __webpack_require__(8);\r\n\texports.VisualDescriptor = visualDescriptor_1.VisualDescriptor;\r\n\t/**\r\n\t * Makes Power BI available to the global object for use in applications that don't have module loading support.\r\n\t *\r\n\t * Note: create an instance of the class with the default configuration for normal usage, or save the class so that you can create an instance of the service.\r\n\t */\r\n\tvar powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\r\n\twindow.powerbi = powerbi;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar embed = __webpack_require__(2);\r\n\tvar report_1 = __webpack_require__(5);\r\n\tvar create_1 = __webpack_require__(11);\r\n\tvar dashboard_1 = __webpack_require__(12);\r\n\tvar tile_1 = __webpack_require__(13);\r\n\tvar page_1 = __webpack_require__(7);\r\n\tvar qna_1 = __webpack_require__(14);\r\n\tvar visual_1 = __webpack_require__(15);\r\n\tvar utils = __webpack_require__(3);\r\n\t/**\r\n\t * The Power BI Service embed component, which is the entry point to embed all other Power BI components into your application\r\n\t *\r\n\t * @export\r\n\t * @class Service\r\n\t * @implements {IService}\r\n\t */\r\n\tvar Service = (function () {\r\n\t    /**\r\n\t     * Creates an instance of a Power BI Service.\r\n\t     *\r\n\t     * @param {IHpmFactory} hpmFactory The http post message factory used in the postMessage communication layer\r\n\t     * @param {IWpmpFactory} wpmpFactory The window post message factory used in the postMessage communication layer\r\n\t     * @param {IRouterFactory} routerFactory The router factory used in the postMessage communication layer\r\n\t     * @param {IServiceConfiguration} [config={}]\r\n\t     */\r\n\t    function Service(hpmFactory, wpmpFactory, routerFactory, config) {\r\n\t        var _this = this;\r\n\t        if (config === void 0) { config = {}; }\r\n\t        this.wpmp = wpmpFactory(config.wpmpName, config.logMessages);\r\n\t        this.hpm = hpmFactory(this.wpmp, null, config.version, config.type);\r\n\t        this.router = routerFactory(this.wpmp);\r\n\t        this.uniqueSessionId = utils.generateUUID();\r\n\t        /**\r\n\t         * Adds handler for report events.\r\n\t         */\r\n\t        this.router.post(\"/reports/:uniqueId/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'report',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        this.router.post(\"/reports/:uniqueId/pages/:pageName/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'report',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        this.router.post(\"/reports/:uniqueId/pages/:pageName/visuals/:visualName/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'report',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        this.router.post(\"/dashboards/:uniqueId/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'dashboard',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        this.router.post(\"/tile/:uniqueId/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'tile',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        /**\r\n\t         * Adds handler for Q&A events.\r\n\t         */\r\n\t        this.router.post(\"/qna/:uniqueId/events/:eventName\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'qna',\r\n\t                id: req.params.uniqueId,\r\n\t                name: req.params.eventName,\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        /**\r\n\t         * Adds handler for front load 'ready' message.\r\n\t         */\r\n\t        this.router.post(\"/ready/:uniqueId\", function (req, res) {\r\n\t            var event = {\r\n\t                type: 'report',\r\n\t                id: req.params.uniqueId,\r\n\t                name: 'ready',\r\n\t                value: req.body\r\n\t            };\r\n\t            _this.handleEvent(event);\r\n\t        });\r\n\t        this.embeds = [];\r\n\t        // TODO: Change when Object.assign is available.\r\n\t        this.config = utils.assign({}, Service.defaultConfig, config);\r\n\t        if (this.config.autoEmbedOnContentLoaded) {\r\n\t            this.enableAutoEmbed();\r\n\t        }\r\n\t    }\r\n\t    /**\r\n\t     * Creates new report\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IEmbedConfiguration} [config={}]\r\n\t     * @returns {embed.Embed}\r\n\t     */\r\n\t    Service.prototype.createReport = function (element, config) {\r\n\t        config.type = 'create';\r\n\t        var powerBiElement = element;\r\n\t        var component = new create_1.Create(this, powerBiElement, config);\r\n\t        powerBiElement.powerBiEmbed = component;\r\n\t        this.addOrOverwriteEmbed(component, element);\r\n\t        return component;\r\n\t    };\r\n\t    /**\r\n\t     * TODO: Add a description here\r\n\t     *\r\n\t     * @param {HTMLElement} [container]\r\n\t     * @param {embed.IEmbedConfiguration} [config=undefined]\r\n\t     * @returns {embed.Embed[]}\r\n\t     */\r\n\t    Service.prototype.init = function (container, config) {\r\n\t        var _this = this;\r\n\t        if (config === void 0) { config = undefined; }\r\n\t        container = (container && container instanceof HTMLElement) ? container : document.body;\r\n\t        var elements = Array.prototype.slice.call(container.querySelectorAll(\"[\" + embed.Embed.embedUrlAttribute + \"]\"));\r\n\t        return elements.map(function (element) { return _this.embed(element, config); });\r\n\t    };\r\n\t    /**\r\n\t     * Given a configuration based on an HTML element,\r\n\t     * if the component has already been created and attached to the element, reuses the component instance and existing iframe,\r\n\t     * otherwise creates a new component instance.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IEmbedConfigurationBase} [config={}]\r\n\t     * @returns {embed.Embed}\r\n\t     */\r\n\t    Service.prototype.embed = function (element, config) {\r\n\t        if (config === void 0) { config = {}; }\r\n\t        return this.embedInternal(element, config);\r\n\t    };\r\n\t    /**\r\n\t     * Given a configuration based on an HTML element,\r\n\t     * if the component has already been created and attached to the element, reuses the component instance and existing iframe,\r\n\t     * otherwise creates a new component instance.\r\n\t     * This is used for the phased embedding API, once element is loaded successfully, one can call 'render' on it.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IEmbedConfigurationBase} [config={}]\r\n\t     * @returns {embed.Embed}\r\n\t     */\r\n\t    Service.prototype.load = function (element, config) {\r\n\t        if (config === void 0) { config = {}; }\r\n\t        return this.embedInternal(element, config, /* phasedRender */ true);\r\n\t    };\r\n\t    Service.prototype.embedInternal = function (element, config, phasedRender) {\r\n\t        if (config === void 0) { config = {}; }\r\n\t        var component;\r\n\t        var powerBiElement = element;\r\n\t        if (powerBiElement.powerBiEmbed) {\r\n\t            component = this.embedExisting(powerBiElement, config, phasedRender);\r\n\t        }\r\n\t        else {\r\n\t            component = this.embedNew(powerBiElement, config, phasedRender);\r\n\t        }\r\n\t        return component;\r\n\t    };\r\n\t    Service.prototype.getNumberOfComponents = function () {\r\n\t        if (!this.embeds) {\r\n\t            return 0;\r\n\t        }\r\n\t        return this.embeds.length;\r\n\t    };\r\n\t    Service.prototype.getSdkSessionId = function () {\r\n\t        return this.uniqueSessionId;\r\n\t    };\r\n\t    /**\r\n\t     * Given a configuration based on a Power BI element, saves the component instance that reference the element for later lookup.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {IPowerBiElement} element\r\n\t     * @param {embed.IEmbedConfigurationBase} config\r\n\t     * @returns {embed.Embed}\r\n\t     */\r\n\t    Service.prototype.embedNew = function (element, config, phasedRender) {\r\n\t        var componentType = config.type || element.getAttribute(embed.Embed.typeAttribute);\r\n\t        if (!componentType) {\r\n\t            throw new Error(\"Attempted to embed using config \" + JSON.stringify(config) + \" on element \" + element.outerHTML + \", but could not determine what type of component to embed. You must specify a type in the configuration or as an attribute such as '\" + embed.Embed.typeAttribute + \"=\\\"\" + report_1.Report.type.toLowerCase() + \"\\\"'.\");\r\n\t        }\r\n\t        // Saves the type as part of the configuration so that it can be referenced later at a known location.\r\n\t        config.type = componentType;\r\n\t        var Component = utils.find(function (component) { return componentType === component.type.toLowerCase(); }, Service.components);\r\n\t        if (!Component) {\r\n\t            throw new Error(\"Attempted to embed component of type: \" + componentType + \" but did not find any matching component.  Please verify the type you specified is intended.\");\r\n\t        }\r\n\t        var component = new Component(this, element, config, phasedRender);\r\n\t        element.powerBiEmbed = component;\r\n\t        this.addOrOverwriteEmbed(component, element);\r\n\t        return component;\r\n\t    };\r\n\t    /**\r\n\t     * Given an element that already contains an embed component, load with a new configuration.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {IPowerBiElement} element\r\n\t     * @param {embed.IEmbedConfigurationBase} config\r\n\t     * @returns {embed.Embed}\r\n\t     */\r\n\t    Service.prototype.embedExisting = function (element, config, phasedRender) {\r\n\t        var component = utils.find(function (x) { return x.element === element; }, this.embeds);\r\n\t        if (!component) {\r\n\t            throw new Error(\"Attempted to embed using config \" + JSON.stringify(config) + \" on element \" + element.outerHTML + \" which already has embedded comopnent associated, but could not find the existing comopnent in the list of active components. This could indicate the embeds list is out of sync with the DOM, or the component is referencing the incorrect HTML element.\");\r\n\t        }\r\n\t        // TODO: Multiple embedding to the same iframe is not supported in QnA\r\n\t        if (config.type && config.type.toLowerCase() === \"qna\") {\r\n\t            return this.embedNew(element, config);\r\n\t        }\r\n\t        /**\r\n\t         * TODO: Dynamic embed type switching could be supported but there is work needed to prepare the service state and DOM cleanup.\r\n\t         * remove all event handlers from the DOM, then reset the element to initial state which removes iframe, and removes from list of embeds\r\n\t         * then we can call the embedNew function which would allow setting the proper embedUrl and construction of object based on the new type.\r\n\t         */\r\n\t        if (typeof config.type === \"string\" && config.type !== component.config.type) {\r\n\t            /**\r\n\t             * When loading report after create we want to use existing Iframe to optimize load period\r\n\t             */\r\n\t            if (config.type === \"report\" && component.config.type === \"create\") {\r\n\t                var report = new report_1.Report(this, element, config, /* phasedRender */ false, element.powerBiEmbed.iframe);\r\n\t                report.load(config);\r\n\t                element.powerBiEmbed = report;\r\n\t                this.addOrOverwriteEmbed(component, element);\r\n\t                return report;\r\n\t            }\r\n\t            throw new Error(\"Embedding on an existing element with a different type than the previous embed object is not supported.  Attempted to embed using config \" + JSON.stringify(config) + \" on element \" + element.outerHTML + \", but the existing element contains an embed of type: \" + this.config.type + \" which does not match the new type: \" + config.type);\r\n\t        }\r\n\t        component.populateConfig(config);\r\n\t        component.load(config, phasedRender);\r\n\t        return component;\r\n\t    };\r\n\t    /**\r\n\t     * Adds an event handler for DOMContentLoaded, which searches the DOM for elements that have the 'powerbi-embed-url' attribute,\r\n\t     * and automatically attempts to embed a powerbi component based on information from other powerbi-* attributes.\r\n\t     *\r\n\t     * Note: Only runs if `config.autoEmbedOnContentLoaded` is true when the service is created.\r\n\t     * This handler is typically useful only for applications that are rendered on the server so that all required data is available when the handler is called.\r\n\t     */\r\n\t    Service.prototype.enableAutoEmbed = function () {\r\n\t        var _this = this;\r\n\t        window.addEventListener('DOMContentLoaded', function (event) { return _this.init(document.body); }, false);\r\n\t    };\r\n\t    /**\r\n\t     * Returns an instance of the component associated with the element.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @returns {(Report | Tile)}\r\n\t     */\r\n\t    Service.prototype.get = function (element) {\r\n\t        var powerBiElement = element;\r\n\t        if (!powerBiElement.powerBiEmbed) {\r\n\t            throw new Error(\"You attempted to get an instance of powerbi component associated with element: \" + element.outerHTML + \" but there was no associated instance.\");\r\n\t        }\r\n\t        return powerBiElement.powerBiEmbed;\r\n\t    };\r\n\t    /**\r\n\t     * Finds an embed instance by the name or unique ID that is provided.\r\n\t     *\r\n\t     * @param {string} uniqueId\r\n\t     * @returns {(Report | Tile)}\r\n\t     */\r\n\t    Service.prototype.find = function (uniqueId) {\r\n\t        return utils.find(function (x) { return x.config.uniqueId === uniqueId; }, this.embeds);\r\n\t    };\r\n\t    Service.prototype.addOrOverwriteEmbed = function (component, element) {\r\n\t        // remove embeds over the same div element.\r\n\t        this.embeds = this.embeds.filter(function (embed) {\r\n\t            return embed.element.id !== element.id;\r\n\t        });\r\n\t        this.embeds.push(component);\r\n\t    };\r\n\t    /**\r\n\t     * Given an HTML element that has a component embedded within it, removes the component from the list of embedded components, removes the association between the element and the component, and removes the iframe.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Service.prototype.reset = function (element) {\r\n\t        var powerBiElement = element;\r\n\t        if (!powerBiElement.powerBiEmbed) {\r\n\t            return;\r\n\t        }\r\n\t        /** Removes the element frontLoad listener if exists. */\r\n\t        var embedElement = powerBiElement.powerBiEmbed;\r\n\t        if (embedElement.frontLoadHandler) {\r\n\t            embedElement.element.removeEventListener('ready', embedElement.frontLoadHandler, false);\r\n\t        }\r\n\t        /** Removes the component from an internal list of components. */\r\n\t        utils.remove(function (x) { return x === powerBiElement.powerBiEmbed; }, this.embeds);\r\n\t        /** Deletes a property from the HTML element. */\r\n\t        delete powerBiElement.powerBiEmbed;\r\n\t        /** Removes the iframe from the element. */\r\n\t        var iframe = element.querySelector('iframe');\r\n\t        if (iframe) {\r\n\t            if (iframe.remove !== undefined) {\r\n\t                iframe.remove();\r\n\t            }\r\n\t            else {\r\n\t                /** Workaround for IE: unhandled rejection TypeError: object doesn't support propert or method 'remove' */\r\n\t                iframe.parentElement.removeChild(iframe);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * handles tile events\r\n\t     *\r\n\t     * @param {IEvent<any>} event\r\n\t     */\r\n\t    Service.prototype.handleTileEvents = function (event) {\r\n\t        if (event.type === 'tile') {\r\n\t            this.handleEvent(event);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Given an event object, finds the embed component with the matching type and ID, and invokes its handleEvent method with the event object.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {IEvent<any>} event\r\n\t     */\r\n\t    Service.prototype.handleEvent = function (event) {\r\n\t        var embed = utils.find(function (embed) {\r\n\t            return (embed.config.uniqueId === event.id);\r\n\t        }, this.embeds);\r\n\t        if (embed) {\r\n\t            var value = event.value;\r\n\t            if (event.name === 'pageChanged') {\r\n\t                var pageKey = 'newPage';\r\n\t                var page = value[pageKey];\r\n\t                if (!page) {\r\n\t                    throw new Error(\"Page model not found at 'event.value.\" + pageKey + \"'.\");\r\n\t                }\r\n\t                value[pageKey] = new page_1.Page(embed, page.name, page.displayName, true /* isActive */);\r\n\t            }\r\n\t            utils.raiseCustomEvent(embed.element, event.name, value);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * API for warm starting powerbi embedded endpoints.\r\n\t     * Use this API to preload Power BI Embedded in the background.\r\n\t     *\r\n\t     * @public\r\n\t     * @param {embed.IEmbedConfigurationBase} [config={}]\r\n\t     * @param {HTMLElement} [element=undefined]\r\n\t     */\r\n\t    Service.prototype.preload = function (config, element) {\r\n\t        var iframeContent = document.createElement(\"iframe\");\r\n\t        iframeContent.setAttribute(\"style\", \"display:none;\");\r\n\t        iframeContent.setAttribute(\"src\", config.embedUrl);\r\n\t        iframeContent.setAttribute(\"scrolling\", \"no\");\r\n\t        iframeContent.setAttribute(\"allowfullscreen\", \"false\");\r\n\t        var node = element;\r\n\t        if (!node) {\r\n\t            node = document.getElementsByTagName(\"body\")[0];\r\n\t        }\r\n\t        node.appendChild(iframeContent);\r\n\t        iframeContent.onload = function () {\r\n\t            utils.raiseCustomEvent(iframeContent, \"preloaded\", {});\r\n\t        };\r\n\t        return iframeContent;\r\n\t    };\r\n\t    /**\r\n\t     * A list of components that this service can embed\r\n\t     */\r\n\t    Service.components = [\r\n\t        tile_1.Tile,\r\n\t        report_1.Report,\r\n\t        dashboard_1.Dashboard,\r\n\t        qna_1.Qna,\r\n\t        visual_1.Visual\r\n\t    ];\r\n\t    /**\r\n\t     * The default configuration for the service\r\n\t     */\r\n\t    Service.defaultConfig = {\r\n\t        autoEmbedOnContentLoaded: false,\r\n\t        onError: function () {\r\n\t            var args = [];\r\n\t            for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                args[_i - 0] = arguments[_i];\r\n\t            }\r\n\t            return console.log(args[0], args.slice(1));\r\n\t        }\r\n\t    };\r\n\t    Service.DefaultInitEmbedUrl = \"http://app.powerbi.com/reportEmbed\";\r\n\t    return Service;\r\n\t}());\r\n\texports.Service = Service;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar utils = __webpack_require__(3);\r\n\tvar models = __webpack_require__(4);\r\n\t/**\r\n\t * Base class for all Power BI embed components\r\n\t *\r\n\t * @export\r\n\t * @abstract\r\n\t * @class Embed\r\n\t */\r\n\tvar Embed = (function () {\r\n\t    /**\r\n\t     * Creates an instance of Embed.\r\n\t     *\r\n\t     * Note: there is circular reference between embeds and the service, because\r\n\t     * the service has a list of all embeds on the host page, and each embed has a reference to the service that created it.\r\n\t     *\r\n\t     * @param {service.Service} service\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {IEmbedConfigurationBase} config\r\n\t     */\r\n\t    function Embed(service, element, config, iframe, phasedRender) {\r\n\t        this.allowedEvents = [];\r\n\t        Array.prototype.push.apply(this.allowedEvents, Embed.allowedEvents);\r\n\t        this.eventHandlers = [];\r\n\t        this.service = service;\r\n\t        this.element = element;\r\n\t        this.iframe = iframe;\r\n\t        this.embeType = config.type.toLowerCase();\r\n\t        this.populateConfig(config);\r\n\t        if (this.embeType === 'create') {\r\n\t            this.setIframe(false /*set EventListener to call create() on 'load' event*/);\r\n\t        }\r\n\t        else {\r\n\t            this.setIframe(true /*set EventListener to call load() on 'load' event*/, phasedRender);\r\n\t        }\r\n\t    }\r\n\t    /**\r\n\t     * Sends createReport configuration data.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * createReport({\r\n\t     *   datasetId: '5dac7a4a-4452-46b3-99f6-a25915e0fe55',\r\n\t     *   accessToken: 'eyJ0eXA ... TaE2rTSbmg',\r\n\t     * ```\r\n\t     *\r\n\t     * @param {models.IReportCreateConfiguration} config\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Embed.prototype.createReport = function (config) {\r\n\t        var errors = models.validateCreateReport(config);\r\n\t        if (errors) {\r\n\t            throw errors;\r\n\t        }\r\n\t        return this.service.hpm.post(\"/report/create\", config, { uid: this.config.uniqueId, sdkSessionId: this.service.getSdkSessionId() }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Saves Report.\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Embed.prototype.save = function () {\r\n\t        return this.service.hpm.post('/report/save', null, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * SaveAs Report.\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Embed.prototype.saveAs = function (saveAsParameters) {\r\n\t        return this.service.hpm.post('/report/saveAs', saveAsParameters, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Sends load configuration data.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.load({\r\n\t     *   type: 'report',\r\n\t     *   id: '5dac7a4a-4452-46b3-99f6-a25915e0fe55',\r\n\t     *   accessToken: 'eyJ0eXA ... TaE2rTSbmg',\r\n\t     *   settings: {\r\n\t     *     navContentPaneEnabled: false\r\n\t     *   },\r\n\t     *   pageName: \"DefaultPage\",\r\n\t     *   filters: [\r\n\t     *     {\r\n\t     *        ...  DefaultReportFilter ...\r\n\t     *     }\r\n\t     *   ]\r\n\t     * })\r\n\t     *   .catch(error => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {models.ILoadConfiguration} config\r\n\t     * @param {boolean} phasedRender\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Embed.prototype.load = function (config, phasedRender) {\r\n\t        var _this = this;\r\n\t        var path = phasedRender && config.type === 'report' ? this.phasedLoadPath : this.loadPath;\r\n\t        return this.service.hpm.post(path, config, { uid: this.config.uniqueId, sdkSessionId: this.service.getSdkSessionId() }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            utils.assign(_this.config, config);\r\n\t            return response.body;\r\n\t        }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Removes one or more event handlers from the list of handlers.\r\n\t     * If a reference to the existing handle function is specified, remove the specific handler.\r\n\t     * If the handler is not specified, remove all handlers for the event name specified.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.off('pageChanged')\r\n\t     *\r\n\t     * or\r\n\t     *\r\n\t     * const logHandler = function (event) {\r\n\t     *    console.log(event);\r\n\t     * };\r\n\t     *\r\n\t     * report.off('pageChanged', logHandler);\r\n\t     * ```\r\n\t     *\r\n\t     * @template T\r\n\t     * @param {string} eventName\r\n\t     * @param {service.IEventHandler<T>} [handler]\r\n\t     */\r\n\t    Embed.prototype.off = function (eventName, handler) {\r\n\t        var _this = this;\r\n\t        var fakeEvent = { name: eventName, type: null, id: null, value: null };\r\n\t        if (handler) {\r\n\t            utils.remove(function (eventHandler) { return eventHandler.test(fakeEvent) && (eventHandler.handle === handler); }, this.eventHandlers);\r\n\t            this.element.removeEventListener(eventName, handler);\r\n\t        }\r\n\t        else {\r\n\t            var eventHandlersToRemove = this.eventHandlers\r\n\t                .filter(function (eventHandler) { return eventHandler.test(fakeEvent); });\r\n\t            eventHandlersToRemove\r\n\t                .forEach(function (eventHandlerToRemove) {\r\n\t                utils.remove(function (eventHandler) { return eventHandler === eventHandlerToRemove; }, _this.eventHandlers);\r\n\t                _this.element.removeEventListener(eventName, eventHandlerToRemove.handle);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Adds an event handler for a specific event.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.on('pageChanged', (event) => {\r\n\t     *   console.log('PageChanged: ', event.page.name);\r\n\t     * });\r\n\t     * ```\r\n\t     *\r\n\t     * @template T\r\n\t     * @param {string} eventName\r\n\t     * @param {service.IEventHandler<T>} handler\r\n\t     */\r\n\t    Embed.prototype.on = function (eventName, handler) {\r\n\t        if (this.allowedEvents.indexOf(eventName) === -1) {\r\n\t            throw new Error(\"eventName is must be one of \" + this.allowedEvents + \". You passed: \" + eventName);\r\n\t        }\r\n\t        this.eventHandlers.push({\r\n\t            test: function (event) { return event.name === eventName; },\r\n\t            handle: handler\r\n\t        });\r\n\t        this.element.addEventListener(eventName, handler);\r\n\t    };\r\n\t    /**\r\n\t     * Reloads embed using existing configuration.\r\n\t     * E.g. For reports this effectively clears all filters and makes the first page active which simulates resetting a report back to loaded state.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.reload();\r\n\t     * ```\r\n\t     */\r\n\t    Embed.prototype.reload = function () {\r\n\t        return this.load(this.config);\r\n\t    };\r\n\t    /**\r\n\t     * Set accessToken.\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Embed.prototype.setAccessToken = function (accessToken) {\r\n\t        var _this = this;\r\n\t        var embedType = this.config.type;\r\n\t        embedType = (embedType === 'create' || embedType === 'visual' || embedType === 'qna') ? 'report' : embedType;\r\n\t        return this.service.hpm.post('/' + embedType + '/token', accessToken, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            _this.config.accessToken = accessToken;\r\n\t            _this.element.setAttribute(Embed.accessTokenAttribute, accessToken);\r\n\t            _this.service.accessToken = accessToken;\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Gets an access token from the first available location: config, attribute, global.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {string} globalAccessToken\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Embed.prototype.getAccessToken = function (globalAccessToken) {\r\n\t        var accessToken = this.config.accessToken || this.element.getAttribute(Embed.accessTokenAttribute) || globalAccessToken;\r\n\t        if (!accessToken) {\r\n\t            throw new Error(\"No access token was found for element. You must specify an access token directly on the element using attribute '\" + Embed.accessTokenAttribute + \"' or specify a global token at: powerbi.accessToken.\");\r\n\t        }\r\n\t        return accessToken;\r\n\t    };\r\n\t    /**\r\n\t     * Populate config for create and load\r\n\t     *\r\n\t     * @param {IEmbedConfiguration}\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Embed.prototype.populateConfig = function (config) {\r\n\t        this.config = config;\r\n\t        // TODO: Change when Object.assign is available.\r\n\t        this.config.uniqueId = this.getUniqueId();\r\n\t        this.config.embedUrl = this.getEmbedUrl();\r\n\t        this.config.accessToken = this.getAccessToken(this.service.accessToken);\r\n\t        this.config.groupId = this.getGroupId();\r\n\t        this.addLocaleToEmbedUrl(config);\r\n\t    };\r\n\t    /**\r\n\t     * Adds locale parameters to embedUrl\r\n\t     *\r\n\t     * @private\r\n\t     * @param {IEmbedConfiguration} config\r\n\t     */\r\n\t    Embed.prototype.addLocaleToEmbedUrl = function (config) {\r\n\t        if (!config.settings) {\r\n\t            return;\r\n\t        }\r\n\t        var localeSettings = config.settings.localeSettings;\r\n\t        if (localeSettings && localeSettings.language) {\r\n\t            this.config.embedUrl = utils.addParamToUrl(this.config.embedUrl, 'language', localeSettings.language);\r\n\t        }\r\n\t        if (localeSettings && localeSettings.formatLocale) {\r\n\t            this.config.embedUrl = utils.addParamToUrl(this.config.embedUrl, 'formatLocale', localeSettings.formatLocale);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Gets an embed url from the first available location: options, attribute.\r\n\t     *\r\n\t     * @private\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Embed.prototype.getEmbedUrl = function () {\r\n\t        var embedUrl = this.config.embedUrl || this.element.getAttribute(Embed.embedUrlAttribute);\r\n\t        if (typeof embedUrl !== 'string' || embedUrl.length === 0) {\r\n\t            throw new Error(\"Embed Url is required, but it was not found. You must provide an embed url either as part of embed configuration or as attribute '\" + Embed.embedUrlAttribute + \"'.\");\r\n\t        }\r\n\t        return embedUrl;\r\n\t    };\r\n\t    /**\r\n\t     * Gets a unique ID from the first available location: options, attribute.\r\n\t     * If neither is provided generate a unique string.\r\n\t     *\r\n\t     * @private\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Embed.prototype.getUniqueId = function () {\r\n\t        return this.config.uniqueId || this.element.getAttribute(Embed.nameAttribute) || utils.createRandomString();\r\n\t    };\r\n\t    /**\r\n\t     * Gets the group ID from the first available location: options, embeddedUrl.\r\n\t     *\r\n\t     * @private\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Embed.prototype.getGroupId = function () {\r\n\t        return this.config.groupId || Embed.findGroupIdFromEmbedUrl(this.config.embedUrl);\r\n\t    };\r\n\t    /**\r\n\t     * Requests the browser to render the component's iframe in fullscreen mode.\r\n\t     */\r\n\t    Embed.prototype.fullscreen = function () {\r\n\t        var requestFullScreen = this.iframe.requestFullscreen || this.iframe.msRequestFullscreen || this.iframe.mozRequestFullScreen || this.iframe.webkitRequestFullscreen;\r\n\t        requestFullScreen.call(this.iframe);\r\n\t    };\r\n\t    /**\r\n\t     * Requests the browser to exit fullscreen mode.\r\n\t     */\r\n\t    Embed.prototype.exitFullscreen = function () {\r\n\t        if (!this.isFullscreen(this.iframe)) {\r\n\t            return;\r\n\t        }\r\n\t        var exitFullscreen = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen || document.msExitFullscreen;\r\n\t        exitFullscreen.call(document);\r\n\t    };\r\n\t    /**\r\n\t     * Returns true if the iframe is rendered in fullscreen mode,\r\n\t     * otherwise returns false.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {HTMLIFrameElement} iframe\r\n\t     * @returns {boolean}\r\n\t     */\r\n\t    Embed.prototype.isFullscreen = function (iframe) {\r\n\t        var options = ['fullscreenElement', 'webkitFullscreenElement', 'mozFullscreenScreenElement', 'msFullscreenElement'];\r\n\t        return options.some(function (option) { return document[option] === iframe; });\r\n\t    };\r\n\t    /**\r\n\t     * Sets Iframe for embed\r\n\t     */\r\n\t    Embed.prototype.setIframe = function (isLoad, phasedRender) {\r\n\t        var _this = this;\r\n\t        if (!this.iframe) {\r\n\t            var iframeContent = document.createElement(\"iframe\");\r\n\t            var embedUrl = this.config.uniqueId ? utils.addParamToUrl(this.config.embedUrl, 'uid', this.config.uniqueId) : this.config.embedUrl;\r\n\t            iframeContent.style.width = '100%';\r\n\t            iframeContent.style.height = '100%';\r\n\t            iframeContent.setAttribute(\"src\", embedUrl);\r\n\t            iframeContent.setAttribute(\"scrolling\", \"no\");\r\n\t            iframeContent.setAttribute(\"allowfullscreen\", \"true\");\r\n\t            var node = this.element;\r\n\t            while (node.firstChild) {\r\n\t                node.removeChild(node.firstChild);\r\n\t            }\r\n\t            node.appendChild(iframeContent);\r\n\t            this.iframe = node.firstChild;\r\n\t        }\r\n\t        if (isLoad) {\r\n\t            var errors = this.validate(this.config);\r\n\t            if (errors) {\r\n\t                throw errors;\r\n\t            }\r\n\t            this.iframe.addEventListener('load', function () { return _this.load(_this.config, phasedRender); }, false);\r\n\t            if (this.service.getNumberOfComponents() <= Embed.maxFrontLoadTimes) {\r\n\t                this.frontLoadHandler = function () { return _this.frontLoadSendConfig(_this.config); };\r\n\t                // 'ready' event is fired by the embedded element (not by the iframe)\r\n\t                this.element.addEventListener('ready', this.frontLoadHandler, false);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.iframe.addEventListener('load', function () { return _this.createReport(_this.createConfig); }, false);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Sets Iframe's title\r\n\t     */\r\n\t    Embed.prototype.setComponentTitle = function (title) {\r\n\t        if (!this.iframe) {\r\n\t            return;\r\n\t        }\r\n\t        if (title == null) {\r\n\t            this.iframe.removeAttribute(\"title\");\r\n\t        }\r\n\t        else {\r\n\t            this.iframe.setAttribute(\"title\", title);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Sets element's tabindex attribute\r\n\t     */\r\n\t    Embed.prototype.setComponentTabIndex = function (tabIndex) {\r\n\t        if (!this.element) {\r\n\t            return;\r\n\t        }\r\n\t        this.element.setAttribute(\"tabindex\", (tabIndex == null) ? \"0\" : tabIndex.toString());\r\n\t    };\r\n\t    /**\r\n\t     * Removes element's tabindex attribute\r\n\t     */\r\n\t    Embed.prototype.removeComponentTabIndex = function (tabIndex) {\r\n\t        if (!this.element) {\r\n\t            return;\r\n\t        }\r\n\t        this.element.removeAttribute(\"tabindex\");\r\n\t    };\r\n\t    /**\r\n\t     * Adds the ability to get groupId from url.\r\n\t     * By extracting the ID we can ensure that the ID is always explicitly provided as part of the load configuration.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {string} url\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Embed.findGroupIdFromEmbedUrl = function (url) {\r\n\t        var groupIdRegEx = /groupId=\"?([^&]+)\"?/;\r\n\t        var groupIdMatch = url.match(groupIdRegEx);\r\n\t        var groupId;\r\n\t        if (groupIdMatch) {\r\n\t            groupId = groupIdMatch[1];\r\n\t        }\r\n\t        return groupId;\r\n\t    };\r\n\t    /**\r\n\t     * Sends the config for front load calls, after 'ready' message is received from the iframe\r\n\t     */\r\n\t    Embed.prototype.frontLoadSendConfig = function (config) {\r\n\t        var errors = this.validate(config);\r\n\t        if (errors) {\r\n\t            throw errors;\r\n\t        }\r\n\t        // contentWindow must be initialized\r\n\t        if (this.iframe.contentWindow == null)\r\n\t            return;\r\n\t        return this.service.hpm.post(\"/frontload/config\", config, { uid: this.config.uniqueId }, this.iframe.contentWindow).then(function (response) {\r\n\t            return response.body;\r\n\t        }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    Embed.allowedEvents = [\"loaded\", \"saved\", \"rendered\", \"saveAsTriggered\", \"error\", \"dataSelected\", \"buttonClicked\"];\r\n\t    Embed.accessTokenAttribute = 'powerbi-access-token';\r\n\t    Embed.embedUrlAttribute = 'powerbi-embed-url';\r\n\t    Embed.nameAttribute = 'powerbi-name';\r\n\t    Embed.typeAttribute = 'powerbi-type';\r\n\t    Embed.maxFrontLoadTimes = 2;\r\n\t    return Embed;\r\n\t}());\r\n\texports.Embed = Embed;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Raises a custom event with event data on the specified HTML element.\r\n\t *\r\n\t * @export\r\n\t * @param {HTMLElement} element\r\n\t * @param {string} eventName\r\n\t * @param {*} eventData\r\n\t */\r\n\tfunction raiseCustomEvent(element, eventName, eventData) {\r\n\t    var customEvent;\r\n\t    if (typeof CustomEvent === 'function') {\r\n\t        customEvent = new CustomEvent(eventName, {\r\n\t            detail: eventData,\r\n\t            bubbles: true,\r\n\t            cancelable: true\r\n\t        });\r\n\t    }\r\n\t    else {\r\n\t        customEvent = document.createEvent('CustomEvent');\r\n\t        customEvent.initCustomEvent(eventName, true, true, eventData);\r\n\t    }\r\n\t    element.dispatchEvent(customEvent);\r\n\t}\r\n\texports.raiseCustomEvent = raiseCustomEvent;\r\n\t/**\r\n\t * Finds the index of the first value in an array that matches the specified predicate.\r\n\t *\r\n\t * @export\r\n\t * @template T\r\n\t * @param {(x: T) => boolean} predicate\r\n\t * @param {T[]} xs\r\n\t * @returns {number}\r\n\t */\r\n\tfunction findIndex(predicate, xs) {\r\n\t    if (!Array.isArray(xs)) {\r\n\t        throw new Error(\"You attempted to call find with second parameter that was not an array. You passed: \" + xs);\r\n\t    }\r\n\t    var index;\r\n\t    xs.some(function (x, i) {\r\n\t        if (predicate(x)) {\r\n\t            index = i;\r\n\t            return true;\r\n\t        }\r\n\t    });\r\n\t    return index;\r\n\t}\r\n\texports.findIndex = findIndex;\r\n\t/**\r\n\t * Finds the first value in an array that matches the specified predicate.\r\n\t *\r\n\t * @export\r\n\t * @template T\r\n\t * @param {(x: T) => boolean} predicate\r\n\t * @param {T[]} xs\r\n\t * @returns {T}\r\n\t */\r\n\tfunction find(predicate, xs) {\r\n\t    var index = findIndex(predicate, xs);\r\n\t    return xs[index];\r\n\t}\r\n\texports.find = find;\r\n\tfunction remove(predicate, xs) {\r\n\t    var index = findIndex(predicate, xs);\r\n\t    xs.splice(index, 1);\r\n\t}\r\n\texports.remove = remove;\r\n\t// See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n\t// TODO: replace in favor of using polyfill\r\n\t/**\r\n\t * Copies the values of all enumerable properties from one or more source objects to a target object, and returns the target object.\r\n\t *\r\n\t * @export\r\n\t * @param {any} args\r\n\t * @returns\r\n\t */\r\n\tfunction assign() {\r\n\t    var args = [];\r\n\t    for (var _i = 0; _i < arguments.length; _i++) {\r\n\t        args[_i - 0] = arguments[_i];\r\n\t    }\r\n\t    var target = args[0];\r\n\t    'use strict';\r\n\t    if (target === undefined || target === null) {\r\n\t        throw new TypeError('Cannot convert undefined or null to object');\r\n\t    }\r\n\t    var output = Object(target);\r\n\t    for (var index = 1; index < arguments.length; index++) {\r\n\t        var source = arguments[index];\r\n\t        if (source !== undefined && source !== null) {\r\n\t            for (var nextKey in source) {\r\n\t                if (source.hasOwnProperty(nextKey)) {\r\n\t                    output[nextKey] = source[nextKey];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    return output;\r\n\t}\r\n\texports.assign = assign;\r\n\t/**\r\n\t * Generates a random 7 character string.\r\n\t *\r\n\t * @export\r\n\t * @returns {string}\r\n\t */\r\n\tfunction createRandomString() {\r\n\t    return (Math.random() + 1).toString(36).substring(7);\r\n\t}\r\n\texports.createRandomString = createRandomString;\r\n\t/**\r\n\t * Generates a 20 charachter uuid.\r\n\t *\r\n\t * @export\r\n\t * @returns {string}\r\n\t */\r\n\tfunction generateUUID() {\r\n\t    var d = new Date().getTime();\r\n\t    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\r\n\t        d += performance.now();\r\n\t    }\r\n\t    return 'xxxxxxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n\t        // Generate a random number, scaled from 0 to 16.\r\n\t        // Bitwise-and by 15 since we only care about the last 4 bits.\r\n\t        var r = (d + Math.random() * 16) & 15 | 0;\r\n\t        // Shift 4 times to divide by 16\r\n\t        d >>= 4;\r\n\t        return r.toString(16);\r\n\t    });\r\n\t}\r\n\texports.generateUUID = generateUUID;\r\n\t/**\r\n\t * Adds a parameter to the given url\r\n\t *\r\n\t * @export\r\n\t * @param {string} url\r\n\t * @param {string} paramName\r\n\t * @param {string} value\r\n\t * @returns {string}\r\n\t */\r\n\tfunction addParamToUrl(url, paramName, value) {\r\n\t    var parameterPrefix = url.indexOf('?') > 0 ? '&' : '?';\r\n\t    url += parameterPrefix + paramName + '=' + value;\r\n\t    return url;\r\n\t}\r\n\texports.addParamToUrl = addParamToUrl;\r\n\t/**\r\n\t * Checks if the report is saved.\r\n\t *\r\n\t * @export\r\n\t * @param {HttpPostMessage} hpm\r\n\t * @param {string} uid\r\n\t * @param {Window} contentWindow\r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tfunction isSavedInternal(hpm, uid, contentWindow) {\r\n\t    return hpm.get('/report/hasUnsavedChanges', { uid: uid }, contentWindow)\r\n\t        .then(function (response) { return !response.body; }, function (response) {\r\n\t        throw response.body;\r\n\t    });\r\n\t}\r\n\texports.isSavedInternal = isSavedInternal;\r\n\t/**\r\n\t * Checks if the embed url is for RDL report.\r\n\t *\r\n\t * @export\r\n\t  * @param {string} embedUrl\r\n\t  * @returns {boolean}\r\n\t */\r\n\tfunction isRDLEmbed(embedUrl) {\r\n\t    return embedUrl.toLowerCase().indexOf(\"/rdlembed?\") >= 0;\r\n\t}\r\n\texports.isRDLEmbed = isRDLEmbed;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! powerbi-models v1.2.1 | (c) 2016 Microsoft Corporation MIT */\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse {}\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\texports.Validators = __webpack_require__(1).Validators;\r\n\t\tvar TraceType;\r\n\t\t(function (TraceType) {\r\n\t\t    TraceType[TraceType[\"Information\"] = 0] = \"Information\";\r\n\t\t    TraceType[TraceType[\"Verbose\"] = 1] = \"Verbose\";\r\n\t\t    TraceType[TraceType[\"Warning\"] = 2] = \"Warning\";\r\n\t\t    TraceType[TraceType[\"Error\"] = 3] = \"Error\";\r\n\t\t    TraceType[TraceType[\"ExpectedError\"] = 4] = \"ExpectedError\";\r\n\t\t    TraceType[TraceType[\"UnexpectedError\"] = 5] = \"UnexpectedError\";\r\n\t\t    TraceType[TraceType[\"Fatal\"] = 6] = \"Fatal\";\r\n\t\t})(TraceType = exports.TraceType || (exports.TraceType = {}));\r\n\t\tvar PageSizeType;\r\n\t\t(function (PageSizeType) {\r\n\t\t    PageSizeType[PageSizeType[\"Widescreen\"] = 0] = \"Widescreen\";\r\n\t\t    PageSizeType[PageSizeType[\"Standard\"] = 1] = \"Standard\";\r\n\t\t    PageSizeType[PageSizeType[\"Cortana\"] = 2] = \"Cortana\";\r\n\t\t    PageSizeType[PageSizeType[\"Letter\"] = 3] = \"Letter\";\r\n\t\t    PageSizeType[PageSizeType[\"Custom\"] = 4] = \"Custom\";\r\n\t\t})(PageSizeType = exports.PageSizeType || (exports.PageSizeType = {}));\r\n\t\tvar DisplayOption;\r\n\t\t(function (DisplayOption) {\r\n\t\t    DisplayOption[DisplayOption[\"FitToPage\"] = 0] = \"FitToPage\";\r\n\t\t    DisplayOption[DisplayOption[\"FitToWidth\"] = 1] = \"FitToWidth\";\r\n\t\t    DisplayOption[DisplayOption[\"ActualSize\"] = 2] = \"ActualSize\";\r\n\t\t})(DisplayOption = exports.DisplayOption || (exports.DisplayOption = {}));\r\n\t\tvar BackgroundType;\r\n\t\t(function (BackgroundType) {\r\n\t\t    BackgroundType[BackgroundType[\"Default\"] = 0] = \"Default\";\r\n\t\t    BackgroundType[BackgroundType[\"Transparent\"] = 1] = \"Transparent\";\r\n\t\t})(BackgroundType = exports.BackgroundType || (exports.BackgroundType = {}));\r\n\t\tvar VisualContainerDisplayMode;\r\n\t\t(function (VisualContainerDisplayMode) {\r\n\t\t    VisualContainerDisplayMode[VisualContainerDisplayMode[\"Visible\"] = 0] = \"Visible\";\r\n\t\t    VisualContainerDisplayMode[VisualContainerDisplayMode[\"Hidden\"] = 1] = \"Hidden\";\r\n\t\t})(VisualContainerDisplayMode = exports.VisualContainerDisplayMode || (exports.VisualContainerDisplayMode = {}));\r\n\t\tvar LayoutType;\r\n\t\t(function (LayoutType) {\r\n\t\t    LayoutType[LayoutType[\"Master\"] = 0] = \"Master\";\r\n\t\t    LayoutType[LayoutType[\"Custom\"] = 1] = \"Custom\";\r\n\t\t    LayoutType[LayoutType[\"MobilePortrait\"] = 2] = \"MobilePortrait\";\r\n\t\t    LayoutType[LayoutType[\"MobileLandscape\"] = 3] = \"MobileLandscape\";\r\n\t\t})(LayoutType = exports.LayoutType || (exports.LayoutType = {}));\r\n\t\tvar SectionVisibility;\r\n\t\t(function (SectionVisibility) {\r\n\t\t    SectionVisibility[SectionVisibility[\"AlwaysVisible\"] = 0] = \"AlwaysVisible\";\r\n\t\t    SectionVisibility[SectionVisibility[\"HiddenInViewMode\"] = 1] = \"HiddenInViewMode\";\r\n\t\t})(SectionVisibility = exports.SectionVisibility || (exports.SectionVisibility = {}));\r\n\t\tvar Permissions;\r\n\t\t(function (Permissions) {\r\n\t\t    Permissions[Permissions[\"Read\"] = 0] = \"Read\";\r\n\t\t    Permissions[Permissions[\"ReadWrite\"] = 1] = \"ReadWrite\";\r\n\t\t    Permissions[Permissions[\"Copy\"] = 2] = \"Copy\";\r\n\t\t    Permissions[Permissions[\"Create\"] = 4] = \"Create\";\r\n\t\t    Permissions[Permissions[\"All\"] = 7] = \"All\";\r\n\t\t})(Permissions = exports.Permissions || (exports.Permissions = {}));\r\n\t\tvar ViewMode;\r\n\t\t(function (ViewMode) {\r\n\t\t    ViewMode[ViewMode[\"View\"] = 0] = \"View\";\r\n\t\t    ViewMode[ViewMode[\"Edit\"] = 1] = \"Edit\";\r\n\t\t})(ViewMode = exports.ViewMode || (exports.ViewMode = {}));\r\n\t\tvar TokenType;\r\n\t\t(function (TokenType) {\r\n\t\t    TokenType[TokenType[\"Aad\"] = 0] = \"Aad\";\r\n\t\t    TokenType[TokenType[\"Embed\"] = 1] = \"Embed\";\r\n\t\t})(TokenType = exports.TokenType || (exports.TokenType = {}));\r\n\t\tvar MenuLocation;\r\n\t\t(function (MenuLocation) {\r\n\t\t    MenuLocation[MenuLocation[\"Bottom\"] = 0] = \"Bottom\";\r\n\t\t    MenuLocation[MenuLocation[\"Top\"] = 1] = \"Top\";\r\n\t\t})(MenuLocation = exports.MenuLocation || (exports.MenuLocation = {}));\r\n\t\tvar FiltersLevel;\r\n\t\t(function (FiltersLevel) {\r\n\t\t    FiltersLevel[FiltersLevel[\"Report\"] = 0] = \"Report\";\r\n\t\t    FiltersLevel[FiltersLevel[\"Page\"] = 1] = \"Page\";\r\n\t\t    FiltersLevel[FiltersLevel[\"Visual\"] = 2] = \"Visual\";\r\n\t\t})(FiltersLevel = exports.FiltersLevel || (exports.FiltersLevel = {}));\r\n\t\tvar FilterType;\r\n\t\t(function (FilterType) {\r\n\t\t    FilterType[FilterType[\"Advanced\"] = 0] = \"Advanced\";\r\n\t\t    FilterType[FilterType[\"Basic\"] = 1] = \"Basic\";\r\n\t\t    FilterType[FilterType[\"Unknown\"] = 2] = \"Unknown\";\r\n\t\t    FilterType[FilterType[\"IncludeExclude\"] = 3] = \"IncludeExclude\";\r\n\t\t    FilterType[FilterType[\"RelativeDate\"] = 4] = \"RelativeDate\";\r\n\t\t    FilterType[FilterType[\"TopN\"] = 5] = \"TopN\";\r\n\t\t    FilterType[FilterType[\"Tuple\"] = 6] = \"Tuple\";\r\n\t\t})(FilterType = exports.FilterType || (exports.FilterType = {}));\r\n\t\tvar RelativeDateFilterTimeUnit;\r\n\t\t(function (RelativeDateFilterTimeUnit) {\r\n\t\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"Days\"] = 0] = \"Days\";\r\n\t\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"Weeks\"] = 1] = \"Weeks\";\r\n\t\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"CalendarWeeks\"] = 2] = \"CalendarWeeks\";\r\n\t\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"Months\"] = 3] = \"Months\";\r\n\t\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"CalendarMonths\"] = 4] = \"CalendarMonths\";\r\n\t\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"Years\"] = 5] = \"Years\";\r\n\t\t    RelativeDateFilterTimeUnit[RelativeDateFilterTimeUnit[\"CalendarYears\"] = 6] = \"CalendarYears\";\r\n\t\t})(RelativeDateFilterTimeUnit = exports.RelativeDateFilterTimeUnit || (exports.RelativeDateFilterTimeUnit = {}));\r\n\t\tvar RelativeDateOperators;\r\n\t\t(function (RelativeDateOperators) {\r\n\t\t    RelativeDateOperators[RelativeDateOperators[\"InLast\"] = 0] = \"InLast\";\r\n\t\t    RelativeDateOperators[RelativeDateOperators[\"InThis\"] = 1] = \"InThis\";\r\n\t\t    RelativeDateOperators[RelativeDateOperators[\"InNext\"] = 2] = \"InNext\";\r\n\t\t})(RelativeDateOperators = exports.RelativeDateOperators || (exports.RelativeDateOperators = {}));\r\n\t\tvar Filter = /** @class */ (function () {\r\n\t\t    function Filter(target, filterType) {\r\n\t\t        this.target = target;\r\n\t\t        this.filterType = filterType;\r\n\t\t    }\r\n\t\t    Filter.prototype.toJSON = function () {\r\n\t\t        var filter = {\r\n\t\t            $schema: this.schemaUrl,\r\n\t\t            target: this.target,\r\n\t\t            filterType: this.filterType\r\n\t\t        };\r\n\t\t        // Add displaySettings only when defined\r\n\t\t        if (this.displaySettings !== undefined) {\r\n\t\t            filter.displaySettings = this.displaySettings;\r\n\t\t        }\r\n\t\t        return filter;\r\n\t\t    };\r\n\t\t    ;\r\n\t\t    return Filter;\r\n\t\t}());\r\n\t\texports.Filter = Filter;\r\n\t\tvar NotSupportedFilter = /** @class */ (function (_super) {\r\n\t\t    __extends(NotSupportedFilter, _super);\r\n\t\t    function NotSupportedFilter(target, message, notSupportedTypeName) {\r\n\t\t        var _this = _super.call(this, target, FilterType.Unknown) || this;\r\n\t\t        _this.message = message;\r\n\t\t        _this.notSupportedTypeName = notSupportedTypeName;\r\n\t\t        _this.schemaUrl = NotSupportedFilter.schemaUrl;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    NotSupportedFilter.prototype.toJSON = function () {\r\n\t\t        var filter = _super.prototype.toJSON.call(this);\r\n\t\t        filter.message = this.message;\r\n\t\t        filter.notSupportedTypeName = this.notSupportedTypeName;\r\n\t\t        return filter;\r\n\t\t    };\r\n\t\t    NotSupportedFilter.schemaUrl = \"http://powerbi.com/product/schema#notSupported\";\r\n\t\t    return NotSupportedFilter;\r\n\t\t}(Filter));\r\n\t\texports.NotSupportedFilter = NotSupportedFilter;\r\n\t\tvar IncludeExcludeFilter = /** @class */ (function (_super) {\r\n\t\t    __extends(IncludeExcludeFilter, _super);\r\n\t\t    function IncludeExcludeFilter(target, isExclude, values) {\r\n\t\t        var _this = _super.call(this, target, FilterType.IncludeExclude) || this;\r\n\t\t        _this.values = values;\r\n\t\t        _this.isExclude = isExclude;\r\n\t\t        _this.schemaUrl = IncludeExcludeFilter.schemaUrl;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    IncludeExcludeFilter.prototype.toJSON = function () {\r\n\t\t        var filter = _super.prototype.toJSON.call(this);\r\n\t\t        filter.isExclude = this.isExclude;\r\n\t\t        filter.values = this.values;\r\n\t\t        return filter;\r\n\t\t    };\r\n\t\t    IncludeExcludeFilter.schemaUrl = \"http://powerbi.com/product/schema#includeExclude\";\r\n\t\t    return IncludeExcludeFilter;\r\n\t\t}(Filter));\r\n\t\texports.IncludeExcludeFilter = IncludeExcludeFilter;\r\n\t\tvar TopNFilter = /** @class */ (function (_super) {\r\n\t\t    __extends(TopNFilter, _super);\r\n\t\t    function TopNFilter(target, operator, itemCount, orderBy) {\r\n\t\t        var _this = _super.call(this, target, FilterType.TopN) || this;\r\n\t\t        _this.operator = operator;\r\n\t\t        _this.itemCount = itemCount;\r\n\t\t        _this.schemaUrl = TopNFilter.schemaUrl;\r\n\t\t        _this.orderBy = orderBy;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    TopNFilter.prototype.toJSON = function () {\r\n\t\t        var filter = _super.prototype.toJSON.call(this);\r\n\t\t        filter.operator = this.operator;\r\n\t\t        filter.itemCount = this.itemCount;\r\n\t\t        filter.orderBy = this.orderBy;\r\n\t\t        return filter;\r\n\t\t    };\r\n\t\t    TopNFilter.schemaUrl = \"http://powerbi.com/product/schema#topN\";\r\n\t\t    return TopNFilter;\r\n\t\t}(Filter));\r\n\t\texports.TopNFilter = TopNFilter;\r\n\t\tvar RelativeDateFilter = /** @class */ (function (_super) {\r\n\t\t    __extends(RelativeDateFilter, _super);\r\n\t\t    function RelativeDateFilter(target, operator, timeUnitsCount, timeUnitType, includeToday) {\r\n\t\t        var _this = _super.call(this, target, FilterType.RelativeDate) || this;\r\n\t\t        _this.operator = operator;\r\n\t\t        _this.timeUnitsCount = timeUnitsCount;\r\n\t\t        _this.timeUnitType = timeUnitType;\r\n\t\t        _this.includeToday = includeToday;\r\n\t\t        _this.schemaUrl = RelativeDateFilter.schemaUrl;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    RelativeDateFilter.prototype.toJSON = function () {\r\n\t\t        var filter = _super.prototype.toJSON.call(this);\r\n\t\t        filter.operator = this.operator;\r\n\t\t        filter.timeUnitsCount = this.timeUnitsCount;\r\n\t\t        filter.timeUnitType = this.timeUnitType;\r\n\t\t        filter.includeToday = this.includeToday;\r\n\t\t        return filter;\r\n\t\t    };\r\n\t\t    RelativeDateFilter.schemaUrl = \"http://powerbi.com/product/schema#relativeDate\";\r\n\t\t    return RelativeDateFilter;\r\n\t\t}(Filter));\r\n\t\texports.RelativeDateFilter = RelativeDateFilter;\r\n\t\tvar BasicFilter = /** @class */ (function (_super) {\r\n\t\t    __extends(BasicFilter, _super);\r\n\t\t    function BasicFilter(target, operator) {\r\n\t\t        var values = [];\r\n\t\t        for (var _i = 2; _i < arguments.length; _i++) {\r\n\t\t            values[_i - 2] = arguments[_i];\r\n\t\t        }\r\n\t\t        var _this = _super.call(this, target, FilterType.Basic) || this;\r\n\t\t        _this.operator = operator;\r\n\t\t        _this.schemaUrl = BasicFilter.schemaUrl;\r\n\t\t        if (values.length === 0 && operator !== \"All\") {\r\n\t\t            throw new Error(\"values must be a non-empty array unless your operator is \\\"All\\\".\");\r\n\t\t        }\r\n\t\t        /**\r\n\t\t         * Accept values as array instead of as individual arguments\r\n\t\t         * new BasicFilter('a', 'b', 1, 2);\r\n\t\t         * new BasicFilter('a', 'b', [1,2]);\r\n\t\t         */\r\n\t\t        if (Array.isArray(values[0])) {\r\n\t\t            _this.values = values[0];\r\n\t\t        }\r\n\t\t        else {\r\n\t\t            _this.values = values;\r\n\t\t        }\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    BasicFilter.prototype.toJSON = function () {\r\n\t\t        var filter = _super.prototype.toJSON.call(this);\r\n\t\t        filter.operator = this.operator;\r\n\t\t        filter.values = this.values;\r\n\t\t        return filter;\r\n\t\t    };\r\n\t\t    BasicFilter.schemaUrl = \"http://powerbi.com/product/schema#basic\";\r\n\t\t    return BasicFilter;\r\n\t\t}(Filter));\r\n\t\texports.BasicFilter = BasicFilter;\r\n\t\tvar BasicFilterWithKeys = /** @class */ (function (_super) {\r\n\t\t    __extends(BasicFilterWithKeys, _super);\r\n\t\t    function BasicFilterWithKeys(target, operator, values, keyValues) {\r\n\t\t        var _this = _super.call(this, target, operator, values) || this;\r\n\t\t        _this.keyValues = keyValues;\r\n\t\t        _this.target = target;\r\n\t\t        var numberOfKeys = target.keys ? target.keys.length : 0;\r\n\t\t        if (numberOfKeys > 0 && !keyValues) {\r\n\t\t            throw new Error(\"You should pass the values to be filtered for each key. You passed: no values and \" + numberOfKeys + \" keys\");\r\n\t\t        }\r\n\t\t        if (numberOfKeys === 0 && keyValues && keyValues.length > 0) {\r\n\t\t            throw new Error(\"You passed key values but your target object doesn't contain the keys to be filtered\");\r\n\t\t        }\r\n\t\t        for (var i = 0; i < _this.keyValues.length; i++) {\r\n\t\t            if (_this.keyValues[i]) {\r\n\t\t                var lengthOfArray = _this.keyValues[i].length;\r\n\t\t                if (lengthOfArray !== numberOfKeys) {\r\n\t\t                    throw new Error(\"Each tuple of key values should contain a value for each of the keys. You passed: \" + lengthOfArray + \" values and \" + numberOfKeys + \" keys\");\r\n\t\t                }\r\n\t\t            }\r\n\t\t        }\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    BasicFilterWithKeys.prototype.toJSON = function () {\r\n\t\t        var filter = _super.prototype.toJSON.call(this);\r\n\t\t        filter.keyValues = this.keyValues;\r\n\t\t        return filter;\r\n\t\t    };\r\n\t\t    return BasicFilterWithKeys;\r\n\t\t}(BasicFilter));\r\n\t\texports.BasicFilterWithKeys = BasicFilterWithKeys;\r\n\t\tvar TupleFilter = /** @class */ (function (_super) {\r\n\t\t    __extends(TupleFilter, _super);\r\n\t\t    function TupleFilter(target, operator, values) {\r\n\t\t        var _this = _super.call(this, target, FilterType.Tuple) || this;\r\n\t\t        _this.operator = operator;\r\n\t\t        _this.schemaUrl = TupleFilter.schemaUrl;\r\n\t\t        _this.values = values;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    TupleFilter.prototype.toJSON = function () {\r\n\t\t        var filter = _super.prototype.toJSON.call(this);\r\n\t\t        filter.operator = this.operator;\r\n\t\t        filter.values = this.values;\r\n\t\t        filter.target = this.target;\r\n\t\t        return filter;\r\n\t\t    };\r\n\t\t    TupleFilter.schemaUrl = \"http://powerbi.com/product/schema#tuple\";\r\n\t\t    return TupleFilter;\r\n\t\t}(Filter));\r\n\t\texports.TupleFilter = TupleFilter;\r\n\t\tvar AdvancedFilter = /** @class */ (function (_super) {\r\n\t\t    __extends(AdvancedFilter, _super);\r\n\t\t    function AdvancedFilter(target, logicalOperator) {\r\n\t\t        var conditions = [];\r\n\t\t        for (var _i = 2; _i < arguments.length; _i++) {\r\n\t\t            conditions[_i - 2] = arguments[_i];\r\n\t\t        }\r\n\t\t        var _this = _super.call(this, target, FilterType.Advanced) || this;\r\n\t\t        _this.schemaUrl = AdvancedFilter.schemaUrl;\r\n\t\t        // Guard statements\r\n\t\t        if (typeof logicalOperator !== \"string\" || logicalOperator.length === 0) {\r\n\t\t            // TODO: It would be nicer to list out the possible logical operators.\r\n\t\t            throw new Error(\"logicalOperator must be a valid operator, You passed: \" + logicalOperator);\r\n\t\t        }\r\n\t\t        _this.logicalOperator = logicalOperator;\r\n\t\t        var extractedConditions;\r\n\t\t        /**\r\n\t\t         * Accept conditions as array instead of as individual arguments\r\n\t\t         * new AdvancedFilter('a', 'b', \"And\", { value: 1, operator: \"Equals\" }, { value: 2, operator: \"IsGreaterThan\" });\r\n\t\t         * new AdvancedFilter('a', 'b', \"And\", [{ value: 1, operator: \"Equals\" }, { value: 2, operator: \"IsGreaterThan\" }]);\r\n\t\t         */\r\n\t\t        if (Array.isArray(conditions[0])) {\r\n\t\t            extractedConditions = conditions[0];\r\n\t\t        }\r\n\t\t        else {\r\n\t\t            extractedConditions = conditions;\r\n\t\t        }\r\n\t\t        if (extractedConditions.length === 0) {\r\n\t\t            throw new Error(\"conditions must be a non-empty array. You passed: \" + conditions);\r\n\t\t        }\r\n\t\t        if (extractedConditions.length > 2) {\r\n\t\t            throw new Error(\"AdvancedFilters may not have more than two conditions. You passed: \" + conditions.length);\r\n\t\t        }\r\n\t\t        if (extractedConditions.length === 1 && logicalOperator !== \"And\") {\r\n\t\t            throw new Error(\"Logical Operator must be \\\"And\\\" when there is only one condition provided\");\r\n\t\t        }\r\n\t\t        _this.conditions = extractedConditions;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    AdvancedFilter.prototype.toJSON = function () {\r\n\t\t        var filter = _super.prototype.toJSON.call(this);\r\n\t\t        filter.logicalOperator = this.logicalOperator;\r\n\t\t        filter.conditions = this.conditions;\r\n\t\t        return filter;\r\n\t\t    };\r\n\t\t    AdvancedFilter.schemaUrl = \"http://powerbi.com/product/schema#advanced\";\r\n\t\t    return AdvancedFilter;\r\n\t\t}(Filter));\r\n\t\texports.AdvancedFilter = AdvancedFilter;\r\n\t\tfunction isFilterKeyColumnsTarget(target) {\r\n\t\t    return isColumn(target) && !!target.keys;\r\n\t\t}\r\n\t\texports.isFilterKeyColumnsTarget = isFilterKeyColumnsTarget;\r\n\t\tfunction isBasicFilterWithKeys(filter) {\r\n\t\t    return getFilterType(filter) === FilterType.Basic && !!filter.keyValues;\r\n\t\t}\r\n\t\texports.isBasicFilterWithKeys = isBasicFilterWithKeys;\r\n\t\tfunction getFilterType(filter) {\r\n\t\t    if (filter.filterType) {\r\n\t\t        return filter.filterType;\r\n\t\t    }\r\n\t\t    var basicFilter = filter;\r\n\t\t    var advancedFilter = filter;\r\n\t\t    if ((typeof basicFilter.operator === \"string\")\r\n\t\t        && (Array.isArray(basicFilter.values))) {\r\n\t\t        return FilterType.Basic;\r\n\t\t    }\r\n\t\t    else if ((typeof advancedFilter.logicalOperator === \"string\")\r\n\t\t        && (Array.isArray(advancedFilter.conditions))) {\r\n\t\t        return FilterType.Advanced;\r\n\t\t    }\r\n\t\t    else {\r\n\t\t        return FilterType.Unknown;\r\n\t\t    }\r\n\t\t}\r\n\t\texports.getFilterType = getFilterType;\r\n\t\tfunction isMeasure(arg) {\r\n\t\t    return arg.table !== undefined && arg.measure !== undefined;\r\n\t\t}\r\n\t\texports.isMeasure = isMeasure;\r\n\t\tfunction isColumn(arg) {\r\n\t\t    return !!(arg.table && arg.column && !arg.aggregationFunction);\r\n\t\t}\r\n\t\texports.isColumn = isColumn;\r\n\t\tfunction isHierarchyLevel(arg) {\r\n\t\t    return !!(arg.table && arg.hierarchy && arg.hierarchyLevel && !arg.aggregationFunction);\r\n\t\t}\r\n\t\texports.isHierarchyLevel = isHierarchyLevel;\r\n\t\tfunction isHierarchyLevelAggr(arg) {\r\n\t\t    return !!(arg.table && arg.hierarchy && arg.hierarchyLevel && arg.aggregationFunction);\r\n\t\t}\r\n\t\texports.isHierarchyLevelAggr = isHierarchyLevelAggr;\r\n\t\tfunction isColumnAggr(arg) {\r\n\t\t    return !!(arg.table && arg.column && arg.aggregationFunction);\r\n\t\t}\r\n\t\texports.isColumnAggr = isColumnAggr;\r\n\t\tvar QnaMode;\r\n\t\t(function (QnaMode) {\r\n\t\t    QnaMode[QnaMode[\"Interactive\"] = 0] = \"Interactive\";\r\n\t\t    QnaMode[QnaMode[\"ResultOnly\"] = 1] = \"ResultOnly\";\r\n\t\t})(QnaMode = exports.QnaMode || (exports.QnaMode = {}));\r\n\t\tvar ExportDataType;\r\n\t\t(function (ExportDataType) {\r\n\t\t    ExportDataType[ExportDataType[\"Summarized\"] = 0] = \"Summarized\";\r\n\t\t    ExportDataType[ExportDataType[\"Underlying\"] = 1] = \"Underlying\";\r\n\t\t})(ExportDataType = exports.ExportDataType || (exports.ExportDataType = {}));\r\n\t\tvar BookmarksPlayMode;\r\n\t\t(function (BookmarksPlayMode) {\r\n\t\t    BookmarksPlayMode[BookmarksPlayMode[\"Off\"] = 0] = \"Off\";\r\n\t\t    BookmarksPlayMode[BookmarksPlayMode[\"Presentation\"] = 1] = \"Presentation\";\r\n\t\t})(BookmarksPlayMode = exports.BookmarksPlayMode || (exports.BookmarksPlayMode = {}));\r\n\t\t// This is not an enum because enum strings require\r\n\t\t// us to upgrade typeScript version and change SDK build definition\r\n\t\texports.CommonErrorCodes = {\r\n\t\t    TokenExpired: 'TokenExpired',\r\n\t\t    NotFound: 'PowerBIEntityNotFound',\r\n\t\t    InvalidParameters: 'Invalid parameters',\r\n\t\t    LoadReportFailed: 'LoadReportFailed',\r\n\t\t    NotAuthorized: 'PowerBINotAuthorizedException',\r\n\t\t    FailedToLoadModel: 'ExplorationContainer_FailedToLoadModel_DefaultDetails',\r\n\t\t};\r\n\t\texports.TextAlignment = {\r\n\t\t    Left: 'left',\r\n\t\t    Center: 'center',\r\n\t\t    Right: 'right',\r\n\t\t};\r\n\t\texports.LegendPosition = {\r\n\t\t    Top: 'Top',\r\n\t\t    Bottom: 'Bottom',\r\n\t\t    Right: 'Right',\r\n\t\t    Left: 'Left',\r\n\t\t    TopCenter: 'TopCenter',\r\n\t\t    BottomCenter: 'BottomCenter',\r\n\t\t    RightCenter: 'RightCenter',\r\n\t\t    LeftCenter: 'LeftCenter',\r\n\t\t};\r\n\t\tvar SortDirection;\r\n\t\t(function (SortDirection) {\r\n\t\t    SortDirection[SortDirection[\"Ascending\"] = 1] = \"Ascending\";\r\n\t\t    SortDirection[SortDirection[\"Descending\"] = 2] = \"Descending\";\r\n\t\t})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\r\n\t\tvar Selector = /** @class */ (function () {\r\n\t\t    function Selector(schema) {\r\n\t\t        this.$schema = schema;\r\n\t\t    }\r\n\t\t    Selector.prototype.toJSON = function () {\r\n\t\t        return {\r\n\t\t            $schema: this.$schema\r\n\t\t        };\r\n\t\t    };\r\n\t\t    ;\r\n\t\t    return Selector;\r\n\t\t}());\r\n\t\texports.Selector = Selector;\r\n\t\tvar PageSelector = /** @class */ (function (_super) {\r\n\t\t    __extends(PageSelector, _super);\r\n\t\t    function PageSelector(pageName) {\r\n\t\t        var _this = _super.call(this, PageSelector.schemaUrl) || this;\r\n\t\t        _this.pageName = pageName;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    PageSelector.prototype.toJSON = function () {\r\n\t\t        var selector = _super.prototype.toJSON.call(this);\r\n\t\t        selector.pageName = this.pageName;\r\n\t\t        return selector;\r\n\t\t    };\r\n\t\t    PageSelector.schemaUrl = \"http://powerbi.com/product/schema#pageSelector\";\r\n\t\t    return PageSelector;\r\n\t\t}(Selector));\r\n\t\texports.PageSelector = PageSelector;\r\n\t\tvar VisualSelector = /** @class */ (function (_super) {\r\n\t\t    __extends(VisualSelector, _super);\r\n\t\t    function VisualSelector(visualName) {\r\n\t\t        var _this = _super.call(this, VisualSelector.schemaUrl) || this;\r\n\t\t        _this.visualName = visualName;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    VisualSelector.prototype.toJSON = function () {\r\n\t\t        var selector = _super.prototype.toJSON.call(this);\r\n\t\t        selector.visualName = this.visualName;\r\n\t\t        return selector;\r\n\t\t    };\r\n\t\t    VisualSelector.schemaUrl = \"http://powerbi.com/product/schema#visualSelector\";\r\n\t\t    return VisualSelector;\r\n\t\t}(Selector));\r\n\t\texports.VisualSelector = VisualSelector;\r\n\t\tvar VisualTypeSelector = /** @class */ (function (_super) {\r\n\t\t    __extends(VisualTypeSelector, _super);\r\n\t\t    function VisualTypeSelector(visualType) {\r\n\t\t        var _this = _super.call(this, VisualSelector.schemaUrl) || this;\r\n\t\t        _this.visualType = visualType;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    VisualTypeSelector.prototype.toJSON = function () {\r\n\t\t        var selector = _super.prototype.toJSON.call(this);\r\n\t\t        selector.visualType = this.visualType;\r\n\t\t        return selector;\r\n\t\t    };\r\n\t\t    VisualTypeSelector.schemaUrl = \"http://powerbi.com/product/schema#visualTypeSelector\";\r\n\t\t    return VisualTypeSelector;\r\n\t\t}(Selector));\r\n\t\texports.VisualTypeSelector = VisualTypeSelector;\r\n\t\tvar SlicerTargetSelector = /** @class */ (function (_super) {\r\n\t\t    __extends(SlicerTargetSelector, _super);\r\n\t\t    function SlicerTargetSelector(target) {\r\n\t\t        var _this = _super.call(this, VisualSelector.schemaUrl) || this;\r\n\t\t        _this.target = target;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    SlicerTargetSelector.prototype.toJSON = function () {\r\n\t\t        var selector = _super.prototype.toJSON.call(this);\r\n\t\t        selector.target = this.target;\r\n\t\t        return selector;\r\n\t\t    };\r\n\t\t    SlicerTargetSelector.schemaUrl = \"http://powerbi.com/product/schema#slicerTargetSelector\";\r\n\t\t    return SlicerTargetSelector;\r\n\t\t}(Selector));\r\n\t\texports.SlicerTargetSelector = SlicerTargetSelector;\r\n\t\tvar CommandDisplayOption;\r\n\t\t(function (CommandDisplayOption) {\r\n\t\t    CommandDisplayOption[CommandDisplayOption[\"Enabled\"] = 0] = \"Enabled\";\r\n\t\t    CommandDisplayOption[CommandDisplayOption[\"Disabled\"] = 1] = \"Disabled\";\r\n\t\t    CommandDisplayOption[CommandDisplayOption[\"Hidden\"] = 2] = \"Hidden\";\r\n\t\t})(CommandDisplayOption = exports.CommandDisplayOption || (exports.CommandDisplayOption = {}));\r\n\t\t/*\r\n\t\t * Visual CRUD\r\n\t\t */\r\n\t\tvar VisualDataRoleKind;\r\n\t\t(function (VisualDataRoleKind) {\r\n\t\t    // Indicates that the role should be bound to something that evaluates to a grouping of values.\r\n\t\t    VisualDataRoleKind[VisualDataRoleKind[\"Grouping\"] = 0] = \"Grouping\";\r\n\t\t    // Indicates that the role should be bound to something that evaluates to a single value in a scope.\r\n\t\t    VisualDataRoleKind[VisualDataRoleKind[\"Measure\"] = 1] = \"Measure\";\r\n\t\t    // Indicates that the role can be bound to either Grouping or Measure.\r\n\t\t    VisualDataRoleKind[VisualDataRoleKind[\"GroupingOrMeasure\"] = 2] = \"GroupingOrMeasure\";\r\n\t\t})(VisualDataRoleKind = exports.VisualDataRoleKind || (exports.VisualDataRoleKind = {}));\r\n\t\t// Indicates the visual preference on Grouping or Measure. Only applicable if kind is GroupingOrMeasure.\r\n\t\tvar VisualDataRoleKindPreference;\r\n\t\t(function (VisualDataRoleKindPreference) {\r\n\t\t    VisualDataRoleKindPreference[VisualDataRoleKindPreference[\"Measure\"] = 0] = \"Measure\";\r\n\t\t    VisualDataRoleKindPreference[VisualDataRoleKindPreference[\"Grouping\"] = 1] = \"Grouping\";\r\n\t\t})(VisualDataRoleKindPreference = exports.VisualDataRoleKindPreference || (exports.VisualDataRoleKindPreference = {}));\r\n\t\tfunction normalizeError(error) {\r\n\t\t    var message = error.message;\r\n\t\t    if (!message) {\r\n\t\t        message = error.path + \" is invalid. Not meeting \" + error.keyword + \" constraint\";\r\n\t\t    }\r\n\t\t    return {\r\n\t\t        message: message\r\n\t\t    };\r\n\t\t}\r\n\t\tfunction validateVisualSelector(input) {\r\n\t\t    var errors = exports.Validators.visualSelectorValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateVisualSelector = validateVisualSelector;\r\n\t\tfunction validateSlicer(input) {\r\n\t\t    var errors = exports.Validators.slicerValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateSlicer = validateSlicer;\r\n\t\tfunction validateSlicerState(input) {\r\n\t\t    var errors = exports.Validators.slicerStateValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateSlicerState = validateSlicerState;\r\n\t\tfunction validatePlayBookmarkRequest(input) {\r\n\t\t    var errors = exports.Validators.playBookmarkRequestValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validatePlayBookmarkRequest = validatePlayBookmarkRequest;\r\n\t\tfunction validateAddBookmarkRequest(input) {\r\n\t\t    var errors = exports.Validators.addBookmarkRequestValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateAddBookmarkRequest = validateAddBookmarkRequest;\r\n\t\tfunction validateApplyBookmarkByNameRequest(input) {\r\n\t\t    var errors = exports.Validators.applyBookmarkByNameRequestValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateApplyBookmarkByNameRequest = validateApplyBookmarkByNameRequest;\r\n\t\tfunction validateApplyBookmarkStateRequest(input) {\r\n\t\t    var errors = exports.Validators.applyBookmarkStateRequestValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateApplyBookmarkStateRequest = validateApplyBookmarkStateRequest;\r\n\t\tfunction validateSettings(input) {\r\n\t\t    var errors = exports.Validators.settingsValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateSettings = validateSettings;\r\n\t\tfunction validateCustomPageSize(input) {\r\n\t\t    var errors = exports.Validators.customPageSizeValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateCustomPageSize = validateCustomPageSize;\r\n\t\tfunction validateExtension(input) {\r\n\t\t    var errors = exports.Validators.extensionValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateExtension = validateExtension;\r\n\t\tfunction validateReportLoad(input) {\r\n\t\t    var errors = exports.Validators.reportLoadValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateReportLoad = validateReportLoad;\r\n\t\tfunction validateCreateReport(input) {\r\n\t\t    var errors = exports.Validators.reportCreateValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateCreateReport = validateCreateReport;\r\n\t\tfunction validateDashboardLoad(input) {\r\n\t\t    var errors = exports.Validators.dashboardLoadValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateDashboardLoad = validateDashboardLoad;\r\n\t\tfunction validateTileLoad(input) {\r\n\t\t    var errors = exports.Validators.tileLoadValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateTileLoad = validateTileLoad;\r\n\t\tfunction validatePage(input) {\r\n\t\t    var errors = exports.Validators.pageValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validatePage = validatePage;\r\n\t\tfunction validateFilter(input) {\r\n\t\t    var errors = exports.Validators.filtersValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateFilter = validateFilter;\r\n\t\tfunction validateSaveAsParameters(input) {\r\n\t\t    var errors = exports.Validators.saveAsParametersValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateSaveAsParameters = validateSaveAsParameters;\r\n\t\tfunction validateLoadQnaConfiguration(input) {\r\n\t\t    var errors = exports.Validators.loadQnaValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateLoadQnaConfiguration = validateLoadQnaConfiguration;\r\n\t\tfunction validateQnaInterpretInputData(input) {\r\n\t\t    var errors = exports.Validators.qnaInterpretInputDataValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateQnaInterpretInputData = validateQnaInterpretInputData;\r\n\t\tfunction validateExportDataRequest(input) {\r\n\t\t    var errors = exports.Validators.exportDataRequestValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateExportDataRequest = validateExportDataRequest;\r\n\t\tfunction validateVisualHeader(input) {\r\n\t\t    var errors = exports.Validators.visualHeaderValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateVisualHeader = validateVisualHeader;\r\n\t\tfunction validateVisualSettings(input) {\r\n\t\t    var errors = exports.Validators.visualSettingsValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateVisualSettings = validateVisualSettings;\r\n\t\tfunction validateCommandsSettings(input) {\r\n\t\t    var errors = exports.Validators.commandsSettingsValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateCommandsSettings = validateCommandsSettings;\r\n\t\tfunction validateCustomTheme(input) {\r\n\t\t    var errors = exports.Validators.customThemeValidator.validate(input);\r\n\t\t    return errors ? errors.map(normalizeError) : undefined;\r\n\t\t}\r\n\t\texports.validateCustomTheme = validateCustomTheme;\r\n\t\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar extensionsValidator_1 = __webpack_require__(3);\r\n\t\tvar settingsValidator_1 = __webpack_require__(5);\r\n\t\tvar bookmarkValidator_1 = __webpack_require__(6);\r\n\t\tvar filtersValidator_1 = __webpack_require__(7);\r\n\t\tvar fieldRequiredValidator_1 = __webpack_require__(8);\r\n\t\tvar anyOfValidator_1 = __webpack_require__(9);\r\n\t\tvar reportLoadValidator_1 = __webpack_require__(10);\r\n\t\tvar reportCreateValidator_1 = __webpack_require__(11);\r\n\t\tvar dashboardLoadValidator_1 = __webpack_require__(12);\r\n\t\tvar tileLoadValidator_1 = __webpack_require__(13);\r\n\t\tvar pageValidator_1 = __webpack_require__(14);\r\n\t\tvar qnaValidator_1 = __webpack_require__(15);\r\n\t\tvar saveAsParametersValidator_1 = __webpack_require__(16);\r\n\t\tvar mapValidator_1 = __webpack_require__(17);\r\n\t\tvar layoutValidator_1 = __webpack_require__(18);\r\n\t\tvar exportDataValidator_1 = __webpack_require__(19);\r\n\t\tvar selectorsValidator_1 = __webpack_require__(20);\r\n\t\tvar slicersValidator_1 = __webpack_require__(21);\r\n\t\tvar visualSettingsValidator_1 = __webpack_require__(22);\r\n\t\tvar commandsSettingsValidator_1 = __webpack_require__(23);\r\n\t\tvar customThemeValidator_1 = __webpack_require__(24);\r\n\t\texports.Validators = {\r\n\t\t    addBookmarkRequestValidator: new bookmarkValidator_1.AddBookmarkRequestValidator(),\r\n\t\t    advancedFilterTypeValidator: new typeValidator_1.EnumValidator([0]),\r\n\t\t    advancedFilterValidator: new filtersValidator_1.AdvancedFilterValidator(),\r\n\t\t    anyArrayValidator: new typeValidator_1.ArrayValidator([new anyOfValidator_1.AnyOfValidator([new typeValidator_1.StringValidator(), new typeValidator_1.NumberValidator(), new typeValidator_1.BooleanValidator()])]),\r\n\t\t    anyFilterValidator: new anyOfValidator_1.AnyOfValidator([new filtersValidator_1.BasicFilterValidator(), new filtersValidator_1.AdvancedFilterValidator(), new filtersValidator_1.IncludeExcludeFilterValidator(), new filtersValidator_1.NotSupportedFilterValidator(), new filtersValidator_1.RelativeDateFilterValidator(), new filtersValidator_1.TopNFilterValidator()]),\r\n\t\t    anyValueValidator: new anyOfValidator_1.AnyOfValidator([new typeValidator_1.StringValidator(), new typeValidator_1.NumberValidator(), new typeValidator_1.BooleanValidator()]),\r\n\t\t    applyBookmarkByNameRequestValidator: new bookmarkValidator_1.ApplyBookmarkByNameRequestValidator(),\r\n\t\t    applyBookmarkStateRequestValidator: new bookmarkValidator_1.ApplyBookmarkStateRequestValidator(),\r\n\t\t    applyBookmarkValidator: new anyOfValidator_1.AnyOfValidator([new bookmarkValidator_1.ApplyBookmarkByNameRequestValidator(), new bookmarkValidator_1.ApplyBookmarkStateRequestValidator()]),\r\n\t\t    backgroundValidator: new typeValidator_1.EnumValidator([0, 1]),\r\n\t\t    basicFilterTypeValidator: new typeValidator_1.EnumValidator([1]),\r\n\t\t    basicFilterValidator: new filtersValidator_1.BasicFilterValidator(),\r\n\t\t    booleanArrayValidator: new typeValidator_1.BooleanArrayValidator(),\r\n\t\t    booleanValidator: new typeValidator_1.BooleanValidator(),\r\n\t\t    commandDisplayOptionValidator: new typeValidator_1.EnumValidator([0, 1, 2]),\r\n\t\t    commandExtensionSelectorValidator: new anyOfValidator_1.AnyOfValidator([new selectorsValidator_1.VisualSelectorValidator(), new selectorsValidator_1.VisualTypeSelectorValidator()]),\r\n\t\t    commandExtensionValidator: new extensionsValidator_1.CommandExtensionValidator(),\r\n\t\t    commandsSettingsArrayValidator: new typeValidator_1.ArrayValidator([new commandsSettingsValidator_1.CommandsSettingsValidator()]),\r\n\t\t    commandsSettingsValidator: new commandsSettingsValidator_1.CommandsSettingsValidator(),\r\n\t\t    conditionItemValidator: new filtersValidator_1.ConditionItemValidator(),\r\n\t\t    customLayoutDisplayOptionValidator: new typeValidator_1.EnumValidator([0, 1, 2]),\r\n\t\t    customLayoutValidator: new layoutValidator_1.CustomLayoutValidator(),\r\n\t\t    customPageSizeValidator: new pageValidator_1.CustomPageSizeValidator(),\r\n\t\t    customThemeValidator: new customThemeValidator_1.CustomThemeValidator(),\r\n\t\t    dashboardLoadValidator: new dashboardLoadValidator_1.DashboardLoadValidator(),\r\n\t\t    displayStateModeValidator: new typeValidator_1.EnumValidator([0, 1]),\r\n\t\t    displayStateValidator: new layoutValidator_1.DisplayStateValidator(),\r\n\t\t    exportDataRequestValidator: new exportDataValidator_1.ExportDataRequestValidator(),\r\n\t\t    extensionArrayValidator: new typeValidator_1.ArrayValidator([new extensionsValidator_1.ExtensionValidator()]),\r\n\t\t    extensionPointsValidator: new extensionsValidator_1.ExtensionPointsValidator(),\r\n\t\t    extensionValidator: new extensionsValidator_1.ExtensionValidator(),\r\n\t\t    fieldRequiredValidator: new fieldRequiredValidator_1.FieldRequiredValidator(),\r\n\t\t    filterColumnTargetValidator: new filtersValidator_1.FilterColumnTargetValidator(),\r\n\t\t    filterConditionsValidator: new typeValidator_1.ArrayValidator([new filtersValidator_1.ConditionItemValidator()]),\r\n\t\t    filterHierarchyTargetValidator: new filtersValidator_1.FilterHierarchyTargetValidator(),\r\n\t\t    filterMeasureTargetValidator: new filtersValidator_1.FilterMeasureTargetValidator(),\r\n\t\t    filterTargetValidator: new anyOfValidator_1.AnyOfValidator([new filtersValidator_1.FilterColumnTargetValidator(), new filtersValidator_1.FilterHierarchyTargetValidator(), new filtersValidator_1.FilterMeasureTargetValidator()]),\r\n\t\t    filtersArrayValidator: new typeValidator_1.ArrayValidator([new anyOfValidator_1.AnyOfValidator([new filtersValidator_1.BasicFilterValidator(), new filtersValidator_1.AdvancedFilterValidator(), new filtersValidator_1.RelativeDateFilterValidator()])]),\r\n\t\t    filtersValidator: new filtersValidator_1.FilterValidator(),\r\n\t\t    includeExcludeFilterValidator: new filtersValidator_1.IncludeExcludeFilterValidator(),\r\n\t\t    includeExludeFilterTypeValidator: new typeValidator_1.EnumValidator([3]),\r\n\t\t    layoutTypeValidator: new typeValidator_1.EnumValidator([0, 1, 2, 3]),\r\n\t\t    loadQnaValidator: new qnaValidator_1.LoadQnaValidator(),\r\n\t\t    menuExtensionValidator: new extensionsValidator_1.MenuExtensionValidator(),\r\n\t\t    menuLocationValidator: new typeValidator_1.EnumValidator([0, 1]),\r\n\t\t    notSupportedFilterTypeValidator: new typeValidator_1.EnumValidator([2]),\r\n\t\t    notSupportedFilterValidator: new filtersValidator_1.NotSupportedFilterValidator(),\r\n\t\t    numberArrayValidator: new typeValidator_1.NumberArrayValidator(),\r\n\t\t    numberValidator: new typeValidator_1.NumberValidator(),\r\n\t\t    pageLayoutValidator: new mapValidator_1.MapValidator([new typeValidator_1.StringValidator()], [new layoutValidator_1.VisualLayoutValidator()]),\r\n\t\t    pageSizeTypeValidator: new typeValidator_1.EnumValidator([0, 1, 2, 3, 4, 5]),\r\n\t\t    pageSizeValidator: new pageValidator_1.PageSizeValidator(),\r\n\t\t    pageValidator: new pageValidator_1.PageValidator(),\r\n\t\t    pageViewFieldValidator: new pageValidator_1.PageViewFieldValidator(),\r\n\t\t    pagesLayoutValidator: new mapValidator_1.MapValidator([new typeValidator_1.StringValidator()], [new layoutValidator_1.PageLayoutValidator()]),\r\n\t\t    permissionsValidator: new typeValidator_1.EnumValidator([0, 1, 2, 4, 7]),\r\n\t\t    playBookmarkRequestValidator: new bookmarkValidator_1.PlayBookmarkRequestValidator(),\r\n\t\t    qnaInterpretInputDataValidator: new qnaValidator_1.QnaInterpretInputDataValidator(),\r\n\t\t    qnaSettingValidator: new qnaValidator_1.QnaSettingsValidator(),\r\n\t\t    relativeDateFilterOperatorValidator: new typeValidator_1.EnumValidator([0, 1, 2]),\r\n\t\t    relativeDateFilterTimeUnitTypeValidator: new typeValidator_1.EnumValidator([0, 1, 2, 3, 4, 5, 6]),\r\n\t\t    relativeDateFilterTypeValidator: new typeValidator_1.EnumValidator([4]),\r\n\t\t    relativeDateFilterValidator: new filtersValidator_1.RelativeDateFilterValidator(),\r\n\t\t    reportCreateValidator: new reportCreateValidator_1.ReportCreateValidator(),\r\n\t\t    reportLoadValidator: new reportLoadValidator_1.ReportLoadValidator(),\r\n\t\t    saveAsParametersValidator: new saveAsParametersValidator_1.SaveAsParametersValidator(),\r\n\t\t    settingsValidator: new settingsValidator_1.SettingsValidator(),\r\n\t\t    singleCommandSettingsValidator: new commandsSettingsValidator_1.SingleCommandSettingsValidator(),\r\n\t\t    slicerSelectorValidator: new anyOfValidator_1.AnyOfValidator([new selectorsValidator_1.VisualSelectorValidator(), new selectorsValidator_1.SlicerTargetSelectorValidator()]),\r\n\t\t    slicerStateValidator: new slicersValidator_1.SlicerStateValidator(),\r\n\t\t    slicerTargetValidator: new anyOfValidator_1.AnyOfValidator([new filtersValidator_1.FilterColumnTargetValidator(), new filtersValidator_1.FilterHierarchyTargetValidator(), new filtersValidator_1.FilterMeasureTargetValidator(), new filtersValidator_1.FilterKeyColumnsTargetValidator(), new filtersValidator_1.FilterKeyHierarchyTargetValidator()]),\r\n\t\t    slicerValidator: new slicersValidator_1.SlicerValidator(),\r\n\t\t    stringArrayValidator: new typeValidator_1.StringArrayValidator(),\r\n\t\t    stringValidator: new typeValidator_1.StringValidator(),\r\n\t\t    tileLoadValidator: new tileLoadValidator_1.TileLoadValidator(),\r\n\t\t    tokenTypeValidator: new typeValidator_1.EnumValidator([0, 1]),\r\n\t\t    topNFilterTypeValidator: new typeValidator_1.EnumValidator([5]),\r\n\t\t    topNFilterValidator: new filtersValidator_1.TopNFilterValidator(),\r\n\t\t    viewModeValidator: new typeValidator_1.EnumValidator([0, 1]),\r\n\t\t    visualCommandSelectorValidator: new anyOfValidator_1.AnyOfValidator([new selectorsValidator_1.VisualSelectorValidator(), new selectorsValidator_1.VisualTypeSelectorValidator()]),\r\n\t\t    visualHeaderSelectorValidator: new anyOfValidator_1.AnyOfValidator([new selectorsValidator_1.VisualSelectorValidator(), new selectorsValidator_1.VisualTypeSelectorValidator()]),\r\n\t\t    visualHeaderSettingsValidator: new visualSettingsValidator_1.VisualHeaderSettingsValidator(),\r\n\t\t    visualHeaderValidator: new visualSettingsValidator_1.VisualHeaderValidator(),\r\n\t\t    visualHeadersValidator: new typeValidator_1.ArrayValidator([new visualSettingsValidator_1.VisualHeaderValidator()]),\r\n\t\t    visualLayoutValidator: new layoutValidator_1.VisualLayoutValidator(),\r\n\t\t    visualSelectorValidator: new selectorsValidator_1.VisualSelectorValidator(),\r\n\t\t    visualSettingsValidator: new visualSettingsValidator_1.VisualSettingsValidator(),\r\n\t\t    visualTypeSelectorValidator: new selectorsValidator_1.VisualTypeSelectorValidator(),\r\n\t\t};\r\n\t\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar ObjectValidator = /** @class */ (function () {\r\n\t\t    function ObjectValidator() {\r\n\t\t    }\r\n\t\t    ObjectValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        if (typeof input !== \"object\" || Array.isArray(input)) {\r\n\t\t            return [{\r\n\t\t                    message: field !== undefined ? field + \" must be an object\" : \"input must be an object\",\r\n\t\t                    path: path,\r\n\t\t                    keyword: \"type\"\r\n\t\t                }];\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return ObjectValidator;\r\n\t\t}());\r\n\t\texports.ObjectValidator = ObjectValidator;\r\n\t\tvar ArrayValidator = /** @class */ (function () {\r\n\t\t    function ArrayValidator(itemValidators) {\r\n\t\t        this.itemValidators = itemValidators;\r\n\t\t    }\r\n\t\t    ArrayValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        if (!(Array.isArray(input))) {\r\n\t\t            return [{\r\n\t\t                    message: field + \" property is invalid\",\r\n\t\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t\t                    keyword: \"type\"\r\n\t\t                }];\r\n\t\t        }\r\n\t\t        for (var i = 0; i < input.length; i++) {\r\n\t\t            var fieldsPath = (path ? path + \".\" : \"\") + field + \".\" + i;\r\n\t\t            for (var _i = 0, _a = this.itemValidators; _i < _a.length; _i++) {\r\n\t\t                var validator = _a[_i];\r\n\t\t                var errors = validator.validate(input[i], fieldsPath, field);\r\n\t\t                if (errors) {\r\n\t\t                    return [{\r\n\t\t                            message: field + \" property is invalid\",\r\n\t\t                            path: (path ? path + \".\" : \"\") + field,\r\n\t\t                            keyword: \"type\"\r\n\t\t                        }];\r\n\t\t                }\r\n\t\t            }\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return ArrayValidator;\r\n\t\t}());\r\n\t\texports.ArrayValidator = ArrayValidator;\r\n\t\tvar TypeValidator = /** @class */ (function () {\r\n\t\t    function TypeValidator(expectedType) {\r\n\t\t        this.expectedType = expectedType;\r\n\t\t    }\r\n\t\t    TypeValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        if (!(typeof input === this.expectedType)) {\r\n\t\t            return [{\r\n\t\t                    message: field + \" must be a \" + this.expectedType,\r\n\t\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t\t                    keyword: \"type\"\r\n\t\t                }];\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return TypeValidator;\r\n\t\t}());\r\n\t\texports.TypeValidator = TypeValidator;\r\n\t\tvar StringValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(StringValidator, _super);\r\n\t\t    function StringValidator() {\r\n\t\t        return _super.call(this, \"string\") || this;\r\n\t\t    }\r\n\t\t    return StringValidator;\r\n\t\t}(TypeValidator));\r\n\t\texports.StringValidator = StringValidator;\r\n\t\tvar BooleanValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(BooleanValidator, _super);\r\n\t\t    function BooleanValidator() {\r\n\t\t        return _super.call(this, \"boolean\") || this;\r\n\t\t    }\r\n\t\t    return BooleanValidator;\r\n\t\t}(TypeValidator));\r\n\t\texports.BooleanValidator = BooleanValidator;\r\n\t\tvar NumberValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(NumberValidator, _super);\r\n\t\t    function NumberValidator() {\r\n\t\t        return _super.call(this, \"number\") || this;\r\n\t\t    }\r\n\t\t    return NumberValidator;\r\n\t\t}(TypeValidator));\r\n\t\texports.NumberValidator = NumberValidator;\r\n\t\tvar ValueValidator = /** @class */ (function () {\r\n\t\t    function ValueValidator(possibleValues) {\r\n\t\t        this.possibleValues = possibleValues;\r\n\t\t    }\r\n\t\t    ValueValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        if (this.possibleValues.indexOf(input) < 0) {\r\n\t\t            return [{\r\n\t\t                    message: field + \" property is invalid\",\r\n\t\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t\t                    keyword: \"invalid\"\r\n\t\t                }];\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return ValueValidator;\r\n\t\t}());\r\n\t\texports.ValueValidator = ValueValidator;\r\n\t\tvar SchemaValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(SchemaValidator, _super);\r\n\t\t    function SchemaValidator(schemaValue) {\r\n\t\t        var _this = _super.call(this, [schemaValue]) || this;\r\n\t\t        _this.schemaValue = schemaValue;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    SchemaValidator.prototype.validate = function (input, path, field) {\r\n\t\t        return _super.prototype.validate.call(this, input, path, field);\r\n\t\t    };\r\n\t\t    return SchemaValidator;\r\n\t\t}(ValueValidator));\r\n\t\texports.SchemaValidator = SchemaValidator;\r\n\t\tvar EnumValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(EnumValidator, _super);\r\n\t\t    function EnumValidator(possibleValues) {\r\n\t\t        var _this = _super.call(this) || this;\r\n\t\t        _this.possibleValues = possibleValues;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    EnumValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var valueValidator = new ValueValidator(this.possibleValues);\r\n\t\t        return valueValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return EnumValidator;\r\n\t\t}(NumberValidator));\r\n\t\texports.EnumValidator = EnumValidator;\r\n\t\tvar StringArrayValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(StringArrayValidator, _super);\r\n\t\t    function StringArrayValidator() {\r\n\t\t        return _super.call(this, [new StringValidator()]) || this;\r\n\t\t    }\r\n\t\t    StringArrayValidator.prototype.validate = function (input, path, field) {\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return [{\r\n\t\t                    message: field + \" must be an array of strings\",\r\n\t\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t\t                    keyword: \"type\"\r\n\t\t                }];\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return StringArrayValidator;\r\n\t\t}(ArrayValidator));\r\n\t\texports.StringArrayValidator = StringArrayValidator;\r\n\t\tvar BooleanArrayValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(BooleanArrayValidator, _super);\r\n\t\t    function BooleanArrayValidator() {\r\n\t\t        return _super.call(this, [new BooleanValidator()]) || this;\r\n\t\t    }\r\n\t\t    BooleanArrayValidator.prototype.validate = function (input, path, field) {\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return [{\r\n\t\t                    message: field + \" must be an array of booleans\",\r\n\t\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t\t                    keyword: \"type\"\r\n\t\t                }];\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return BooleanArrayValidator;\r\n\t\t}(ArrayValidator));\r\n\t\texports.BooleanArrayValidator = BooleanArrayValidator;\r\n\t\tvar NumberArrayValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(NumberArrayValidator, _super);\r\n\t\t    function NumberArrayValidator() {\r\n\t\t        return _super.call(this, [new NumberValidator()]) || this;\r\n\t\t    }\r\n\t\t    NumberArrayValidator.prototype.validate = function (input, path, field) {\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return [{\r\n\t\t                    message: field + \" must be an array of numbers\",\r\n\t\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t\t                    keyword: \"type\"\r\n\t\t                }];\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return NumberArrayValidator;\r\n\t\t}(ArrayValidator));\r\n\t\texports.NumberArrayValidator = NumberArrayValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 3 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar MenuExtensionValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(MenuExtensionValidator, _super);\r\n\t\t    function MenuExtensionValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    MenuExtensionValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"title\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"icon\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"menuLocation\",\r\n\t\t                validators: [validator_1.Validators.menuLocationValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return MenuExtensionValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.MenuExtensionValidator = MenuExtensionValidator;\r\n\t\tvar ExtensionPointsValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(ExtensionPointsValidator, _super);\r\n\t\t    function ExtensionPointsValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    ExtensionPointsValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"visualContextMenu\",\r\n\t\t                validators: [validator_1.Validators.menuExtensionValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"visualOptionsMenu\",\r\n\t\t                validators: [validator_1.Validators.menuExtensionValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return ExtensionPointsValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.ExtensionPointsValidator = ExtensionPointsValidator;\r\n\t\tvar ExtensionItemValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(ExtensionItemValidator, _super);\r\n\t\t    function ExtensionItemValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    ExtensionItemValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"name\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"extend\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.extensionPointsValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return ExtensionItemValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.ExtensionItemValidator = ExtensionItemValidator;\r\n\t\tvar CommandExtensionValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(CommandExtensionValidator, _super);\r\n\t\t    function CommandExtensionValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    CommandExtensionValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"title\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"icon\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"selector\",\r\n\t\t                validators: [validator_1.Validators.commandExtensionSelectorValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return CommandExtensionValidator;\r\n\t\t}(ExtensionItemValidator));\r\n\t\texports.CommandExtensionValidator = CommandExtensionValidator;\r\n\t\tvar ExtensionValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(ExtensionValidator, _super);\r\n\t\t    function ExtensionValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    ExtensionValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"command\",\r\n\t\t                validators: [validator_1.Validators.commandExtensionValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return ExtensionValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.ExtensionValidator = ExtensionValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 4 */\n\t/***/ (function(module, exports) {\n\t\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar MultipleFieldsValidator = /** @class */ (function () {\r\n\t\t    function MultipleFieldsValidator(fieldValidatorsPairs) {\r\n\t\t        this.fieldValidatorsPairs = fieldValidatorsPairs;\r\n\t\t    }\r\n\t\t    MultipleFieldsValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (!this.fieldValidatorsPairs) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var fieldsPath = path ? path + \".\" + field : field;\r\n\t\t        for (var _i = 0, _a = this.fieldValidatorsPairs; _i < _a.length; _i++) {\r\n\t\t            var fieldValidators = _a[_i];\r\n\t\t            for (var _b = 0, _c = fieldValidators.validators; _b < _c.length; _b++) {\r\n\t\t                var validator = _c[_b];\r\n\t\t                var errors = validator.validate(input[fieldValidators.field], fieldsPath, fieldValidators.field);\r\n\t\t                if (errors) {\r\n\t\t                    return errors;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return MultipleFieldsValidator;\r\n\t\t}());\r\n\t\texports.MultipleFieldsValidator = MultipleFieldsValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 5 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar SettingsValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(SettingsValidator, _super);\r\n\t\t    function SettingsValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    SettingsValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"filterPaneEnabled\",\r\n\t\t                validators: [validator_1.Validators.booleanValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"navContentPaneEnabled\",\r\n\t\t                validators: [validator_1.Validators.booleanValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"bookmarksPaneEnabled\",\r\n\t\t                validators: [validator_1.Validators.booleanValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"useCustomSaveAsDialog\",\r\n\t\t                validators: [validator_1.Validators.booleanValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"extensions\",\r\n\t\t                validators: [validator_1.Validators.extensionArrayValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"layoutType\",\r\n\t\t                validators: [validator_1.Validators.layoutTypeValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"customLayout\",\r\n\t\t                validators: [validator_1.Validators.customLayoutValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"background\",\r\n\t\t                validators: [validator_1.Validators.backgroundValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"visualSettings\",\r\n\t\t                validators: [validator_1.Validators.visualSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"hideErrors\",\r\n\t\t                validators: [validator_1.Validators.booleanValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"commands\",\r\n\t\t                validators: [validator_1.Validators.commandsSettingsArrayValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return SettingsValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.SettingsValidator = SettingsValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 6 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar PlayBookmarkRequestValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(PlayBookmarkRequestValidator, _super);\r\n\t\t    function PlayBookmarkRequestValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    PlayBookmarkRequestValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"playMode\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, new typeValidator_1.EnumValidator([0, 1])]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return PlayBookmarkRequestValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.PlayBookmarkRequestValidator = PlayBookmarkRequestValidator;\r\n\t\tvar AddBookmarkRequestValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(AddBookmarkRequestValidator, _super);\r\n\t\t    function AddBookmarkRequestValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    AddBookmarkRequestValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"state\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"displayName\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"apply\",\r\n\t\t                validators: [validator_1.Validators.booleanValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return AddBookmarkRequestValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.AddBookmarkRequestValidator = AddBookmarkRequestValidator;\r\n\t\tvar ApplyBookmarkByNameRequestValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(ApplyBookmarkByNameRequestValidator, _super);\r\n\t\t    function ApplyBookmarkByNameRequestValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    ApplyBookmarkByNameRequestValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"name\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return ApplyBookmarkByNameRequestValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.ApplyBookmarkByNameRequestValidator = ApplyBookmarkByNameRequestValidator;\r\n\t\tvar ApplyBookmarkStateRequestValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(ApplyBookmarkStateRequestValidator, _super);\r\n\t\t    function ApplyBookmarkStateRequestValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    ApplyBookmarkStateRequestValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"state\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return ApplyBookmarkStateRequestValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.ApplyBookmarkStateRequestValidator = ApplyBookmarkStateRequestValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 7 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar FilterColumnTargetValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(FilterColumnTargetValidator, _super);\r\n\t\t    function FilterColumnTargetValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    FilterColumnTargetValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"table\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"column\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return FilterColumnTargetValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.FilterColumnTargetValidator = FilterColumnTargetValidator;\r\n\t\tvar FilterKeyColumnsTargetValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(FilterKeyColumnsTargetValidator, _super);\r\n\t\t    function FilterKeyColumnsTargetValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    FilterKeyColumnsTargetValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"keys\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringArrayValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return FilterKeyColumnsTargetValidator;\r\n\t\t}(FilterColumnTargetValidator));\r\n\t\texports.FilterKeyColumnsTargetValidator = FilterKeyColumnsTargetValidator;\r\n\t\tvar FilterHierarchyTargetValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(FilterHierarchyTargetValidator, _super);\r\n\t\t    function FilterHierarchyTargetValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    FilterHierarchyTargetValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"table\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"hierarchy\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"hierarchyLevel\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return FilterHierarchyTargetValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.FilterHierarchyTargetValidator = FilterHierarchyTargetValidator;\r\n\t\tvar FilterKeyHierarchyTargetValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(FilterKeyHierarchyTargetValidator, _super);\r\n\t\t    function FilterKeyHierarchyTargetValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    FilterKeyHierarchyTargetValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"keys\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringArrayValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return FilterKeyHierarchyTargetValidator;\r\n\t\t}(FilterHierarchyTargetValidator));\r\n\t\texports.FilterKeyHierarchyTargetValidator = FilterKeyHierarchyTargetValidator;\r\n\t\tvar FilterMeasureTargetValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(FilterMeasureTargetValidator, _super);\r\n\t\t    function FilterMeasureTargetValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    FilterMeasureTargetValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"table\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"measure\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return FilterMeasureTargetValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.FilterMeasureTargetValidator = FilterMeasureTargetValidator;\r\n\t\tvar BasicFilterValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(BasicFilterValidator, _super);\r\n\t\t    function BasicFilterValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    BasicFilterValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"target\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"operator\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"values\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.anyArrayValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"filterType\",\r\n\t\t                validators: [validator_1.Validators.basicFilterTypeValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return BasicFilterValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.BasicFilterValidator = BasicFilterValidator;\r\n\t\tvar AdvancedFilterValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(AdvancedFilterValidator, _super);\r\n\t\t    function AdvancedFilterValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    AdvancedFilterValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"target\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"logicalOperator\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"conditions\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterConditionsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"filterType\",\r\n\t\t                validators: [validator_1.Validators.advancedFilterTypeValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return AdvancedFilterValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.AdvancedFilterValidator = AdvancedFilterValidator;\r\n\t\tvar RelativeDateFilterValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(RelativeDateFilterValidator, _super);\r\n\t\t    function RelativeDateFilterValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    RelativeDateFilterValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"target\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"operator\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.relativeDateFilterOperatorValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"timeUnitsCount\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.numberValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"timeUnitType\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.relativeDateFilterTimeUnitTypeValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"includeToday\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.booleanValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"filterType\",\r\n\t\t                validators: [validator_1.Validators.relativeDateFilterTypeValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return RelativeDateFilterValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.RelativeDateFilterValidator = RelativeDateFilterValidator;\r\n\t\tvar TopNFilterValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(TopNFilterValidator, _super);\r\n\t\t    function TopNFilterValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    TopNFilterValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"target\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"operator\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"itemCount\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.numberValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"filterType\",\r\n\t\t                validators: [validator_1.Validators.topNFilterTypeValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"orderBy\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return TopNFilterValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.TopNFilterValidator = TopNFilterValidator;\r\n\t\tvar NotSupportedFilterValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(NotSupportedFilterValidator, _super);\r\n\t\t    function NotSupportedFilterValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    NotSupportedFilterValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"target\",\r\n\t\t                validators: [validator_1.Validators.filterTargetValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"message\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"notSupportedTypeName\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"filterType\",\r\n\t\t                validators: [validator_1.Validators.notSupportedFilterTypeValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return NotSupportedFilterValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.NotSupportedFilterValidator = NotSupportedFilterValidator;\r\n\t\tvar IncludeExcludeFilterValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(IncludeExcludeFilterValidator, _super);\r\n\t\t    function IncludeExcludeFilterValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    IncludeExcludeFilterValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"target\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.filterTargetValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"isExclude\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.booleanValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"values\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.anyArrayValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"filterType\",\r\n\t\t                validators: [validator_1.Validators.includeExludeFilterTypeValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return IncludeExcludeFilterValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.IncludeExcludeFilterValidator = IncludeExcludeFilterValidator;\r\n\t\tvar FilterValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(FilterValidator, _super);\r\n\t\t    function FilterValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    FilterValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        return validator_1.Validators.anyFilterValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return FilterValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.FilterValidator = FilterValidator;\r\n\t\tvar ConditionItemValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(ConditionItemValidator, _super);\r\n\t\t    function ConditionItemValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    ConditionItemValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"value\",\r\n\t\t                validators: [validator_1.Validators.anyValueValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"operator\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return ConditionItemValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.ConditionItemValidator = ConditionItemValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 8 */\n\t/***/ (function(module, exports) {\n\t\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar FieldRequiredValidator = /** @class */ (function () {\r\n\t\t    function FieldRequiredValidator() {\r\n\t\t    }\r\n\t\t    FieldRequiredValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return [{\r\n\t\t                    message: field + \" is required\",\r\n\t\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t\t                    keyword: \"required\"\r\n\t\t                }];\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return FieldRequiredValidator;\r\n\t\t}());\r\n\t\texports.FieldRequiredValidator = FieldRequiredValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 9 */\n\t/***/ (function(module, exports) {\n\t\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar AnyOfValidator = /** @class */ (function () {\r\n\t\t    function AnyOfValidator(validators) {\r\n\t\t        this.validators = validators;\r\n\t\t    }\r\n\t\t    AnyOfValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var valid = false;\r\n\t\t        for (var _i = 0, _a = this.validators; _i < _a.length; _i++) {\r\n\t\t            var validator = _a[_i];\r\n\t\t            var errors = validator.validate(input, path, field);\r\n\t\t            if (!errors) {\r\n\t\t                valid = true;\r\n\t\t                break;\r\n\t\t            }\r\n\t\t        }\r\n\t\t        if (!valid) {\r\n\t\t            return [{\r\n\t\t                    message: field + \" property is invalid\",\r\n\t\t                    path: (path ? path + \".\" : \"\") + field,\r\n\t\t                    keyword: \"invalid\"\r\n\t\t                }];\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return AnyOfValidator;\r\n\t\t}());\r\n\t\texports.AnyOfValidator = AnyOfValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 10 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar ReportLoadValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(ReportLoadValidator, _super);\r\n\t\t    function ReportLoadValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    ReportLoadValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"accessToken\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"id\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"groupId\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"settings\",\r\n\t\t                validators: [validator_1.Validators.settingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"pageName\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"filters\",\r\n\t\t                validators: [validator_1.Validators.filtersArrayValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"permissions\",\r\n\t\t                validators: [validator_1.Validators.permissionsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"viewMode\",\r\n\t\t                validators: [validator_1.Validators.viewModeValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"tokenType\",\r\n\t\t                validators: [validator_1.Validators.tokenTypeValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"bookmark\",\r\n\t\t                validators: [validator_1.Validators.applyBookmarkValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"theme\",\r\n\t\t                validators: [validator_1.Validators.customThemeValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return ReportLoadValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.ReportLoadValidator = ReportLoadValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 11 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar ReportCreateValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(ReportCreateValidator, _super);\r\n\t\t    function ReportCreateValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    ReportCreateValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"accessToken\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"datasetId\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"groupId\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"tokenType\",\r\n\t\t                validators: [validator_1.Validators.tokenTypeValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"theme\",\r\n\t\t                validators: [validator_1.Validators.customThemeValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return ReportCreateValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.ReportCreateValidator = ReportCreateValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 12 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar DashboardLoadValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(DashboardLoadValidator, _super);\r\n\t\t    function DashboardLoadValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    DashboardLoadValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"accessToken\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"id\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"groupId\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"pageView\",\r\n\t\t                validators: [validator_1.Validators.pageViewFieldValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"tokenType\",\r\n\t\t                validators: [validator_1.Validators.tokenTypeValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return DashboardLoadValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.DashboardLoadValidator = DashboardLoadValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 13 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar TileLoadValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(TileLoadValidator, _super);\r\n\t\t    function TileLoadValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    TileLoadValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"accessToken\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"id\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"dashboardId\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"groupId\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"pageView\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"tokenType\",\r\n\t\t                validators: [validator_1.Validators.tokenTypeValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"width\",\r\n\t\t                validators: [validator_1.Validators.numberValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"height\",\r\n\t\t                validators: [validator_1.Validators.numberValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return TileLoadValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.TileLoadValidator = TileLoadValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 14 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar PageSizeValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(PageSizeValidator, _super);\r\n\t\t    function PageSizeValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    PageSizeValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"type\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.pageSizeTypeValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return PageSizeValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.PageSizeValidator = PageSizeValidator;\r\n\t\tvar CustomPageSizeValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(CustomPageSizeValidator, _super);\r\n\t\t    function CustomPageSizeValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    CustomPageSizeValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"width\",\r\n\t\t                validators: [validator_1.Validators.numberValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"height\",\r\n\t\t                validators: [validator_1.Validators.numberValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return CustomPageSizeValidator;\r\n\t\t}(PageSizeValidator));\r\n\t\texports.CustomPageSizeValidator = CustomPageSizeValidator;\r\n\t\tvar PageValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(PageValidator, _super);\r\n\t\t    function PageValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    PageValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"name\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return PageValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.PageValidator = PageValidator;\r\n\t\tvar PageViewFieldValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(PageViewFieldValidator, _super);\r\n\t\t    function PageViewFieldValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    PageViewFieldValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var possibleValues = [\"actualSize\", \"fitToWidth\", \"oneColumn\"];\r\n\t\t        if (possibleValues.indexOf(input) < 0) {\r\n\t\t            return [{\r\n\t\t                    message: \"pageView must be a string with one of the following values: \\\"actualSize\\\", \\\"fitToWidth\\\", \\\"oneColumn\\\"\"\r\n\t\t                }];\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return PageViewFieldValidator;\r\n\t\t}(typeValidator_1.StringValidator));\r\n\t\texports.PageViewFieldValidator = PageViewFieldValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 15 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar LoadQnaValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(LoadQnaValidator, _super);\r\n\t\t    function LoadQnaValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    LoadQnaValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"accessToken\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"datasetIds\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringArrayValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"question\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"viewMode\",\r\n\t\t                validators: [validator_1.Validators.viewModeValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"settings\",\r\n\t\t                validators: [validator_1.Validators.qnaSettingValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"tokenType\",\r\n\t\t                validators: [validator_1.Validators.tokenTypeValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"groupId\",\r\n\t\t                validators: [validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return LoadQnaValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.LoadQnaValidator = LoadQnaValidator;\r\n\t\tvar QnaSettingsValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(QnaSettingsValidator, _super);\r\n\t\t    function QnaSettingsValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    QnaSettingsValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"filterPaneEnabled\",\r\n\t\t                validators: [validator_1.Validators.booleanValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"hideErrors\",\r\n\t\t                validators: [validator_1.Validators.booleanValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return QnaSettingsValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.QnaSettingsValidator = QnaSettingsValidator;\r\n\t\tvar QnaInterpretInputDataValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(QnaInterpretInputDataValidator, _super);\r\n\t\t    function QnaInterpretInputDataValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    QnaInterpretInputDataValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"datasetIds\",\r\n\t\t                validators: [validator_1.Validators.stringArrayValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"question\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return QnaInterpretInputDataValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.QnaInterpretInputDataValidator = QnaInterpretInputDataValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 16 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar SaveAsParametersValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(SaveAsParametersValidator, _super);\r\n\t\t    function SaveAsParametersValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    SaveAsParametersValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"name\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return SaveAsParametersValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.SaveAsParametersValidator = SaveAsParametersValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 17 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar MapValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(MapValidator, _super);\r\n\t\t    function MapValidator(keyValidators, valueValidators) {\r\n\t\t        var _this = _super.call(this) || this;\r\n\t\t        _this.keyValidators = keyValidators;\r\n\t\t        _this.valueValidators = valueValidators;\r\n\t\t        return _this;\r\n\t\t    }\r\n\t\t    MapValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        for (var key in input) {\r\n\t\t            if (input.hasOwnProperty(key)) {\r\n\t\t                var fieldsPath = (path ? path + \".\" : \"\") + field + \".\" + key;\r\n\t\t                for (var _i = 0, _a = this.keyValidators; _i < _a.length; _i++) {\r\n\t\t                    var keyValidator = _a[_i];\r\n\t\t                    errors = keyValidator.validate(key, fieldsPath, field);\r\n\t\t                    if (errors) {\r\n\t\t                        return errors;\r\n\t\t                    }\r\n\t\t                }\r\n\t\t                for (var _b = 0, _c = this.valueValidators; _b < _c.length; _b++) {\r\n\t\t                    var valueValidator = _c[_b];\r\n\t\t                    errors = valueValidator.validate(input[key], fieldsPath, field);\r\n\t\t                    if (errors) {\r\n\t\t                        return errors;\r\n\t\t                    }\r\n\t\t                }\r\n\t\t            }\r\n\t\t        }\r\n\t\t        return null;\r\n\t\t    };\r\n\t\t    return MapValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.MapValidator = MapValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 18 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar CustomLayoutValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(CustomLayoutValidator, _super);\r\n\t\t    function CustomLayoutValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    CustomLayoutValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"pageSize\",\r\n\t\t                validators: [validator_1.Validators.pageSizeValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"displayOption\",\r\n\t\t                validators: [validator_1.Validators.customLayoutDisplayOptionValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"pagesLayout\",\r\n\t\t                validators: [validator_1.Validators.pagesLayoutValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return CustomLayoutValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.CustomLayoutValidator = CustomLayoutValidator;\r\n\t\tvar VisualLayoutValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(VisualLayoutValidator, _super);\r\n\t\t    function VisualLayoutValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    VisualLayoutValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"x\",\r\n\t\t                validators: [validator_1.Validators.numberValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"y\",\r\n\t\t                validators: [validator_1.Validators.numberValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"z\",\r\n\t\t                validators: [validator_1.Validators.numberValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"width\",\r\n\t\t                validators: [validator_1.Validators.numberValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"height\",\r\n\t\t                validators: [validator_1.Validators.numberValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"displayState\",\r\n\t\t                validators: [validator_1.Validators.displayStateValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return VisualLayoutValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.VisualLayoutValidator = VisualLayoutValidator;\r\n\t\tvar DisplayStateValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(DisplayStateValidator, _super);\r\n\t\t    function DisplayStateValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    DisplayStateValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"mode\",\r\n\t\t                validators: [validator_1.Validators.displayStateModeValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return DisplayStateValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.DisplayStateValidator = DisplayStateValidator;\r\n\t\tvar PageLayoutValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(PageLayoutValidator, _super);\r\n\t\t    function PageLayoutValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    PageLayoutValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"visualsLayout\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.pageLayoutValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"defaultLayout\",\r\n\t\t                validators: [validator_1.Validators.visualLayoutValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return PageLayoutValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.PageLayoutValidator = PageLayoutValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 19 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar ExportDataRequestValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(ExportDataRequestValidator, _super);\r\n\t\t    function ExportDataRequestValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    ExportDataRequestValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"rows\",\r\n\t\t                validators: [new typeValidator_1.NumberValidator()]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"exportDataType\",\r\n\t\t                validators: [new typeValidator_1.EnumValidator([0, 1])]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return ExportDataRequestValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.ExportDataRequestValidator = ExportDataRequestValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 20 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar typeValidator_2 = __webpack_require__(2);\r\n\t\tvar VisualSelectorValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(VisualSelectorValidator, _super);\r\n\t\t    function VisualSelectorValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    VisualSelectorValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                // Not required for this selector only - Backward compatibility \r\n\t\t                field: \"$schema\",\r\n\t\t                validators: [validator_1.Validators.stringValidator, new typeValidator_2.SchemaValidator(\"http://powerbi.com/product/schema#visualSelector\")]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"visualName\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return VisualSelectorValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.VisualSelectorValidator = VisualSelectorValidator;\r\n\t\tvar VisualTypeSelectorValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(VisualTypeSelectorValidator, _super);\r\n\t\t    function VisualTypeSelectorValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    VisualTypeSelectorValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"$schema\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator, new typeValidator_2.SchemaValidator(\"http://powerbi.com/product/schema#visualTypeSelector\")]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"visualType\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return VisualTypeSelectorValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.VisualTypeSelectorValidator = VisualTypeSelectorValidator;\r\n\t\tvar SlicerTargetSelectorValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(SlicerTargetSelectorValidator, _super);\r\n\t\t    function SlicerTargetSelectorValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    SlicerTargetSelectorValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"$schema\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.stringValidator, new typeValidator_2.SchemaValidator(\"http://powerbi.com/product/schema#slicerTargetSelector\")]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"target\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.slicerTargetValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return SlicerTargetSelectorValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.SlicerTargetSelectorValidator = SlicerTargetSelectorValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 21 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar SlicerValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(SlicerValidator, _super);\r\n\t\t    function SlicerValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    SlicerValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"selector\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.slicerSelectorValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"state\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.slicerStateValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return SlicerValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.SlicerValidator = SlicerValidator;\r\n\t\tvar SlicerStateValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(SlicerStateValidator, _super);\r\n\t\t    function SlicerStateValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    SlicerStateValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"filters\",\r\n\t\t                validators: [validator_1.Validators.filtersArrayValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return SlicerStateValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.SlicerStateValidator = SlicerStateValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 22 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar VisualSettingsValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(VisualSettingsValidator, _super);\r\n\t\t    function VisualSettingsValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    VisualSettingsValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"visualHeaders\",\r\n\t\t                validators: [validator_1.Validators.visualHeadersValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return VisualSettingsValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.VisualSettingsValidator = VisualSettingsValidator;\r\n\t\tvar VisualHeaderSettingsValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(VisualHeaderSettingsValidator, _super);\r\n\t\t    function VisualHeaderSettingsValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    VisualHeaderSettingsValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"visible\",\r\n\t\t                validators: [validator_1.Validators.booleanValidator]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return VisualHeaderSettingsValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.VisualHeaderSettingsValidator = VisualHeaderSettingsValidator;\r\n\t\tvar VisualHeaderValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(VisualHeaderValidator, _super);\r\n\t\t    function VisualHeaderValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    VisualHeaderValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"settings\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.visualHeaderSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"selector\",\r\n\t\t                validators: [validator_1.Validators.visualHeaderSelectorValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return VisualHeaderValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.VisualHeaderValidator = VisualHeaderValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 23 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar validator_1 = __webpack_require__(1);\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar CommandsSettingsValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(CommandsSettingsValidator, _super);\r\n\t\t    function CommandsSettingsValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    CommandsSettingsValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"copy\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"drill\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"drillthrough\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"expandCollapse\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"exportData\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"includeExclude\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"removeVisual\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"search\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"seeData\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"sort\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"spotlight\",\r\n\t\t                validators: [validator_1.Validators.singleCommandSettingsValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return CommandsSettingsValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.CommandsSettingsValidator = CommandsSettingsValidator;\r\n\t\tvar SingleCommandSettingsValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(SingleCommandSettingsValidator, _super);\r\n\t\t    function SingleCommandSettingsValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    SingleCommandSettingsValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"displayOption\",\r\n\t\t                validators: [validator_1.Validators.fieldRequiredValidator, validator_1.Validators.commandDisplayOptionValidator]\r\n\t\t            },\r\n\t\t            {\r\n\t\t                field: \"selector\",\r\n\t\t                validators: [validator_1.Validators.visualCommandSelectorValidator]\r\n\t\t            },\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return SingleCommandSettingsValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.SingleCommandSettingsValidator = SingleCommandSettingsValidator;\r\n\t\n\t\n\t/***/ }),\n\t/* 24 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t    var extendStatics = Object.setPrototypeOf ||\r\n\t\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t    return function (d, b) {\r\n\t\t        extendStatics(d, b);\r\n\t\t        function __() { this.constructor = d; }\r\n\t\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t    };\r\n\t\t})();\r\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\tvar multipleFieldsValidator_1 = __webpack_require__(4);\r\n\t\tvar typeValidator_1 = __webpack_require__(2);\r\n\t\tvar CustomThemeValidator = /** @class */ (function (_super) {\r\n\t\t    __extends(CustomThemeValidator, _super);\r\n\t\t    function CustomThemeValidator() {\r\n\t\t        return _super !== null && _super.apply(this, arguments) || this;\r\n\t\t    }\r\n\t\t    CustomThemeValidator.prototype.validate = function (input, path, field) {\r\n\t\t        if (input == null) {\r\n\t\t            return null;\r\n\t\t        }\r\n\t\t        var errors = _super.prototype.validate.call(this, input, path, field);\r\n\t\t        if (errors) {\r\n\t\t            return errors;\r\n\t\t        }\r\n\t\t        var fields = [\r\n\t\t            {\r\n\t\t                field: \"themeJson\",\r\n\t\t                validators: [new typeValidator_1.ObjectValidator()]\r\n\t\t            }\r\n\t\t        ];\r\n\t\t        var multipleFieldsValidator = new multipleFieldsValidator_1.MultipleFieldsValidator(fields);\r\n\t\t        return multipleFieldsValidator.validate(input, path, field);\r\n\t\t    };\r\n\t\t    return CustomThemeValidator;\r\n\t\t}(typeValidator_1.ObjectValidator));\r\n\t\texports.CustomThemeValidator = CustomThemeValidator;\r\n\t\n\t\n\t/***/ })\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=models.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar embed = __webpack_require__(2);\r\n\tvar models = __webpack_require__(4);\r\n\tvar utils = __webpack_require__(3);\r\n\tvar errors = __webpack_require__(6);\r\n\tvar page_1 = __webpack_require__(7);\r\n\tvar defaults_1 = __webpack_require__(9);\r\n\tvar bookmarksManager_1 = __webpack_require__(10);\r\n\t/**\r\n\t * The Power BI Report embed component\r\n\t *\r\n\t * @export\r\n\t * @class Report\r\n\t * @extends {embed.Embed}\r\n\t * @implements {IReportNode}\r\n\t * @implements {IFilterable}\r\n\t */\r\n\tvar Report = (function (_super) {\r\n\t    __extends(Report, _super);\r\n\t    /**\r\n\t     * Creates an instance of a Power BI Report.\r\n\t     *\r\n\t     * @param {service.Service} service\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IEmbedConfiguration} config\r\n\t     */\r\n\t    function Report(service, element, baseConfig, phasedRender, iframe) {\r\n\t        var config = baseConfig;\r\n\t        var filterPaneEnabled = (config.settings && config.settings.filterPaneEnabled) || !(element.getAttribute(Report.filterPaneEnabledAttribute) === \"false\");\r\n\t        var navContentPaneEnabled = (config.settings && config.settings.navContentPaneEnabled) || !(element.getAttribute(Report.navContentPaneEnabledAttribute) === \"false\");\r\n\t        var settings = utils.assign({\r\n\t            filterPaneEnabled: filterPaneEnabled,\r\n\t            navContentPaneEnabled: navContentPaneEnabled\r\n\t        }, config.settings);\r\n\t        var configCopy = utils.assign({ settings: settings }, config);\r\n\t        _super.call(this, service, element, configCopy, iframe, phasedRender);\r\n\t        this.loadPath = \"/report/load\";\r\n\t        this.phasedLoadPath = \"/report/prepare\";\r\n\t        Array.prototype.push.apply(this.allowedEvents, Report.allowedEvents);\r\n\t        this.bookmarksManager = new bookmarksManager_1.BookmarksManager(service, config, this.iframe);\r\n\t    }\r\n\t    /**\r\n\t     * Adds backwards compatibility for the previous load configuration, which used the reportId query parameter to specify the report ID\r\n\t     * (e.g. http://embedded.powerbi.com/appTokenReportEmbed?reportId=854846ed-2106-4dc2-bc58-eb77533bf2f1).\r\n\t     *\r\n\t     * By extracting the ID we can ensure that the ID is always explicitly provided as part of the load configuration.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {string} url\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Report.findIdFromEmbedUrl = function (url) {\r\n\t        var reportIdRegEx = /reportId=\"?([^&]+)\"?/;\r\n\t        var reportIdMatch = url.match(reportIdRegEx);\r\n\t        var reportId;\r\n\t        if (reportIdMatch) {\r\n\t            reportId = reportIdMatch[1];\r\n\t        }\r\n\t        return reportId;\r\n\t    };\r\n\t    /**\r\n\t     * Render a preloaded report, using phased embedding API\r\n\t     *\r\n\t     * ```javascript\r\n\t     * // Load report\r\n\t     * var report = powerbi.load(element, config);\r\n\t     *\r\n\t     * ...\r\n\t     *\r\n\t     * // Render report\r\n\t     * report.render()\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.render = function (config) {\r\n\t        return this.service.hpm.post(\"/report/render\", config, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Gets filters that are applied at the report level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * // Get filters applied at report level\r\n\t     * report.getFilters()\r\n\t     *   .then(filters => {\r\n\t     *     ...\r\n\t     *   });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<models.IFilter[]>}\r\n\t     */\r\n\t    Report.prototype.getFilters = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.get(\"/report/filters\", { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Gets the report ID from the first available location: options, attribute, embed url.\r\n\t     *\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Report.prototype.getId = function () {\r\n\t        var config = this.config;\r\n\t        var reportId = config.id || this.element.getAttribute(Report.reportIdAttribute) || Report.findIdFromEmbedUrl(config.embedUrl);\r\n\t        if (typeof reportId !== 'string' || reportId.length === 0) {\r\n\t            throw new Error(\"Report id is required, but it was not found. You must provide an id either as part of embed configuration or as attribute '\" + Report.reportIdAttribute + \"'.\");\r\n\t        }\r\n\t        return reportId;\r\n\t    };\r\n\t    /**\r\n\t     * Gets the list of pages within the report.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.getPages()\r\n\t     *  .then(pages => {\r\n\t     *      ...\r\n\t     *  });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<Page[]>}\r\n\t     */\r\n\t    Report.prototype.getPages = function () {\r\n\t        var _this = this;\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.get('/report/pages', { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body\r\n\t                .map(function (page) {\r\n\t                return new page_1.Page(_this, page.name, page.displayName, page.isActive, page.visibility, page.defaultSize, page.defaultDisplayOption);\r\n\t            });\r\n\t        }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Creates an instance of a Page.\r\n\t     *\r\n\t     * Normally you would get Page objects by calling `report.getPages()`, but in the case\r\n\t     * that the page name is known and you want to perform an action on a page without having to retrieve it\r\n\t     * you can create it directly.\r\n\t     *\r\n\t     * Note: Because you are creating the page manually there is no guarantee that the page actually exists in the report, and subsequent requests could fail.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * const page = report.page('ReportSection1');\r\n\t     * page.setActive();\r\n\t     * ```\r\n\t     *\r\n\t     * @param {string} name\r\n\t     * @param {string} [displayName]\r\n\t     * @param {boolean} [isActive]\r\n\t     * @returns {Page}\r\n\t     */\r\n\t    Report.prototype.page = function (name, displayName, isActive, visibility) {\r\n\t        return new page_1.Page(this, name, displayName, isActive, visibility);\r\n\t    };\r\n\t    /**\r\n\t     * Prints the active page of the report by invoking `window.print()` on the embed iframe component.\r\n\t     */\r\n\t    Report.prototype.print = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.post('/report/print', null, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Removes all filters at the report level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.removeFilters();\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.removeFilters = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.setFilters([]);\r\n\t    };\r\n\t    /**\r\n\t     * Sets the active page of the report.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.setPage(\"page2\")\r\n\t     *  .catch(error => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {string} pageName\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.setPage = function (pageName) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        var page = {\r\n\t            name: pageName,\r\n\t            displayName: null,\r\n\t            isActive: true\r\n\t        };\r\n\t        return this.service.hpm.put('/report/pages/active', page, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Sets filters at the report level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * const filters: [\r\n\t     *    ...\r\n\t     * ];\r\n\t     *\r\n\t     * report.setFilters(filters)\r\n\t     *  .catch(errors => {\r\n\t     *    ...\r\n\t     *  });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {(models.IFilter[])} filters\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.setFilters = function (filters) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.put(\"/report/filters\", filters, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Updates visibility settings for the filter pane and the page navigation pane.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * const newSettings = {\r\n\t     *   navContentPaneEnabled: true,\r\n\t     *   filterPaneEnabled: false\r\n\t     * };\r\n\t     *\r\n\t     * report.updateSettings(newSettings)\r\n\t     *   .catch(error => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {models.ISettings} settings\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.updateSettings = function (settings) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl) && settings.customLayout != null) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.patch('/report/settings', settings, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Validate load configuration.\r\n\t     */\r\n\t    Report.prototype.validate = function (config) {\r\n\t        return models.validateReportLoad(config);\r\n\t    };\r\n\t    /**\r\n\t     * Populate config for load config\r\n\t     *\r\n\t     * @param {IEmbedConfigurationBase}\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Report.prototype.populateConfig = function (baseConfig) {\r\n\t        var config = baseConfig;\r\n\t        if (config.settings && (config.settings.layoutType === models.LayoutType.MobileLandscape || config.settings.layoutType === models.LayoutType.MobilePortrait))\r\n\t            config.embedUrl = utils.addParamToUrl(config.embedUrl, \"isMobile\", \"true\");\r\n\t        _super.prototype.populateConfig.call(this, config);\r\n\t        // TODO: Change when Object.assign is available.\r\n\t        var settings = utils.assign({}, defaults_1.Defaults.defaultSettings, config.settings);\r\n\t        config = utils.assign({ settings: settings }, config);\r\n\t        config.id = this.getId();\r\n\t        this.config = config;\r\n\t    };\r\n\t    /**\r\n\t     * Switch Report view mode.\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Report.prototype.switchMode = function (viewMode) {\r\n\t        var newMode;\r\n\t        if (typeof viewMode === \"string\") {\r\n\t            newMode = viewMode;\r\n\t        }\r\n\t        else {\r\n\t            newMode = this.viewModeToString(viewMode);\r\n\t        }\r\n\t        var url = '/report/switchMode/' + newMode;\r\n\t        return this.service.hpm.post(url, null, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t    * Refreshes data sources for the report.\r\n\t    *\r\n\t    * ```javascript\r\n\t    * report.refresh();\r\n\t    * ```\r\n\t    */\r\n\t    Report.prototype.refresh = function () {\r\n\t        return this.service.hpm.post('/report/refresh', null, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * checks if the report is saved.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.isSaved()\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<boolean>}\r\n\t     */\r\n\t    Report.prototype.isSaved = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return utils.isSavedInternal(this.service.hpm, this.config.uniqueId, this.iframe.contentWindow);\r\n\t    };\r\n\t    /**\r\n\t     * Apply a theme to the report\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.applyTheme(theme);\r\n\t     * ```\r\n\t     */\r\n\t    Report.prototype.applyTheme = function (theme) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.applyThemeInternal(theme);\r\n\t    };\r\n\t    /**\r\n\t    * Reset and apply the default theme of the report\r\n\t    *\r\n\t    * ```javascript\r\n\t    * report.resetTheme();\r\n\t    * ```\r\n\t    */\r\n\t    Report.prototype.resetTheme = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.applyThemeInternal({});\r\n\t    };\r\n\t    Report.prototype.applyThemeInternal = function (theme) {\r\n\t        return this.service.hpm.put('/report/theme', theme, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body;\r\n\t        })\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    Report.prototype.viewModeToString = function (viewMode) {\r\n\t        var mode;\r\n\t        switch (viewMode) {\r\n\t            case models.ViewMode.Edit:\r\n\t                mode = \"edit\";\r\n\t                break;\r\n\t            case models.ViewMode.View:\r\n\t                mode = \"view\";\r\n\t                break;\r\n\t        }\r\n\t        return mode;\r\n\t    };\r\n\t    Report.allowedEvents = [\"filtersApplied\", \"pageChanged\", \"commandTriggered\", \"swipeStart\", \"swipeEnd\", \"bookmarkApplied\"];\r\n\t    Report.reportIdAttribute = 'powerbi-report-id';\r\n\t    Report.filterPaneEnabledAttribute = 'powerbi-settings-filter-pane-enabled';\r\n\t    Report.navContentPaneEnabledAttribute = 'powerbi-settings-nav-content-pane-enabled';\r\n\t    Report.typeAttribute = 'powerbi-type';\r\n\t    Report.type = \"Report\";\r\n\t    return Report;\r\n\t}(embed.Embed));\r\n\texports.Report = Report;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\texports.APINotSupportedForRDLError = \"This API is currently not supported for RDL reports\";\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar visualDescriptor_1 = __webpack_require__(8);\r\n\tvar models = __webpack_require__(4);\r\n\tvar utils = __webpack_require__(3);\r\n\tvar errors = __webpack_require__(6);\r\n\t/**\r\n\t * A Power BI report page\r\n\t *\r\n\t * @export\r\n\t * @class Page\r\n\t * @implements {IPageNode}\r\n\t * @implements {IFilterable}\r\n\t */\r\n\tvar Page = (function () {\r\n\t    /**\r\n\t     * Creates an instance of a Power BI report page.\r\n\t     *\r\n\t     * @param {IReportNode} report\r\n\t     * @param {string} name\r\n\t     * @param {string} [displayName]\r\n\t     * @param {boolean} [isActivePage]\r\n\t     * @param {models.SectionVisibility} [visibility]\r\n\t     */\r\n\t    function Page(report, name, displayName, isActivePage, visibility, defaultSize, defaultDisplayOption) {\r\n\t        this.report = report;\r\n\t        this.name = name;\r\n\t        this.displayName = displayName;\r\n\t        this.isActive = isActivePage;\r\n\t        this.visibility = visibility;\r\n\t        this.defaultSize = defaultSize;\r\n\t        this.defaultDisplayOption = defaultDisplayOption;\r\n\t    }\r\n\t    /**\r\n\t     * Gets all page level filters within the report.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * page.getFilters()\r\n\t     *  .then(filters => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {(Promise<models.IFilter[]>)}\r\n\t     */\r\n\t    Page.prototype.getFilters = function () {\r\n\t        return this.report.service.hpm.get(\"/report/pages/\" + this.name + \"/filters\", { uid: this.report.config.uniqueId }, this.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Removes all filters from this page of the report.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * page.removeFilters();\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Page.prototype.removeFilters = function () {\r\n\t        return this.setFilters([]);\r\n\t    };\r\n\t    /**\r\n\t     * Makes the current page the active page of the report.\r\n\t     *\r\n\t     * ```javascripot\r\n\t     * page.setActive();\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Page.prototype.setActive = function () {\r\n\t        var page = {\r\n\t            name: this.name,\r\n\t            displayName: null,\r\n\t            isActive: true\r\n\t        };\r\n\t        return this.report.service.hpm.put('/report/pages/active', page, { uid: this.report.config.uniqueId }, this.report.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Sets all filters on the current page.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * page.setFilters(filters);\r\n\t     *   .catch(errors => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {(models.IFilter[])} filters\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Page.prototype.setFilters = function (filters) {\r\n\t        return this.report.service.hpm.put(\"/report/pages/\" + this.name + \"/filters\", filters, { uid: this.report.config.uniqueId }, this.report.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Gets all the visuals on the page.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * page.getVisuals()\r\n\t     *   .then(visuals => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<VisualDescriptor[]>}\r\n\t     */\r\n\t    Page.prototype.getVisuals = function () {\r\n\t        var _this = this;\r\n\t        if (utils.isRDLEmbed(this.report.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.report.service.hpm.get(\"/report/pages/\" + this.name + \"/visuals\", { uid: this.report.config.uniqueId }, this.report.iframe.contentWindow)\r\n\t            .then(function (response) {\r\n\t            return response.body\r\n\t                .map(function (visual) {\r\n\t                return new visualDescriptor_1.VisualDescriptor(_this, visual.name, visual.title, visual.type, visual.layout);\r\n\t            });\r\n\t        }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Checks if page has layout.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * page.hasLayout(layoutType)\r\n\t     *  .then(hasLayout: boolean => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {(Promise<boolean>)}\r\n\t     */\r\n\t    Page.prototype.hasLayout = function (layoutType) {\r\n\t        if (utils.isRDLEmbed(this.report.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        var layoutTypeEnum = models.LayoutType[layoutType];\r\n\t        return this.report.service.hpm.get(\"/report/pages/\" + this.name + \"/layoutTypes/\" + layoutTypeEnum, { uid: this.report.config.uniqueId }, this.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    return Page;\r\n\t}());\r\n\texports.Page = Page;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * A Power BI visual within a page\r\n\t *\r\n\t * @export\r\n\t * @class VisualDescriptor\r\n\t * @implements {IVisualNode}\r\n\t */\r\n\tvar VisualDescriptor = (function () {\r\n\t    function VisualDescriptor(page, name, title, type, layout) {\r\n\t        this.name = name;\r\n\t        this.title = title;\r\n\t        this.type = type;\r\n\t        this.layout = layout;\r\n\t        this.page = page;\r\n\t    }\r\n\t    /**\r\n\t     * Gets all visual level filters of the current visual.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.getFilters()\r\n\t     *  .then(filters => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {(Promise<models.IFilter[]>)}\r\n\t     */\r\n\t    VisualDescriptor.prototype.getFilters = function () {\r\n\t        return this.page.report.service.hpm.get(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/filters\", { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Removes all filters from the current visual.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.removeFilters();\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    VisualDescriptor.prototype.removeFilters = function () {\r\n\t        return this.setFilters([]);\r\n\t    };\r\n\t    /**\r\n\t     * Sets the filters on the current visual to 'filters'.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.setFilters(filters);\r\n\t     *   .catch(errors => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {(models.IFilter[])} filters\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    VisualDescriptor.prototype.setFilters = function (filters) {\r\n\t        return this.page.report.service.hpm.put(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/filters\", filters, { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Exports Visual data.\r\n\t     * Can export up to 30K rows.\r\n\t     * @param rows: Optional. Default value is 30K, maximum value is 30K as well.\r\n\t     * @param exportDataType: Optional. Default is models.ExportDataType.Summarized.\r\n\t     * ```javascript\r\n\t     * visual.exportData()\r\n\t     *  .then(data => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {(Promise<models.ExportDataType>)}\r\n\t     */\r\n\t    VisualDescriptor.prototype.exportData = function (exportDataType, rows) {\r\n\t        var exportDataRequestBody = {\r\n\t            rows: rows,\r\n\t            exportDataType: exportDataType\r\n\t        };\r\n\t        return this.page.report.service.hpm.post(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/exportData\", exportDataRequestBody, { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Set slicer state.\r\n\t     * Works only for visuals of type slicer.\r\n\t     * @param state: A new state which contains the slicer filters.\r\n\t     * ```javascript\r\n\t     * visual.setSlicerState()\r\n\t     *  .then(() => { ... });\r\n\t     * ```\r\n\t     */\r\n\t    VisualDescriptor.prototype.setSlicerState = function (state) {\r\n\t        return this.page.report.service.hpm.put(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/slicer\", state, { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Get slicer state.\r\n\t     * Works only for visuals of type slicer.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.getSlicerState()\r\n\t     *  .then(state => { ... });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {(Promise<models.ISlicerState>)}\r\n\t     */\r\n\t    VisualDescriptor.prototype.getSlicerState = function () {\r\n\t        return this.page.report.service.hpm.get(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/slicer\", { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Clone existing visual to a new instance.\r\n\t     *\r\n\t     * @returns {(Promise<models.ICloneVisualResponse>)}\r\n\t     */\r\n\t    VisualDescriptor.prototype.clone = function (request) {\r\n\t        if (request === void 0) { request = {}; }\r\n\t        return this.page.report.service.hpm.post(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/clone\", request, { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Sort a visual by dataField and direction.\r\n\t     *\r\n\t     * @param request: Sort by visual request.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.sortBy(request)\r\n\t     *  .then(() => { ... });\r\n\t     * ```\r\n\t     */\r\n\t    VisualDescriptor.prototype.sortBy = function (request) {\r\n\t        return this.page.report.service.hpm.put(\"/report/pages/\" + this.page.name + \"/visuals/\" + this.name + \"/sortBy\", request, { uid: this.page.report.config.uniqueId }, this.page.report.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    return VisualDescriptor;\r\n\t}());\r\n\texports.VisualDescriptor = VisualDescriptor;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\tvar Defaults = (function () {\r\n\t    function Defaults() {\r\n\t    }\r\n\t    Defaults.defaultSettings = {\r\n\t        filterPaneEnabled: true\r\n\t    };\r\n\t    Defaults.defaultQnaSettings = {\r\n\t        filterPaneEnabled: false\r\n\t    };\r\n\t    return Defaults;\r\n\t}());\r\n\texports.Defaults = Defaults;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar utils = __webpack_require__(3);\r\n\tvar errors = __webpack_require__(6);\r\n\t/**\r\n\t * Manages report bookmarks.\r\n\t *\r\n\t * @export\r\n\t * @class BookmarksManager\r\n\t * @implements {IBookmarksManager}\r\n\t */\r\n\tvar BookmarksManager = (function () {\r\n\t    function BookmarksManager(service, config, iframe) {\r\n\t        this.service = service;\r\n\t        this.config = config;\r\n\t        this.iframe = iframe;\r\n\t    }\r\n\t    /**\r\n\t     * Gets bookmarks that are defined in the report.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * // Gets bookmarks that are defined in the report\r\n\t     * bookmarksManager.getBookmarks()\r\n\t     *   .then(bookmarks => {\r\n\t     *     ...\r\n\t     *   });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<models.IReportBookmark[]>}\r\n\t     */\r\n\t    BookmarksManager.prototype.getBookmarks = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.get(\"/report/bookmarks\", { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Apply bookmark By name.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * bookmarksManager.apply(bookmarkName)\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    BookmarksManager.prototype.apply = function (bookmarkName) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        var request = {\r\n\t            name: bookmarkName\r\n\t        };\r\n\t        return this.service.hpm.post(\"/report/bookmarks/applyByName\", request, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Play bookmarks: Enter or Exit bookmarks presentation mode.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * // Enter presentation mode.\r\n\t     * bookmarksManager.play(true)\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    BookmarksManager.prototype.play = function (playMode) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        var playBookmarkRequest = {\r\n\t            playMode: playMode\r\n\t        };\r\n\t        return this.service.hpm.post(\"/report/bookmarks/play\", playBookmarkRequest, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Capture bookmark from current state.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * bookmarksManager.capture()\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<models.IReportBookmark>}\r\n\t     */\r\n\t    BookmarksManager.prototype.capture = function () {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        return this.service.hpm.post(\"/report/bookmarks/capture\", null, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Apply bookmark state.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * bookmarksManager.applyState(bookmarkName)\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    BookmarksManager.prototype.applyState = function (state) {\r\n\t        if (utils.isRDLEmbed(this.config.embedUrl)) {\r\n\t            return Promise.reject(errors.APINotSupportedForRDLError);\r\n\t        }\r\n\t        var request = {\r\n\t            state: state\r\n\t        };\r\n\t        return this.service.hpm.post(\"/report/bookmarks/applyState\", request, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    return BookmarksManager;\r\n\t}());\r\n\texports.BookmarksManager = BookmarksManager;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar models = __webpack_require__(4);\r\n\tvar embed = __webpack_require__(2);\r\n\tvar utils = __webpack_require__(3);\r\n\tvar defaults_1 = __webpack_require__(9);\r\n\tvar Create = (function (_super) {\r\n\t    __extends(Create, _super);\r\n\t    function Create(service, element, config, phasedRender) {\r\n\t        _super.call(this, service, element, config, /* iframe */ undefined, phasedRender);\r\n\t    }\r\n\t    /**\r\n\t     * Gets the dataset ID from the first available location: createConfig or embed url.\r\n\t     *\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Create.prototype.getId = function () {\r\n\t        var datasetId = (this.createConfig && this.createConfig.datasetId) ? this.createConfig.datasetId : Create.findIdFromEmbedUrl(this.config.embedUrl);\r\n\t        if (typeof datasetId !== 'string' || datasetId.length === 0) {\r\n\t            throw new Error('Dataset id is required, but it was not found. You must provide an id either as part of embed configuration.');\r\n\t        }\r\n\t        return datasetId;\r\n\t    };\r\n\t    /**\r\n\t     * Validate create report configuration.\r\n\t     */\r\n\t    Create.prototype.validate = function (config) {\r\n\t        return models.validateCreateReport(config);\r\n\t    };\r\n\t    /**\r\n\t     * Populate config for create\r\n\t     *\r\n\t     * @param {IEmbedConfigurationBase}\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Create.prototype.populateConfig = function (baseConfig) {\r\n\t        _super.prototype.populateConfig.call(this, baseConfig);\r\n\t        // TODO: Change when Object.assign is available.\r\n\t        var settings = utils.assign({}, defaults_1.Defaults.defaultSettings, baseConfig.settings);\r\n\t        this.config = utils.assign({ settings: settings }, baseConfig);\r\n\t        var config = this.config;\r\n\t        this.createConfig = {\r\n\t            accessToken: config.accessToken,\r\n\t            datasetId: config.datasetId || this.getId(),\r\n\t            groupId: config.groupId,\r\n\t            settings: settings,\r\n\t            tokenType: config.tokenType,\r\n\t            theme: config.theme\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * checks if the report is saved.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * report.isSaved()\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<boolean>}\r\n\t     */\r\n\t    Create.prototype.isSaved = function () {\r\n\t        return utils.isSavedInternal(this.service.hpm, this.config.uniqueId, this.iframe.contentWindow);\r\n\t    };\r\n\t    /**\r\n\t     * Adds the ability to get datasetId from url.\r\n\t     * (e.g. http://embedded.powerbi.com/appTokenReportEmbed?datasetId=854846ed-2106-4dc2-bc58-eb77533bf2f1).\r\n\t     *\r\n\t     * By extracting the ID we can ensure that the ID is always explicitly provided as part of the create configuration.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {string} url\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Create.findIdFromEmbedUrl = function (url) {\r\n\t        var datasetIdRegEx = /datasetId=\"?([^&]+)\"?/;\r\n\t        var datasetIdMatch = url.match(datasetIdRegEx);\r\n\t        var datasetId;\r\n\t        if (datasetIdMatch) {\r\n\t            datasetId = datasetIdMatch[1];\r\n\t        }\r\n\t        return datasetId;\r\n\t    };\r\n\t    return Create;\r\n\t}(embed.Embed));\r\n\texports.Create = Create;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar embed = __webpack_require__(2);\r\n\tvar models = __webpack_require__(4);\r\n\tvar utils = __webpack_require__(3);\r\n\tvar defaults_1 = __webpack_require__(9);\r\n\t/**\r\n\t * A Power BI Dashboard embed component\r\n\t *\r\n\t * @export\r\n\t * @class Dashboard\r\n\t * @extends {embed.Embed}\r\n\t * @implements {IDashboardNode}\r\n\t * @implements {IFilterable}\r\n\t */\r\n\tvar Dashboard = (function (_super) {\r\n\t    __extends(Dashboard, _super);\r\n\t    /**\r\n\t     * Creates an instance of a Power BI Dashboard.\r\n\t     *\r\n\t     * @param {service.Service} service\r\n\t     * @param {HTMLElement} element\r\n\t     */\r\n\t    function Dashboard(service, element, config, phasedRender) {\r\n\t        _super.call(this, service, element, config, /* iframe */ undefined, phasedRender);\r\n\t        this.loadPath = \"/dashboard/load\";\r\n\t        this.phasedLoadPath = \"/dashboard/prepare\";\r\n\t        Array.prototype.push.apply(this.allowedEvents, Dashboard.allowedEvents);\r\n\t    }\r\n\t    /**\r\n\t     * This adds backwards compatibility for older config which used the dashboardId query param to specify dashboard id.\r\n\t     * E.g. https://powerbi-df.analysis-df.windows.net/dashboardEmbedHost?dashboardId=e9363c62-edb6-4eac-92d3-2199c5ca2a9e\r\n\t     *\r\n\t     * By extracting the id we can ensure id is always explicitly provided as part of the load configuration.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {string} url\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Dashboard.findIdFromEmbedUrl = function (url) {\r\n\t        var dashboardIdRegEx = /dashboardId=\"?([^&]+)\"?/;\r\n\t        var dashboardIdMatch = url.match(dashboardIdRegEx);\r\n\t        var dashboardId;\r\n\t        if (dashboardIdMatch) {\r\n\t            dashboardId = dashboardIdMatch[1];\r\n\t        }\r\n\t        return dashboardId;\r\n\t    };\r\n\t    /**\r\n\t     * Get dashboard id from first available location: options, attribute, embed url.\r\n\t     *\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Dashboard.prototype.getId = function () {\r\n\t        var config = this.config;\r\n\t        var dashboardId = config.id || this.element.getAttribute(Dashboard.dashboardIdAttribute) || Dashboard.findIdFromEmbedUrl(config.embedUrl);\r\n\t        if (typeof dashboardId !== 'string' || dashboardId.length === 0) {\r\n\t            throw new Error(\"Dashboard id is required, but it was not found. You must provide an id either as part of embed configuration or as attribute '\" + Dashboard.dashboardIdAttribute + \"'.\");\r\n\t        }\r\n\t        return dashboardId;\r\n\t    };\r\n\t    /**\r\n\t     * Validate load configuration.\r\n\t     */\r\n\t    Dashboard.prototype.validate = function (baseConfig) {\r\n\t        var config = baseConfig;\r\n\t        var error = models.validateDashboardLoad(config);\r\n\t        return error ? error : this.ValidatePageView(config.pageView);\r\n\t    };\r\n\t    /**\r\n\t     * Populate config for load config\r\n\t     *\r\n\t     * @param {IEmbedConfigurationBase}\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Dashboard.prototype.populateConfig = function (baseConfig) {\r\n\t        var config = baseConfig;\r\n\t        _super.prototype.populateConfig.call(this, config);\r\n\t        // TODO: Change when Object.assign is available.\r\n\t        var settings = utils.assign({}, defaults_1.Defaults.defaultSettings, config.settings);\r\n\t        config = utils.assign({ settings: settings }, config);\r\n\t        config.id = this.getId();\r\n\t        this.config = config;\r\n\t    };\r\n\t    /**\r\n\t     * Validate that pageView has a legal value: if page view is defined it must have one of the values defined in models.PageView\r\n\t     */\r\n\t    Dashboard.prototype.ValidatePageView = function (pageView) {\r\n\t        if (pageView && pageView !== \"fitToWidth\" && pageView !== \"oneColumn\" && pageView !== \"actualSize\") {\r\n\t            return [{ message: \"pageView must be one of the followings: fitToWidth, oneColumn, actualSize\" }];\r\n\t        }\r\n\t    };\r\n\t    Dashboard.allowedEvents = [\"tileClicked\", \"error\"];\r\n\t    Dashboard.dashboardIdAttribute = 'powerbi-dashboard-id';\r\n\t    Dashboard.typeAttribute = 'powerbi-type';\r\n\t    Dashboard.type = \"Dashboard\";\r\n\t    return Dashboard;\r\n\t}(embed.Embed));\r\n\texports.Dashboard = Dashboard;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar models = __webpack_require__(4);\r\n\tvar embed = __webpack_require__(2);\r\n\tvar utils = __webpack_require__(3);\r\n\tvar defaults_1 = __webpack_require__(9);\r\n\t/**\r\n\t * The Power BI tile embed component\r\n\t *\r\n\t * @export\r\n\t * @class Tile\r\n\t * @extends {Embed}\r\n\t */\r\n\tvar Tile = (function (_super) {\r\n\t    __extends(Tile, _super);\r\n\t    function Tile(service, element, baseConfig, phasedRender) {\r\n\t        var config = baseConfig;\r\n\t        _super.call(this, service, element, config, /* iframe */ undefined, phasedRender);\r\n\t        this.loadPath = \"/tile/load\";\r\n\t        Array.prototype.push.apply(this.allowedEvents, Tile.allowedEvents);\r\n\t    }\r\n\t    /**\r\n\t     * The ID of the tile\r\n\t     *\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Tile.prototype.getId = function () {\r\n\t        var config = this.config;\r\n\t        var tileId = config.id || Tile.findIdFromEmbedUrl(this.config.embedUrl);\r\n\t        if (typeof tileId !== 'string' || tileId.length === 0) {\r\n\t            throw new Error(\"Tile id is required, but it was not found. You must provide an id either as part of embed configuration.\");\r\n\t        }\r\n\t        return tileId;\r\n\t    };\r\n\t    /**\r\n\t     * Validate load configuration.\r\n\t     */\r\n\t    Tile.prototype.validate = function (config) {\r\n\t        var embedConfig = config;\r\n\t        return models.validateTileLoad(embedConfig);\r\n\t    };\r\n\t    /**\r\n\t     * Populate config for load config\r\n\t     *\r\n\t     * @param {IEmbedConfigurationBase}\r\n\t     * @returns {void}\r\n\t     */\r\n\t    Tile.prototype.populateConfig = function (baseConfig) {\r\n\t        var config = baseConfig;\r\n\t        _super.prototype.populateConfig.call(this, config);\r\n\t        // TODO: Change when Object.assign is available.\r\n\t        var settings = utils.assign({}, defaults_1.Defaults.defaultSettings, config.settings);\r\n\t        config = utils.assign({ settings: settings }, config);\r\n\t        config.id = this.getId();\r\n\t        this.config = config;\r\n\t    };\r\n\t    /**\r\n\t     * Adds the ability to get tileId from url.\r\n\t     * By extracting the ID we can ensure that the ID is always explicitly provided as part of the load configuration.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {string} url\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Tile.findIdFromEmbedUrl = function (url) {\r\n\t        var tileIdRegEx = /tileId=\"?([^&]+)\"?/;\r\n\t        var tileIdMatch = url.match(tileIdRegEx);\r\n\t        var tileId;\r\n\t        if (tileIdMatch) {\r\n\t            tileId = tileIdMatch[1];\r\n\t        }\r\n\t        return tileId;\r\n\t    };\r\n\t    Tile.type = \"Tile\";\r\n\t    Tile.allowedEvents = [\"tileClicked\", \"tileLoaded\"];\r\n\t    return Tile;\r\n\t}(embed.Embed));\r\n\texports.Tile = Tile;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar models = __webpack_require__(4);\r\n\tvar embed = __webpack_require__(2);\r\n\t/**\r\n\t * The Power BI Qna embed component\r\n\t *\r\n\t * @export\r\n\t * @class Qna\r\n\t * @extends {Embed}\r\n\t */\r\n\tvar Qna = (function (_super) {\r\n\t    __extends(Qna, _super);\r\n\t    function Qna(service, element, config, phasedRender) {\r\n\t        _super.call(this, service, element, config, /* iframe */ undefined, phasedRender);\r\n\t        this.loadPath = \"/qna/load\";\r\n\t        this.phasedLoadPath = \"/qna/prepare\";\r\n\t        Array.prototype.push.apply(this.allowedEvents, Qna.allowedEvents);\r\n\t    }\r\n\t    /**\r\n\t     * The ID of the Qna embed component\r\n\t     *\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Qna.prototype.getId = function () {\r\n\t        return null;\r\n\t    };\r\n\t    /**\r\n\t     * Change the question of the Q&A embed component\r\n\t     *\r\n\t     * @param question - question which will render Q&A data\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Qna.prototype.setQuestion = function (question) {\r\n\t        var qnaData = {\r\n\t            question: question\r\n\t        };\r\n\t        return this.service.hpm.post('/qna/interpret', qnaData, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Validate load configuration.\r\n\t     */\r\n\t    Qna.prototype.validate = function (config) {\r\n\t        return models.validateLoadQnaConfiguration(config);\r\n\t    };\r\n\t    Qna.type = \"Qna\";\r\n\t    Qna.allowedEvents = [\"loaded\", \"visualRendered\"];\r\n\t    return Qna;\r\n\t}(embed.Embed));\r\n\texports.Qna = Qna;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar models = __webpack_require__(4);\r\n\tvar report_1 = __webpack_require__(5);\r\n\t/**\r\n\t * The Power BI Visual embed component\r\n\t *\r\n\t * @export\r\n\t * @class Visual\r\n\t */\r\n\tvar Visual = (function (_super) {\r\n\t    __extends(Visual, _super);\r\n\t    /**\r\n\t     * Creates an instance of a Power BI Single Visual.\r\n\t     *\r\n\t     * @param {service.Service} service\r\n\t     * @param {HTMLElement} element\r\n\t     * @param {embed.IEmbedConfiguration} config\r\n\t     */\r\n\t    function Visual(service, element, baseConfig, phasedRender, iframe) {\r\n\t        _super.call(this, service, element, baseConfig, phasedRender, iframe);\r\n\t    }\r\n\t    Visual.prototype.load = function (baseConfig, phasedRender) {\r\n\t        var config = baseConfig;\r\n\t        if (typeof config.pageName !== 'string' || config.pageName.length === 0) {\r\n\t            throw new Error(\"Page name is required when embedding a visual.\");\r\n\t        }\r\n\t        if (typeof config.visualName !== 'string' || config.visualName.length === 0) {\r\n\t            throw new Error(\"Visual name is required, but it was not found. You must provide a visual name as part of embed configuration.\");\r\n\t        }\r\n\t        // calculate custom layout settings and override config.\r\n\t        var width = config.width ? config.width : this.iframe.offsetWidth;\r\n\t        var height = config.height ? config.height : this.iframe.offsetHeight;\r\n\t        var pageSize = {\r\n\t            type: models.PageSizeType.Custom,\r\n\t            width: width,\r\n\t            height: height,\r\n\t        };\r\n\t        var pagesLayout = {};\r\n\t        pagesLayout[config.pageName] = {\r\n\t            defaultLayout: {\r\n\t                displayState: {\r\n\t                    mode: models.VisualContainerDisplayMode.Hidden\r\n\t                }\r\n\t            },\r\n\t            visualsLayout: {}\r\n\t        };\r\n\t        pagesLayout[config.pageName].visualsLayout[config.visualName] = {\r\n\t            displayState: {\r\n\t                mode: models.VisualContainerDisplayMode.Visible\r\n\t            },\r\n\t            x: 1,\r\n\t            y: 1,\r\n\t            z: 1,\r\n\t            width: pageSize.width,\r\n\t            height: pageSize.height\r\n\t        };\r\n\t        config.settings = config.settings || {};\r\n\t        config.settings.filterPaneEnabled = false;\r\n\t        config.settings.navContentPaneEnabled = false;\r\n\t        config.settings.layoutType = models.LayoutType.Custom;\r\n\t        config.settings.customLayout = {\r\n\t            displayOption: models.DisplayOption.FitToPage,\r\n\t            pageSize: pageSize,\r\n\t            pagesLayout: pagesLayout\r\n\t        };\r\n\t        return _super.prototype.load.call(this, config, phasedRender);\r\n\t    };\r\n\t    /**\r\n\t     * Gets the list of pages within the report - not supported in visual embed.\r\n\t     *\r\n\t     * @returns {Promise<Page[]>}\r\n\t     */\r\n\t    Visual.prototype.getPages = function () {\r\n\t        throw Visual.GetPagesNotSupportedError;\r\n\t    };\r\n\t    /**\r\n\t     * Sets the active page of the report - not supported in visual embed.\r\n\t     *\r\n\t     * @param {string} pageName\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Visual.prototype.setPage = function (pageName) {\r\n\t        throw Visual.SetPageNotSupportedError;\r\n\t    };\r\n\t    /**\r\n\t     * Gets filters that are applied to the filter level.\r\n\t     * Default filter level is visual level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.getFilters(filtersLevel)\r\n\t     *   .then(filters => {\r\n\t     *     ...\r\n\t     *   });\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<models.IFilter[]>}\r\n\t     */\r\n\t    Visual.prototype.getFilters = function (filtersLevel) {\r\n\t        var url = this.getFiltersLevelUrl(filtersLevel);\r\n\t        return this.service.hpm.get(url, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .then(function (response) { return response.body; }, function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Sets filters at the filter level.\r\n\t     * Default filter level is visual level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * const filters: [\r\n\t     *    ...\r\n\t     * ];\r\n\t     *\r\n\t     * visual.setFilters(filters, filtersLevel)\r\n\t     *  .catch(errors => {\r\n\t     *    ...\r\n\t     *  });\r\n\t     * ```\r\n\t     *\r\n\t     * @param {(models.IFilter[])} filters\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Visual.prototype.setFilters = function (filters, filtersLevel) {\r\n\t        var url = this.getFiltersLevelUrl(filtersLevel);\r\n\t        return this.service.hpm.put(url, filters, { uid: this.config.uniqueId }, this.iframe.contentWindow)\r\n\t            .catch(function (response) {\r\n\t            throw response.body;\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Removes all filters from the current filter level.\r\n\t     * Default filter level is visual level.\r\n\t     *\r\n\t     * ```javascript\r\n\t     * visual.removeFilters(filtersLevel);\r\n\t     * ```\r\n\t     *\r\n\t     * @returns {Promise<void>}\r\n\t     */\r\n\t    Visual.prototype.removeFilters = function (filtersLevel) {\r\n\t        return this.setFilters([], filtersLevel);\r\n\t    };\r\n\t    Visual.prototype.getFiltersLevelUrl = function (filtersLevel) {\r\n\t        var config = this.config;\r\n\t        switch (filtersLevel) {\r\n\t            case models.FiltersLevel.Report:\r\n\t                return \"/report/filters\";\r\n\t            case models.FiltersLevel.Page:\r\n\t                return \"/report/pages/\" + config.pageName + \"/filters\";\r\n\t            default:\r\n\t                return \"/report/pages/\" + config.pageName + \"/visuals/\" + config.visualName + \"/filters\";\r\n\t        }\r\n\t    };\r\n\t    Visual.type = \"visual\";\r\n\t    Visual.GetPagesNotSupportedError = \"Get pages is not supported while embedding a visual.\";\r\n\t    Visual.SetPageNotSupportedError = \"Set page is not supported while embedding a visual.\";\r\n\t    return Visual;\r\n\t}(report_1.Report));\r\n\texports.Visual = Visual;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar config_1 = __webpack_require__(17);\r\n\tvar wpmp = __webpack_require__(18);\r\n\tvar hpm = __webpack_require__(19);\r\n\tvar router = __webpack_require__(20);\r\n\texports.hpmFactory = function (wpmp, defaultTargetWindow, sdkVersion, sdkType) {\r\n\t    if (sdkVersion === void 0) { sdkVersion = config_1.default.version; }\r\n\t    if (sdkType === void 0) { sdkType = config_1.default.type; }\r\n\t    return new hpm.HttpPostMessage(wpmp, {\r\n\t        'x-sdk-type': sdkType,\r\n\t        'x-sdk-version': sdkVersion\r\n\t    }, defaultTargetWindow);\r\n\t};\r\n\texports.wpmpFactory = function (name, logMessages, eventSourceOverrideWindow) {\r\n\t    return new wpmp.WindowPostMessageProxy({\r\n\t        processTrackingProperties: {\r\n\t            addTrackingProperties: hpm.HttpPostMessage.addTrackingProperties,\r\n\t            getTrackingProperties: hpm.HttpPostMessage.getTrackingProperties,\r\n\t        },\r\n\t        isErrorMessage: hpm.HttpPostMessage.isErrorMessage,\r\n\t        suppressWarnings: true,\r\n\t        name: name,\r\n\t        logMessages: logMessages,\r\n\t        eventSourceOverrideWindow: eventSourceOverrideWindow\r\n\t    });\r\n\t};\r\n\texports.routerFactory = function (wpmp) {\r\n\t    return new router.Router(wpmp);\r\n\t};\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\tvar config = {\r\n\t    version: '2.8.0',\r\n\t    type: 'js'\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = config;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! window-post-message-proxy v0.2.5 | (c) 2016 Microsoft Corporation MIT */\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse {}\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports) {\n\t\n\t\t\"use strict\";\r\n\t\tvar WindowPostMessageProxy = (function () {\r\n\t\t    function WindowPostMessageProxy(options) {\r\n\t\t        var _this = this;\r\n\t\t        if (options === void 0) { options = {\r\n\t\t            processTrackingProperties: {\r\n\t\t                addTrackingProperties: WindowPostMessageProxy.defaultAddTrackingProperties,\r\n\t\t                getTrackingProperties: WindowPostMessageProxy.defaultGetTrackingProperties\r\n\t\t            },\r\n\t\t            isErrorMessage: WindowPostMessageProxy.defaultIsErrorMessage,\r\n\t\t            receiveWindow: window,\r\n\t\t            name: WindowPostMessageProxy.createRandomString()\r\n\t\t        }; }\r\n\t\t        this.pendingRequestPromises = {};\r\n\t\t        // save options with defaults\r\n\t\t        this.addTrackingProperties = (options.processTrackingProperties && options.processTrackingProperties.addTrackingProperties) || WindowPostMessageProxy.defaultAddTrackingProperties;\r\n\t\t        this.getTrackingProperties = (options.processTrackingProperties && options.processTrackingProperties.getTrackingProperties) || WindowPostMessageProxy.defaultGetTrackingProperties;\r\n\t\t        this.isErrorMessage = options.isErrorMessage || WindowPostMessageProxy.defaultIsErrorMessage;\r\n\t\t        this.receiveWindow = options.receiveWindow || window;\r\n\t\t        this.name = options.name || WindowPostMessageProxy.createRandomString();\r\n\t\t        this.logMessages = options.logMessages || false;\r\n\t\t        this.eventSourceOverrideWindow = options.eventSourceOverrideWindow;\r\n\t\t        this.suppressWarnings = options.suppressWarnings || false;\r\n\t\t        if (this.logMessages) {\r\n\t\t            console.log(\"new WindowPostMessageProxy created with name: \" + this.name + \" receiving on window: \" + this.receiveWindow.document.title);\r\n\t\t        }\r\n\t\t        // Initialize\r\n\t\t        this.handlers = [];\r\n\t\t        this.windowMessageHandler = function (event) { return _this.onMessageReceived(event); };\r\n\t\t        this.start();\r\n\t\t    }\r\n\t\t    // Static\r\n\t\t    WindowPostMessageProxy.defaultAddTrackingProperties = function (message, trackingProperties) {\r\n\t\t        message[WindowPostMessageProxy.messagePropertyName] = trackingProperties;\r\n\t\t        return message;\r\n\t\t    };\r\n\t\t    WindowPostMessageProxy.defaultGetTrackingProperties = function (message) {\r\n\t\t        return message[WindowPostMessageProxy.messagePropertyName];\r\n\t\t    };\r\n\t\t    WindowPostMessageProxy.defaultIsErrorMessage = function (message) {\r\n\t\t        return !!message.error;\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Utility to create a deferred object.\r\n\t\t     */\r\n\t\t    // TODO: Look to use RSVP library instead of doing this manually.\r\n\t\t    // From what I searched RSVP would work better because it has .finally and .deferred; however, it doesn't have Typings information. \r\n\t\t    WindowPostMessageProxy.createDeferred = function () {\r\n\t\t        var deferred = {\r\n\t\t            resolve: null,\r\n\t\t            reject: null,\r\n\t\t            promise: null\r\n\t\t        };\r\n\t\t        var promise = new Promise(function (resolve, reject) {\r\n\t\t            deferred.resolve = resolve;\r\n\t\t            deferred.reject = reject;\r\n\t\t        });\r\n\t\t        deferred.promise = promise;\r\n\t\t        return deferred;\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Utility to generate random sequence of characters used as tracking id for promises.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.createRandomString = function () {\r\n\t\t        return (Math.random() + 1).toString(36).substring(7);\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Adds handler.\r\n\t\t     * If the first handler whose test method returns true will handle the message and provide a response.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.addHandler = function (handler) {\r\n\t\t        this.handlers.push(handler);\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Removes handler.\r\n\t\t     * The reference must match the original object that was provided when adding the handler.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.removeHandler = function (handler) {\r\n\t\t        var handlerIndex = this.handlers.indexOf(handler);\r\n\t\t        if (handlerIndex === -1) {\r\n\t\t            throw new Error(\"You attempted to remove a handler but no matching handler was found.\");\r\n\t\t        }\r\n\t\t        this.handlers.splice(handlerIndex, 1);\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Start listening to message events.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.start = function () {\r\n\t\t        this.receiveWindow.addEventListener('message', this.windowMessageHandler);\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Stops listening to message events.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.stop = function () {\r\n\t\t        this.receiveWindow.removeEventListener('message', this.windowMessageHandler);\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Post message to target window with tracking properties added and save deferred object referenced by tracking id.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.postMessage = function (targetWindow, message) {\r\n\t\t        // Add tracking properties to indicate message came from this proxy\r\n\t\t        var trackingProperties = { id: WindowPostMessageProxy.createRandomString() };\r\n\t\t        this.addTrackingProperties(message, trackingProperties);\r\n\t\t        if (this.logMessages) {\r\n\t\t            console.log(this.name + \" Posting message:\");\r\n\t\t            console.log(JSON.stringify(message, null, '  '));\r\n\t\t        }\r\n\t\t        targetWindow.postMessage(message, \"*\");\r\n\t\t        var deferred = WindowPostMessageProxy.createDeferred();\r\n\t\t        this.pendingRequestPromises[trackingProperties.id] = deferred;\r\n\t\t        return deferred.promise;\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Send response message to target window.\r\n\t\t     * Response messages re-use tracking properties from a previous request message.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.sendResponse = function (targetWindow, message, trackingProperties) {\r\n\t\t        this.addTrackingProperties(message, trackingProperties);\r\n\t\t        if (this.logMessages) {\r\n\t\t            console.log(this.name + \" Sending response:\");\r\n\t\t            console.log(JSON.stringify(message, null, '  '));\r\n\t\t        }\r\n\t\t        targetWindow.postMessage(message, \"*\");\r\n\t\t    };\r\n\t\t    /**\r\n\t\t     * Message handler.\r\n\t\t     */\r\n\t\t    WindowPostMessageProxy.prototype.onMessageReceived = function (event) {\r\n\t\t        var _this = this;\r\n\t\t        if (this.logMessages) {\r\n\t\t            console.log(this.name + \" Received message:\");\r\n\t\t            console.log(\"type: \" + event.type);\r\n\t\t            console.log(JSON.stringify(event.data, null, '  '));\r\n\t\t        }\r\n\t\t        var sendingWindow = this.eventSourceOverrideWindow || event.source;\r\n\t\t        var message = event.data;\r\n\t\t        if (typeof message !== \"object\") {\r\n\t\t            if (!this.suppressWarnings) {\r\n\t\t                console.warn(\"Proxy(\" + this.name + \"): Received message that was not an object. Discarding message\");\r\n\t\t            }\r\n\t\t            return;\r\n\t\t        }\r\n\t\t        var trackingProperties;\r\n\t\t        try {\r\n\t\t            trackingProperties = this.getTrackingProperties(message);\r\n\t\t        }\r\n\t\t        catch (e) {\r\n\t\t            if (!this.suppressWarnings) {\r\n\t\t                console.warn(\"Proxy(\" + this.name + \"): Error occurred when attempting to get tracking properties from incoming message:\", JSON.stringify(message, null, '  '), \"Error: \", e);\r\n\t\t            }\r\n\t\t        }\r\n\t\t        var deferred;\r\n\t\t        if (trackingProperties) {\r\n\t\t            deferred = this.pendingRequestPromises[trackingProperties.id];\r\n\t\t        }\r\n\t\t        // If message does not have a known ID, treat it as a request\r\n\t\t        // Otherwise, treat message as response\r\n\t\t        if (!deferred) {\r\n\t\t            var handled = this.handlers.some(function (handler) {\r\n\t\t                var canMessageBeHandled = false;\r\n\t\t                try {\r\n\t\t                    canMessageBeHandled = handler.test(message);\r\n\t\t                }\r\n\t\t                catch (e) {\r\n\t\t                    if (!_this.suppressWarnings) {\r\n\t\t                        console.warn(\"Proxy(\" + _this.name + \"): Error occurred when handler was testing incoming message:\", JSON.stringify(message, null, '  '), \"Error: \", e);\r\n\t\t                    }\r\n\t\t                }\r\n\t\t                if (canMessageBeHandled) {\r\n\t\t                    var responseMessagePromise = void 0;\r\n\t\t                    try {\r\n\t\t                        responseMessagePromise = Promise.resolve(handler.handle(message));\r\n\t\t                    }\r\n\t\t                    catch (e) {\r\n\t\t                        if (!_this.suppressWarnings) {\r\n\t\t                            console.warn(\"Proxy(\" + _this.name + \"): Error occurred when handler was processing incoming message:\", JSON.stringify(message, null, '  '), \"Error: \", e);\r\n\t\t                        }\r\n\t\t                        responseMessagePromise = Promise.resolve();\r\n\t\t                    }\r\n\t\t                    responseMessagePromise\r\n\t\t                        .then(function (responseMessage) {\r\n\t\t                        if (!responseMessage) {\r\n\t\t                            var warningMessage = \"Handler for message: \" + JSON.stringify(message, null, '  ') + \" did not return a response message. The default response message will be returned instead.\";\r\n\t\t                            if (!_this.suppressWarnings) {\r\n\t\t                                console.warn(\"Proxy(\" + _this.name + \"): \" + warningMessage);\r\n\t\t                            }\r\n\t\t                            responseMessage = {\r\n\t\t                                warning: warningMessage\r\n\t\t                            };\r\n\t\t                        }\r\n\t\t                        _this.sendResponse(sendingWindow, responseMessage, trackingProperties);\r\n\t\t                    });\r\n\t\t                    return true;\r\n\t\t                }\r\n\t\t            });\r\n\t\t            /**\r\n\t\t             * TODO: Consider returning an error message if nothing handled the message.\r\n\t\t             * In the case of the Report receiving messages all of them should be handled,\r\n\t\t             * however, in the case of the SDK receiving messages it's likely it won't register handlers\r\n\t\t             * for all events. Perhaps make this an option at construction time.\r\n\t\t             */\r\n\t\t            if (!handled && !this.suppressWarnings) {\r\n\t\t                console.warn(\"Proxy(\" + this.name + \") did not handle message. Handlers: \" + this.handlers.length + \"  Message: \" + JSON.stringify(message, null, '') + \".\");\r\n\t\t            }\r\n\t\t        }\r\n\t\t        else {\r\n\t\t            /**\r\n\t\t             * If error message reject promise,\r\n\t\t             * Otherwise, resolve promise\r\n\t\t             */\r\n\t\t            var isErrorMessage = true;\r\n\t\t            try {\r\n\t\t                isErrorMessage = this.isErrorMessage(message);\r\n\t\t            }\r\n\t\t            catch (e) {\r\n\t\t                console.warn(\"Proxy(\" + this.name + \") Error occurred when trying to determine if message is consider an error response. Message: \", JSON.stringify(message, null, ''), 'Error: ', e);\r\n\t\t            }\r\n\t\t            if (isErrorMessage) {\r\n\t\t                deferred.reject(message);\r\n\t\t            }\r\n\t\t            else {\r\n\t\t                deferred.resolve(message);\r\n\t\t            }\r\n\t\t            // TODO: Move to .finally clause up where promise is created for better maitenance like original proxy code.\r\n\t\t            delete this.pendingRequestPromises[trackingProperties.id];\r\n\t\t        }\r\n\t\t    };\r\n\t\t    WindowPostMessageProxy.messagePropertyName = \"windowPostMessageProxy\";\r\n\t\t    return WindowPostMessageProxy;\r\n\t\t}());\r\n\t\texports.WindowPostMessageProxy = WindowPostMessageProxy;\r\n\t\n\t\n\t/***/ })\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=windowPostMessageProxy.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! http-post-message v0.2.3 | (c) 2016 Microsoft Corporation MIT */\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse {}\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\tvar HttpPostMessage = (function () {\n\t\t    function HttpPostMessage(windowPostMessageProxy, defaultHeaders, defaultTargetWindow) {\n\t\t        if (defaultHeaders === void 0) { defaultHeaders = {}; }\n\t\t        this.defaultHeaders = defaultHeaders;\n\t\t        this.defaultTargetWindow = defaultTargetWindow;\n\t\t        this.windowPostMessageProxy = windowPostMessageProxy;\n\t\t    }\n\t\t    // TODO: See if it's possible to share tracking properties interface?\n\t\t    // The responsibility of knowing how to configure windowPostMessageProxy for http should\n\t\t    // live in this http class, but the configuration would need ITrackingProperties\n\t\t    // interface which lives in WindowPostMessageProxy. Use <any> type as workaround\n\t\t    HttpPostMessage.addTrackingProperties = function (message, trackingProperties) {\n\t\t        message.headers = message.headers || {};\n\t\t        if (trackingProperties && trackingProperties.id) {\n\t\t            message.headers.id = trackingProperties.id;\n\t\t        }\n\t\t        return message;\n\t\t    };\n\t\t    HttpPostMessage.getTrackingProperties = function (message) {\n\t\t        return {\n\t\t            id: message.headers && message.headers.id\n\t\t        };\n\t\t    };\n\t\t    HttpPostMessage.isErrorMessage = function (message) {\n\t\t        if (typeof (message && message.statusCode) !== 'number') {\n\t\t            return false;\n\t\t        }\n\t\t        return !(200 <= message.statusCode && message.statusCode < 300);\n\t\t    };\n\t\t    HttpPostMessage.prototype.get = function (url, headers, targetWindow) {\n\t\t        if (headers === void 0) { headers = {}; }\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        return this.send({\n\t\t            method: \"GET\",\n\t\t            url: url,\n\t\t            headers: headers\n\t\t        }, targetWindow);\n\t\t    };\n\t\t    HttpPostMessage.prototype.post = function (url, body, headers, targetWindow) {\n\t\t        if (headers === void 0) { headers = {}; }\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        return this.send({\n\t\t            method: \"POST\",\n\t\t            url: url,\n\t\t            headers: headers,\n\t\t            body: body\n\t\t        }, targetWindow);\n\t\t    };\n\t\t    HttpPostMessage.prototype.put = function (url, body, headers, targetWindow) {\n\t\t        if (headers === void 0) { headers = {}; }\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        return this.send({\n\t\t            method: \"PUT\",\n\t\t            url: url,\n\t\t            headers: headers,\n\t\t            body: body\n\t\t        }, targetWindow);\n\t\t    };\n\t\t    HttpPostMessage.prototype.patch = function (url, body, headers, targetWindow) {\n\t\t        if (headers === void 0) { headers = {}; }\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        return this.send({\n\t\t            method: \"PATCH\",\n\t\t            url: url,\n\t\t            headers: headers,\n\t\t            body: body\n\t\t        }, targetWindow);\n\t\t    };\n\t\t    HttpPostMessage.prototype.delete = function (url, body, headers, targetWindow) {\n\t\t        if (body === void 0) { body = null; }\n\t\t        if (headers === void 0) { headers = {}; }\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        return this.send({\n\t\t            method: \"DELETE\",\n\t\t            url: url,\n\t\t            headers: headers,\n\t\t            body: body\n\t\t        }, targetWindow);\n\t\t    };\n\t\t    HttpPostMessage.prototype.send = function (request, targetWindow) {\n\t\t        if (targetWindow === void 0) { targetWindow = this.defaultTargetWindow; }\n\t\t        request.headers = this.assign({}, this.defaultHeaders, request.headers);\n\t\t        if (!targetWindow) {\n\t\t            throw new Error(\"target window is not provided.  You must either provide the target window explicitly as argument to request, or specify default target window when constructing instance of this class.\");\n\t\t        }\n\t\t        return this.windowPostMessageProxy.postMessage(targetWindow, request);\n\t\t    };\n\t\t    /**\n\t\t     * Object.assign() polyfill\n\t\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\t\t     */\n\t\t    HttpPostMessage.prototype.assign = function (target) {\n\t\t        var sources = [];\n\t\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t\t            sources[_i - 1] = arguments[_i];\n\t\t        }\n\t\t        if (target === undefined || target === null) {\n\t\t            throw new TypeError('Cannot convert undefined or null to object');\n\t\t        }\n\t\t        var output = Object(target);\n\t\t        sources.forEach(function (source) {\n\t\t            if (source !== undefined && source !== null) {\n\t\t                for (var nextKey in source) {\n\t\t                    if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n\t\t                        output[nextKey] = source[nextKey];\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        });\n\t\t        return output;\n\t\t    };\n\t\t    return HttpPostMessage;\n\t\t}());\n\t\texports.HttpPostMessage = HttpPostMessage;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=httpPostMessage.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! powerbi-router v0.1.5 | (c) 2016 Microsoft Corporation MIT */\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse {}\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar RouteRecognizer = __webpack_require__(1);\n\t\tvar Router = (function () {\n\t\t    function Router(handlers) {\n\t\t        this.handlers = handlers;\n\t\t        /**\n\t\t         * TODO: look at generating the router dynamically based on list of supported http methods\n\t\t         * instead of hardcoding the creation of these and the methods.\n\t\t         */\n\t\t        this.getRouteRecognizer = new RouteRecognizer();\n\t\t        this.patchRouteRecognizer = new RouteRecognizer();\n\t\t        this.postRouteRecognizer = new RouteRecognizer();\n\t\t        this.putRouteRecognizer = new RouteRecognizer();\n\t\t        this.deleteRouteRecognizer = new RouteRecognizer();\n\t\t    }\n\t\t    Router.prototype.get = function (url, handler) {\n\t\t        this.registerHandler(this.getRouteRecognizer, \"GET\", url, handler);\n\t\t        return this;\n\t\t    };\n\t\t    Router.prototype.patch = function (url, handler) {\n\t\t        this.registerHandler(this.patchRouteRecognizer, \"PATCH\", url, handler);\n\t\t        return this;\n\t\t    };\n\t\t    Router.prototype.post = function (url, handler) {\n\t\t        this.registerHandler(this.postRouteRecognizer, \"POST\", url, handler);\n\t\t        return this;\n\t\t    };\n\t\t    Router.prototype.put = function (url, handler) {\n\t\t        this.registerHandler(this.putRouteRecognizer, \"PUT\", url, handler);\n\t\t        return this;\n\t\t    };\n\t\t    Router.prototype.delete = function (url, handler) {\n\t\t        this.registerHandler(this.deleteRouteRecognizer, \"DELETE\", url, handler);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t     * TODO: This method could use some refactoring.  There is conflict of interest between keeping clean separation of test and handle method\n\t\t     * Test method only returns boolean indicating if request can be handled, and handle method has opportunity to modify response and return promise of it.\n\t\t     * In the case of the router with route-recognizer where handlers are associated with routes, this already guarantees that only one handler is selected and makes the test method feel complicated\n\t\t     * Will leave as is an investigate cleaner ways at later time.\n\t\t     */\n\t\t    Router.prototype.registerHandler = function (routeRecognizer, method, url, handler) {\n\t\t        var routeRecognizerHandler = function (request) {\n\t\t            var response = new Response();\n\t\t            return Promise.resolve(handler(request, response))\n\t\t                .then(function (x) { return response; });\n\t\t        };\n\t\t        routeRecognizer.add([\n\t\t            { path: url, handler: routeRecognizerHandler }\n\t\t        ]);\n\t\t        var internalHandler = {\n\t\t            test: function (request) {\n\t\t                if (request.method !== method) {\n\t\t                    return false;\n\t\t                }\n\t\t                var matchingRoutes = routeRecognizer.recognize(request.url);\n\t\t                if (matchingRoutes === undefined) {\n\t\t                    return false;\n\t\t                }\n\t\t                /**\n\t\t                 * Copy parameters from recognized route to the request so they can be used within the handler function\n\t\t                 * This isn't ideal because it is side affect which modifies the request instead of strictly testing for true or false\n\t\t                 * but I don't see a better place to put this.  If we move it between the call to test and the handle it becomes part of the window post message proxy\n\t\t                 * even though it's responsibility is related to routing.\n\t\t                 */\n\t\t                var route = matchingRoutes[0];\n\t\t                request.params = route.params;\n\t\t                request.queryParams = matchingRoutes.queryParams;\n\t\t                request.handler = route.handler;\n\t\t                return true;\n\t\t            },\n\t\t            handle: function (request) {\n\t\t                return request.handler(request);\n\t\t            }\n\t\t        };\n\t\t        this.handlers.addHandler(internalHandler);\n\t\t    };\n\t\t    return Router;\n\t\t}());\n\t\texports.Router = Router;\n\t\tvar Response = (function () {\n\t\t    function Response() {\n\t\t        this.statusCode = 200;\n\t\t        this.headers = {};\n\t\t        this.body = null;\n\t\t    }\n\t\t    Response.prototype.send = function (statusCode, body) {\n\t\t        this.statusCode = statusCode;\n\t\t        this.body = body;\n\t\t    };\n\t\t    return Response;\n\t\t}());\n\t\texports.Response = Response;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {(function() {\n\t\t    \"use strict\";\n\t\t    function $$route$recognizer$dsl$$Target(path, matcher, delegate) {\n\t\t      this.path = path;\n\t\t      this.matcher = matcher;\n\t\t      this.delegate = delegate;\n\t\t    }\n\t\t\n\t\t    $$route$recognizer$dsl$$Target.prototype = {\n\t\t      to: function(target, callback) {\n\t\t        var delegate = this.delegate;\n\t\t\n\t\t        if (delegate && delegate.willAddRoute) {\n\t\t          target = delegate.willAddRoute(this.matcher.target, target);\n\t\t        }\n\t\t\n\t\t        this.matcher.add(this.path, target);\n\t\t\n\t\t        if (callback) {\n\t\t          if (callback.length === 0) { throw new Error(\"You must have an argument in the function passed to `to`\"); }\n\t\t          this.matcher.addChild(this.path, target, callback, this.delegate);\n\t\t        }\n\t\t        return this;\n\t\t      }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$dsl$$Matcher(target) {\n\t\t      this.routes = {};\n\t\t      this.children = {};\n\t\t      this.target = target;\n\t\t    }\n\t\t\n\t\t    $$route$recognizer$dsl$$Matcher.prototype = {\n\t\t      add: function(path, handler) {\n\t\t        this.routes[path] = handler;\n\t\t      },\n\t\t\n\t\t      addChild: function(path, target, callback, delegate) {\n\t\t        var matcher = new $$route$recognizer$dsl$$Matcher(target);\n\t\t        this.children[path] = matcher;\n\t\t\n\t\t        var match = $$route$recognizer$dsl$$generateMatch(path, matcher, delegate);\n\t\t\n\t\t        if (delegate && delegate.contextEntered) {\n\t\t          delegate.contextEntered(target, match);\n\t\t        }\n\t\t\n\t\t        callback(match);\n\t\t      }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$dsl$$generateMatch(startingPath, matcher, delegate) {\n\t\t      return function(path, nestedCallback) {\n\t\t        var fullPath = startingPath + path;\n\t\t\n\t\t        if (nestedCallback) {\n\t\t          nestedCallback($$route$recognizer$dsl$$generateMatch(fullPath, matcher, delegate));\n\t\t        } else {\n\t\t          return new $$route$recognizer$dsl$$Target(startingPath + path, matcher, delegate);\n\t\t        }\n\t\t      };\n\t\t    }\n\t\t\n\t\t    function $$route$recognizer$dsl$$addRoute(routeArray, path, handler) {\n\t\t      var len = 0;\n\t\t      for (var i=0; i<routeArray.length; i++) {\n\t\t        len += routeArray[i].path.length;\n\t\t      }\n\t\t\n\t\t      path = path.substr(len);\n\t\t      var route = { path: path, handler: handler };\n\t\t      routeArray.push(route);\n\t\t    }\n\t\t\n\t\t    function $$route$recognizer$dsl$$eachRoute(baseRoute, matcher, callback, binding) {\n\t\t      var routes = matcher.routes;\n\t\t\n\t\t      for (var path in routes) {\n\t\t        if (routes.hasOwnProperty(path)) {\n\t\t          var routeArray = baseRoute.slice();\n\t\t          $$route$recognizer$dsl$$addRoute(routeArray, path, routes[path]);\n\t\t\n\t\t          if (matcher.children[path]) {\n\t\t            $$route$recognizer$dsl$$eachRoute(routeArray, matcher.children[path], callback, binding);\n\t\t          } else {\n\t\t            callback.call(binding, routeArray);\n\t\t          }\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t\n\t\t    var $$route$recognizer$dsl$$default = function(callback, addRouteCallback) {\n\t\t      var matcher = new $$route$recognizer$dsl$$Matcher();\n\t\t\n\t\t      callback($$route$recognizer$dsl$$generateMatch(\"\", matcher, this.delegate));\n\t\t\n\t\t      $$route$recognizer$dsl$$eachRoute([], matcher, function(route) {\n\t\t        if (addRouteCallback) { addRouteCallback(this, route); }\n\t\t        else { this.add(route); }\n\t\t      }, this);\n\t\t    };\n\t\t\n\t\t    var $$route$recognizer$$specials = [\n\t\t      '/', '.', '*', '+', '?', '|',\n\t\t      '(', ')', '[', ']', '{', '}', '\\\\'\n\t\t    ];\n\t\t\n\t\t    var $$route$recognizer$$escapeRegex = new RegExp('(\\\\' + $$route$recognizer$$specials.join('|\\\\') + ')', 'g');\n\t\t\n\t\t    function $$route$recognizer$$isArray(test) {\n\t\t      return Object.prototype.toString.call(test) === \"[object Array]\";\n\t\t    }\n\t\t\n\t\t    // A Segment represents a segment in the original route description.\n\t\t    // Each Segment type provides an `eachChar` and `regex` method.\n\t\t    //\n\t\t    // The `eachChar` method invokes the callback with one or more character\n\t\t    // specifications. A character specification consumes one or more input\n\t\t    // characters.\n\t\t    //\n\t\t    // The `regex` method returns a regex fragment for the segment. If the\n\t\t    // segment is a dynamic of star segment, the regex fragment also includes\n\t\t    // a capture.\n\t\t    //\n\t\t    // A character specification contains:\n\t\t    //\n\t\t    // * `validChars`: a String with a list of all valid characters, or\n\t\t    // * `invalidChars`: a String with a list of all invalid characters\n\t\t    // * `repeat`: true if the character specification can repeat\n\t\t\n\t\t    function $$route$recognizer$$StaticSegment(string) { this.string = string; }\n\t\t    $$route$recognizer$$StaticSegment.prototype = {\n\t\t      eachChar: function(currentState) {\n\t\t        var string = this.string, ch;\n\t\t\n\t\t        for (var i=0; i<string.length; i++) {\n\t\t          ch = string.charAt(i);\n\t\t          currentState = currentState.put({ invalidChars: undefined, repeat: false, validChars: ch });\n\t\t        }\n\t\t\n\t\t        return currentState;\n\t\t      },\n\t\t\n\t\t      regex: function() {\n\t\t        return this.string.replace($$route$recognizer$$escapeRegex, '\\\\$1');\n\t\t      },\n\t\t\n\t\t      generate: function() {\n\t\t        return this.string;\n\t\t      }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$$DynamicSegment(name) { this.name = name; }\n\t\t    $$route$recognizer$$DynamicSegment.prototype = {\n\t\t      eachChar: function(currentState) {\n\t\t        return currentState.put({ invalidChars: \"/\", repeat: true, validChars: undefined });\n\t\t      },\n\t\t\n\t\t      regex: function() {\n\t\t        return \"([^/]+)\";\n\t\t      },\n\t\t\n\t\t      generate: function(params) {\n\t\t        return params[this.name];\n\t\t      }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$$StarSegment(name) { this.name = name; }\n\t\t    $$route$recognizer$$StarSegment.prototype = {\n\t\t      eachChar: function(currentState) {\n\t\t        return currentState.put({ invalidChars: \"\", repeat: true, validChars: undefined });\n\t\t      },\n\t\t\n\t\t      regex: function() {\n\t\t        return \"(.+)\";\n\t\t      },\n\t\t\n\t\t      generate: function(params) {\n\t\t        return params[this.name];\n\t\t      }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$$EpsilonSegment() {}\n\t\t    $$route$recognizer$$EpsilonSegment.prototype = {\n\t\t      eachChar: function(currentState) {\n\t\t        return currentState;\n\t\t      },\n\t\t      regex: function() { return \"\"; },\n\t\t      generate: function() { return \"\"; }\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$$parse(route, names, specificity) {\n\t\t      // normalize route as not starting with a \"/\". Recognition will\n\t\t      // also normalize.\n\t\t      if (route.charAt(0) === \"/\") { route = route.substr(1); }\n\t\t\n\t\t      var segments = route.split(\"/\");\n\t\t      var results = new Array(segments.length);\n\t\t\n\t\t      // A routes has specificity determined by the order that its different segments\n\t\t      // appear in. This system mirrors how the magnitude of numbers written as strings\n\t\t      // works.\n\t\t      // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t\t      // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t\t      // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t\t      // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t\t      // leading symbol, \"1\".\n\t\t      // The rule is that symbols to the left carry more weight than symbols to the right\n\t\t      // when a number is written out as a string. In the above strings, the leading digit\n\t\t      // represents how many 100's are in the number, and it carries more weight than the middle\n\t\t      // number which represents how many 10's are in the number.\n\t\t      // This system of number magnitude works well for route specificity, too. A route written as\n\t\t      // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t\t      // `x`, irrespective of the other parts.\n\t\t      // Because of this similarity, we assign each type of segment a number value written as a\n\t\t      // string. We can find the specificity of compound routes by concatenating these strings\n\t\t      // together, from left to right. After we have looped through all of the segments,\n\t\t      // we convert the string to a number.\n\t\t      specificity.val = '';\n\t\t\n\t\t      for (var i=0; i<segments.length; i++) {\n\t\t        var segment = segments[i], match;\n\t\t\n\t\t        if (match = segment.match(/^:([^\\/]+)$/)) {\n\t\t          results[i] = new $$route$recognizer$$DynamicSegment(match[1]);\n\t\t          names.push(match[1]);\n\t\t          specificity.val += '3';\n\t\t        } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t\t          results[i] = new $$route$recognizer$$StarSegment(match[1]);\n\t\t          specificity.val += '1';\n\t\t          names.push(match[1]);\n\t\t        } else if(segment === \"\") {\n\t\t          results[i] = new $$route$recognizer$$EpsilonSegment();\n\t\t          specificity.val += '2';\n\t\t        } else {\n\t\t          results[i] = new $$route$recognizer$$StaticSegment(segment);\n\t\t          specificity.val += '4';\n\t\t        }\n\t\t      }\n\t\t\n\t\t      specificity.val = +specificity.val;\n\t\t\n\t\t      return results;\n\t\t    }\n\t\t\n\t\t    // A State has a character specification and (`charSpec`) and a list of possible\n\t\t    // subsequent states (`nextStates`).\n\t\t    //\n\t\t    // If a State is an accepting state, it will also have several additional\n\t\t    // properties:\n\t\t    //\n\t\t    // * `regex`: A regular expression that is used to extract parameters from paths\n\t\t    //   that reached this accepting state.\n\t\t    // * `handlers`: Information on how to convert the list of captures into calls\n\t\t    //   to registered handlers with the specified parameters\n\t\t    // * `types`: How many static, dynamic or star segments in this route. Used to\n\t\t    //   decide which route to use if multiple registered routes match a path.\n\t\t    //\n\t\t    // Currently, State is implemented naively by looping over `nextStates` and\n\t\t    // comparing a character specification against a character. A more efficient\n\t\t    // implementation would use a hash of keys pointing at one or more next states.\n\t\t\n\t\t    function $$route$recognizer$$State(charSpec) {\n\t\t      this.charSpec = charSpec;\n\t\t      this.nextStates = [];\n\t\t      this.charSpecs = {};\n\t\t      this.regex = undefined;\n\t\t      this.handlers = undefined;\n\t\t      this.specificity = undefined;\n\t\t    }\n\t\t\n\t\t    $$route$recognizer$$State.prototype = {\n\t\t      get: function(charSpec) {\n\t\t        if (this.charSpecs[charSpec.validChars]) {\n\t\t          return this.charSpecs[charSpec.validChars];\n\t\t        }\n\t\t\n\t\t        var nextStates = this.nextStates;\n\t\t\n\t\t        for (var i=0; i<nextStates.length; i++) {\n\t\t          var child = nextStates[i];\n\t\t\n\t\t          var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t\t          isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\t\n\t\t          if (isEqual) {\n\t\t            this.charSpecs[charSpec.validChars] = child;\n\t\t            return child;\n\t\t          }\n\t\t        }\n\t\t      },\n\t\t\n\t\t      put: function(charSpec) {\n\t\t        var state;\n\t\t\n\t\t        // If the character specification already exists in a child of the current\n\t\t        // state, just return that state.\n\t\t        if (state = this.get(charSpec)) { return state; }\n\t\t\n\t\t        // Make a new state for the character spec\n\t\t        state = new $$route$recognizer$$State(charSpec);\n\t\t\n\t\t        // Insert the new state as a child of the current state\n\t\t        this.nextStates.push(state);\n\t\t\n\t\t        // If this character specification repeats, insert the new state as a child\n\t\t        // of itself. Note that this will not trigger an infinite loop because each\n\t\t        // transition during recognition consumes a character.\n\t\t        if (charSpec.repeat) {\n\t\t          state.nextStates.push(state);\n\t\t        }\n\t\t\n\t\t        // Return the new state\n\t\t        return state;\n\t\t      },\n\t\t\n\t\t      // Find a list of child states matching the next character\n\t\t      match: function(ch) {\n\t\t        var nextStates = this.nextStates,\n\t\t            child, charSpec, chars;\n\t\t\n\t\t        var returned = [];\n\t\t\n\t\t        for (var i=0; i<nextStates.length; i++) {\n\t\t          child = nextStates[i];\n\t\t\n\t\t          charSpec = child.charSpec;\n\t\t\n\t\t          if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t\t            if (chars.indexOf(ch) !== -1) { returned.push(child); }\n\t\t          } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t\t            if (chars.indexOf(ch) === -1) { returned.push(child); }\n\t\t          }\n\t\t        }\n\t\t\n\t\t        return returned;\n\t\t      }\n\t\t    };\n\t\t\n\t\t    // Sort the routes by specificity\n\t\t    function $$route$recognizer$$sortSolutions(states) {\n\t\t      return states.sort(function(a, b) {\n\t\t        return b.specificity.val - a.specificity.val;\n\t\t      });\n\t\t    }\n\t\t\n\t\t    function $$route$recognizer$$recognizeChar(states, ch) {\n\t\t      var nextStates = [];\n\t\t\n\t\t      for (var i=0, l=states.length; i<l; i++) {\n\t\t        var state = states[i];\n\t\t\n\t\t        nextStates = nextStates.concat(state.match(ch));\n\t\t      }\n\t\t\n\t\t      return nextStates;\n\t\t    }\n\t\t\n\t\t    var $$route$recognizer$$oCreate = Object.create || function(proto) {\n\t\t      function F() {}\n\t\t      F.prototype = proto;\n\t\t      return new F();\n\t\t    };\n\t\t\n\t\t    function $$route$recognizer$$RecognizeResults(queryParams) {\n\t\t      this.queryParams = queryParams || {};\n\t\t    }\n\t\t    $$route$recognizer$$RecognizeResults.prototype = $$route$recognizer$$oCreate({\n\t\t      splice: Array.prototype.splice,\n\t\t      slice:  Array.prototype.slice,\n\t\t      push:   Array.prototype.push,\n\t\t      length: 0,\n\t\t      queryParams: null\n\t\t    });\n\t\t\n\t\t    function $$route$recognizer$$findHandler(state, path, queryParams) {\n\t\t      var handlers = state.handlers, regex = state.regex;\n\t\t      var captures = path.match(regex), currentCapture = 1;\n\t\t      var result = new $$route$recognizer$$RecognizeResults(queryParams);\n\t\t\n\t\t      result.length = handlers.length;\n\t\t\n\t\t      for (var i=0; i<handlers.length; i++) {\n\t\t        var handler = handlers[i], names = handler.names, params = {};\n\t\t\n\t\t        for (var j=0; j<names.length; j++) {\n\t\t          params[names[j]] = captures[currentCapture++];\n\t\t        }\n\t\t\n\t\t        result[i] = { handler: handler.handler, params: params, isDynamic: !!names.length };\n\t\t      }\n\t\t\n\t\t      return result;\n\t\t    }\n\t\t\n\t\t    function $$route$recognizer$$decodeQueryParamPart(part) {\n\t\t      // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t\t      part = part.replace(/\\+/gm, '%20');\n\t\t      var result;\n\t\t      try {\n\t\t        result = decodeURIComponent(part);\n\t\t      } catch(error) {result = '';}\n\t\t      return result;\n\t\t    }\n\t\t\n\t\t    // The main interface\n\t\t\n\t\t    var $$route$recognizer$$RouteRecognizer = function() {\n\t\t      this.rootState = new $$route$recognizer$$State();\n\t\t      this.names = {};\n\t\t    };\n\t\t\n\t\t\n\t\t    $$route$recognizer$$RouteRecognizer.prototype = {\n\t\t      add: function(routes, options) {\n\t\t        var currentState = this.rootState, regex = \"^\",\n\t\t            specificity = {},\n\t\t            handlers = new Array(routes.length), allSegments = [], name;\n\t\t\n\t\t        var isEmpty = true;\n\t\t\n\t\t        for (var i=0; i<routes.length; i++) {\n\t\t          var route = routes[i], names = [];\n\t\t\n\t\t          var segments = $$route$recognizer$$parse(route.path, names, specificity);\n\t\t\n\t\t          allSegments = allSegments.concat(segments);\n\t\t\n\t\t          for (var j=0; j<segments.length; j++) {\n\t\t            var segment = segments[j];\n\t\t\n\t\t            if (segment instanceof $$route$recognizer$$EpsilonSegment) { continue; }\n\t\t\n\t\t            isEmpty = false;\n\t\t\n\t\t            // Add a \"/\" for the new segment\n\t\t            currentState = currentState.put({ invalidChars: undefined, repeat: false, validChars: \"/\" });\n\t\t            regex += \"/\";\n\t\t\n\t\t            // Add a representation of the segment to the NFA and regex\n\t\t            currentState = segment.eachChar(currentState);\n\t\t            regex += segment.regex();\n\t\t          }\n\t\t          var handler = { handler: route.handler, names: names };\n\t\t          handlers[i] = handler;\n\t\t        }\n\t\t\n\t\t        if (isEmpty) {\n\t\t          currentState = currentState.put({ invalidChars: undefined, repeat: false, validChars: \"/\" });\n\t\t          regex += \"/\";\n\t\t        }\n\t\t\n\t\t        currentState.handlers = handlers;\n\t\t        currentState.regex = new RegExp(regex + \"$\");\n\t\t        currentState.specificity = specificity;\n\t\t\n\t\t        if (name = options && options.as) {\n\t\t          this.names[name] = {\n\t\t            segments: allSegments,\n\t\t            handlers: handlers\n\t\t          };\n\t\t        }\n\t\t      },\n\t\t\n\t\t      handlersFor: function(name) {\n\t\t        var route = this.names[name];\n\t\t\n\t\t        if (!route) { throw new Error(\"There is no route named \" + name); }\n\t\t\n\t\t        var result = new Array(route.handlers.length);\n\t\t\n\t\t        for (var i=0; i<route.handlers.length; i++) {\n\t\t          result[i] = route.handlers[i];\n\t\t        }\n\t\t\n\t\t        return result;\n\t\t      },\n\t\t\n\t\t      hasRoute: function(name) {\n\t\t        return !!this.names[name];\n\t\t      },\n\t\t\n\t\t      generate: function(name, params) {\n\t\t        var route = this.names[name], output = \"\";\n\t\t        if (!route) { throw new Error(\"There is no route named \" + name); }\n\t\t\n\t\t        var segments = route.segments;\n\t\t\n\t\t        for (var i=0; i<segments.length; i++) {\n\t\t          var segment = segments[i];\n\t\t\n\t\t          if (segment instanceof $$route$recognizer$$EpsilonSegment) { continue; }\n\t\t\n\t\t          output += \"/\";\n\t\t          output += segment.generate(params);\n\t\t        }\n\t\t\n\t\t        if (output.charAt(0) !== '/') { output = '/' + output; }\n\t\t\n\t\t        if (params && params.queryParams) {\n\t\t          output += this.generateQueryString(params.queryParams, route.handlers);\n\t\t        }\n\t\t\n\t\t        return output;\n\t\t      },\n\t\t\n\t\t      generateQueryString: function(params, handlers) {\n\t\t        var pairs = [];\n\t\t        var keys = [];\n\t\t        for(var key in params) {\n\t\t          if (params.hasOwnProperty(key)) {\n\t\t            keys.push(key);\n\t\t          }\n\t\t        }\n\t\t        keys.sort();\n\t\t        for (var i = 0; i < keys.length; i++) {\n\t\t          key = keys[i];\n\t\t          var value = params[key];\n\t\t          if (value == null) {\n\t\t            continue;\n\t\t          }\n\t\t          var pair = encodeURIComponent(key);\n\t\t          if ($$route$recognizer$$isArray(value)) {\n\t\t            for (var j = 0; j < value.length; j++) {\n\t\t              var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t\t              pairs.push(arrayPair);\n\t\t            }\n\t\t          } else {\n\t\t            pair += \"=\" + encodeURIComponent(value);\n\t\t            pairs.push(pair);\n\t\t          }\n\t\t        }\n\t\t\n\t\t        if (pairs.length === 0) { return ''; }\n\t\t\n\t\t        return \"?\" + pairs.join(\"&\");\n\t\t      },\n\t\t\n\t\t      parseQueryString: function(queryString) {\n\t\t        var pairs = queryString.split(\"&\"), queryParams = {};\n\t\t        for(var i=0; i < pairs.length; i++) {\n\t\t          var pair      = pairs[i].split('='),\n\t\t              key       = $$route$recognizer$$decodeQueryParamPart(pair[0]),\n\t\t              keyLength = key.length,\n\t\t              isArray = false,\n\t\t              value;\n\t\t          if (pair.length === 1) {\n\t\t            value = 'true';\n\t\t          } else {\n\t\t            //Handle arrays\n\t\t            if (keyLength > 2 && key.slice(keyLength -2) === '[]') {\n\t\t              isArray = true;\n\t\t              key = key.slice(0, keyLength - 2);\n\t\t              if(!queryParams[key]) {\n\t\t                queryParams[key] = [];\n\t\t              }\n\t\t            }\n\t\t            value = pair[1] ? $$route$recognizer$$decodeQueryParamPart(pair[1]) : '';\n\t\t          }\n\t\t          if (isArray) {\n\t\t            queryParams[key].push(value);\n\t\t          } else {\n\t\t            queryParams[key] = value;\n\t\t          }\n\t\t        }\n\t\t        return queryParams;\n\t\t      },\n\t\t\n\t\t      recognize: function(path) {\n\t\t        var states = [ this.rootState ],\n\t\t            pathLen, i, l, queryStart, queryParams = {},\n\t\t            isSlashDropped = false;\n\t\t\n\t\t        queryStart = path.indexOf('?');\n\t\t        if (queryStart !== -1) {\n\t\t          var queryString = path.substr(queryStart + 1, path.length);\n\t\t          path = path.substr(0, queryStart);\n\t\t          queryParams = this.parseQueryString(queryString);\n\t\t        }\n\t\t\n\t\t        path = decodeURI(path);\n\t\t\n\t\t        if (path.charAt(0) !== \"/\") { path = \"/\" + path; }\n\t\t\n\t\t        pathLen = path.length;\n\t\t        if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t\t          path = path.substr(0, pathLen - 1);\n\t\t          isSlashDropped = true;\n\t\t        }\n\t\t\n\t\t        for (i=0; i<path.length; i++) {\n\t\t          states = $$route$recognizer$$recognizeChar(states, path.charAt(i));\n\t\t          if (!states.length) { break; }\n\t\t        }\n\t\t\n\t\t        var solutions = [];\n\t\t        for (i=0; i<states.length; i++) {\n\t\t          if (states[i].handlers) { solutions.push(states[i]); }\n\t\t        }\n\t\t\n\t\t        states = $$route$recognizer$$sortSolutions(solutions);\n\t\t\n\t\t        var state = solutions[0];\n\t\t\n\t\t        if (state && state.handlers) {\n\t\t          // if a trailing slash was dropped and a star segment is the last segment\n\t\t          // specified, put the trailing slash back\n\t\t          if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t\t            path = path + \"/\";\n\t\t          }\n\t\t          return $$route$recognizer$$findHandler(state, path, queryParams);\n\t\t        }\n\t\t      }\n\t\t    };\n\t\t\n\t\t    $$route$recognizer$$RouteRecognizer.prototype.map = $$route$recognizer$dsl$$default;\n\t\t\n\t\t    $$route$recognizer$$RouteRecognizer.VERSION = '0.1.11';\n\t\t\n\t\t    var $$route$recognizer$$default = $$route$recognizer$$RouteRecognizer;\n\t\t\n\t\t    /* global define:true module:true window: true */\n\t\t    if ( true && __webpack_require__(3)['amd']) {\n\t\t      !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return $$route$recognizer$$default; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t    } else if (typeof module !== 'undefined' && module['exports']) {\n\t\t      module['exports'] = $$route$recognizer$$default;\n\t\t    } else if (typeof this !== 'undefined') {\n\t\t      this['RouteRecognizer'] = $$route$recognizer$$default;\n\t\t    }\n\t\t}).call(this);\n\t\t\n\t\t//# sourceMappingURL=route-recognizer.js.map\n\t\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = function(module) {\r\n\t\t\tif(!module.webpackPolyfill) {\r\n\t\t\t\tmodule.deprecate = function() {};\r\n\t\t\t\tmodule.paths = [];\r\n\t\t\t\t// module.parent = undefined by default\r\n\t\t\t\tmodule.children = [];\r\n\t\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t\t}\r\n\t\t\treturn module;\r\n\t\t}\r\n\t\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=router.js.map\n\n/***/ })\n/******/ ])\n});\n;\n//# sourceMappingURL=powerbi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcG93ZXJiaS1jbGllbnQvZGlzdC9wb3dlcmJpLmpzPzc1OTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLElBQUksSUFBeUQ7QUFDN0Q7QUFDQSxNQUFNLEVBSytCO0FBQ3JDLENBQUM7QUFDRCxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFlBQVk7QUFDNUIsZ0JBQWdCLGFBQWE7QUFDN0IsZ0JBQWdCLGVBQWU7QUFDL0IsZ0JBQWdCLHNCQUFzQixXQUFXO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxhQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNB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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsb0RBQW9EO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyx5RUFBeUU7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGtGQUFrRjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxzRUFBc0U7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRywyRkFBMkY7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcscUZBQXFGO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLG1IQUFtSDtBQUN0SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLFFBQVE7QUFDUjtBQUNBOztBQUVBLGdEQUFnRCxjQUFjO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSxnQkFBZ0Isc0NBQXNDLGlCQUFpQixFQUFFO0FBQ3JGLDJCQUEyQix1REFBdUQ7QUFDbEY7QUFDQTtBQUNBLHlCQUF5QixzQkFBc0I7QUFDL0M7QUFDQTtBQUNBLEdBQUc7QUFDSCxnREFBZ0QsY0FBYztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLHlCQUF5QixrQkFBa0I7QUFDM0M7QUFDQSx3REFBd0QsZ0JBQWdCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FB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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNB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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7OztBQUdBLFFBQVE7QUFDUjtBQUNBLEVBQUU7QUFDRjtBQUNBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFD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QUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBLFVBQVUsS0FBeUI7QUFDbkMsc0RBQXNELG9DQUFvQyxFQUFFO0FBQzVGLE9BQU87QUFDUDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLDhCQUE4Qjs7QUFFOUIsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLFFBQVE7QUFDUjtBQUNBOztBQUVBLCtCQUErQixtREFBbUQ7OztBQUdsRjtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUEsT0FBTztBQUNQO0FBQ0EsQ0FBQztBQUNEO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcG93ZXJiaS1jbGllbnQvZGlzdC9wb3dlcmJpLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIHBvd2VyYmktY2xpZW50IHYyLjguMCB8IChjKSAyMDE2IE1pY3Jvc29mdCBDb3Jwb3JhdGlvbiBNSVQgKi9cbihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcInBvd2VyYmktY2xpZW50XCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcInBvd2VyYmktY2xpZW50XCJdID0gZmFjdG9yeSgpO1xufSkodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gLyoqKioqKi8gKGZ1bmN0aW9uKG1vZHVsZXMpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuLyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuLyoqKioqKi8gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuLyoqKioqKi8gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKVxuLyoqKioqKi8gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge30sXG4vKioqKioqLyBcdFx0XHRpZDogbW9kdWxlSWQsXG4vKioqKioqLyBcdFx0XHRsb2FkZWQ6IGZhbHNlXG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4vKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbi8qKioqKiovIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbi8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4vKioqKioqLyBcdH1cbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4vKioqKioqLyB9KVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovIChbXG4vKiAwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblx0dmFyIHNlcnZpY2UgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xyXG5cdGV4cG9ydHMuc2VydmljZSA9IHNlcnZpY2U7XHJcblx0dmFyIGZhY3RvcmllcyA9IF9fd2VicGFja19yZXF1aXJlX18oMTYpO1xyXG5cdGV4cG9ydHMuZmFjdG9yaWVzID0gZmFjdG9yaWVzO1xyXG5cdHZhciBtb2RlbHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xyXG5cdGV4cG9ydHMubW9kZWxzID0gbW9kZWxzO1xyXG5cdHZhciByZXBvcnRfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNSk7XHJcblx0ZXhwb3J0cy5SZXBvcnQgPSByZXBvcnRfMS5SZXBvcnQ7XHJcblx0dmFyIGRhc2hib2FyZF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMik7XHJcblx0ZXhwb3J0cy5EYXNoYm9hcmQgPSBkYXNoYm9hcmRfMS5EYXNoYm9hcmQ7XHJcblx0dmFyIHRpbGVfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTMpO1xyXG5cdGV4cG9ydHMuVGlsZSA9IHRpbGVfMS5UaWxlO1xyXG5cdHZhciBlbWJlZF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRleHBvcnRzLkVtYmVkID0gZW1iZWRfMS5FbWJlZDtcclxuXHR2YXIgcGFnZV8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3KTtcclxuXHRleHBvcnRzLlBhZ2UgPSBwYWdlXzEuUGFnZTtcclxuXHR2YXIgcW5hXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE0KTtcclxuXHRleHBvcnRzLlFuYSA9IHFuYV8xLlFuYTtcclxuXHR2YXIgdmlzdWFsXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1KTtcclxuXHRleHBvcnRzLlZpc3VhbCA9IHZpc3VhbF8xLlZpc3VhbDtcclxuXHR2YXIgdmlzdWFsRGVzY3JpcHRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcclxuXHRleHBvcnRzLlZpc3VhbERlc2NyaXB0b3IgPSB2aXN1YWxEZXNjcmlwdG9yXzEuVmlzdWFsRGVzY3JpcHRvcjtcclxuXHQvKipcclxuXHQgKiBNYWtlcyBQb3dlciBCSSBhdmFpbGFibGUgdG8gdGhlIGdsb2JhbCBvYmplY3QgZm9yIHVzZSBpbiBhcHBsaWNhdGlvbnMgdGhhdCBkb24ndCBoYXZlIG1vZHVsZSBsb2FkaW5nIHN1cHBvcnQuXHJcblx0ICpcclxuXHQgKiBOb3RlOiBjcmVhdGUgYW4gaW5zdGFuY2Ugb2YgdGhlIGNsYXNzIHdpdGggdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbiBmb3Igbm9ybWFsIHVzYWdlLCBvciBzYXZlIHRoZSBjbGFzcyBzbyB0aGF0IHlvdSBjYW4gY3JlYXRlIGFuIGluc3RhbmNlIG9mIHRoZSBzZXJ2aWNlLlxyXG5cdCAqL1xyXG5cdHZhciBwb3dlcmJpID0gbmV3IHNlcnZpY2UuU2VydmljZShmYWN0b3JpZXMuaHBtRmFjdG9yeSwgZmFjdG9yaWVzLndwbXBGYWN0b3J5LCBmYWN0b3JpZXMucm91dGVyRmFjdG9yeSk7XHJcblx0d2luZG93LnBvd2VyYmkgPSBwb3dlcmJpO1xyXG5cblxuLyoqKi8gfSksXG4vKiAxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblx0dmFyIGVtYmVkID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHR2YXIgcmVwb3J0XzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xyXG5cdHZhciBjcmVhdGVfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTEpO1xyXG5cdHZhciBkYXNoYm9hcmRfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTIpO1xyXG5cdHZhciB0aWxlXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKTtcclxuXHR2YXIgcGFnZV8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3KTtcclxuXHR2YXIgcW5hXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE0KTtcclxuXHR2YXIgdmlzdWFsXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1KTtcclxuXHR2YXIgdXRpbHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xyXG5cdC8qKlxyXG5cdCAqIFRoZSBQb3dlciBCSSBTZXJ2aWNlIGVtYmVkIGNvbXBvbmVudCwgd2hpY2ggaXMgdGhlIGVudHJ5IHBvaW50IHRvIGVtYmVkIGFsbCBvdGhlciBQb3dlciBCSSBjb21wb25lbnRzIGludG8geW91ciBhcHBsaWNhdGlvblxyXG5cdCAqXHJcblx0ICogQGV4cG9ydFxyXG5cdCAqIEBjbGFzcyBTZXJ2aWNlXHJcblx0ICogQGltcGxlbWVudHMge0lTZXJ2aWNlfVxyXG5cdCAqL1xyXG5cdHZhciBTZXJ2aWNlID0gKGZ1bmN0aW9uICgpIHtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYSBQb3dlciBCSSBTZXJ2aWNlLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0ge0lIcG1GYWN0b3J5fSBocG1GYWN0b3J5IFRoZSBodHRwIHBvc3QgbWVzc2FnZSBmYWN0b3J5IHVzZWQgaW4gdGhlIHBvc3RNZXNzYWdlIGNvbW11bmljYXRpb24gbGF5ZXJcclxuXHQgICAgICogQHBhcmFtIHtJV3BtcEZhY3Rvcnl9IHdwbXBGYWN0b3J5IFRoZSB3aW5kb3cgcG9zdCBtZXNzYWdlIGZhY3RvcnkgdXNlZCBpbiB0aGUgcG9zdE1lc3NhZ2UgY29tbXVuaWNhdGlvbiBsYXllclxyXG5cdCAgICAgKiBAcGFyYW0ge0lSb3V0ZXJGYWN0b3J5fSByb3V0ZXJGYWN0b3J5IFRoZSByb3V0ZXIgZmFjdG9yeSB1c2VkIGluIHRoZSBwb3N0TWVzc2FnZSBjb21tdW5pY2F0aW9uIGxheWVyXHJcblx0ICAgICAqIEBwYXJhbSB7SVNlcnZpY2VDb25maWd1cmF0aW9ufSBbY29uZmlnPXt9XVxyXG5cdCAgICAgKi9cclxuXHQgICAgZnVuY3Rpb24gU2VydmljZShocG1GYWN0b3J5LCB3cG1wRmFjdG9yeSwgcm91dGVyRmFjdG9yeSwgY29uZmlnKSB7XHJcblx0ICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG5cdCAgICAgICAgaWYgKGNvbmZpZyA9PT0gdm9pZCAwKSB7IGNvbmZpZyA9IHt9OyB9XHJcblx0ICAgICAgICB0aGlzLndwbXAgPSB3cG1wRmFjdG9yeShjb25maWcud3BtcE5hbWUsIGNvbmZpZy5sb2dNZXNzYWdlcyk7XHJcblx0ICAgICAgICB0aGlzLmhwbSA9IGhwbUZhY3RvcnkodGhpcy53cG1wLCBudWxsLCBjb25maWcudmVyc2lvbiwgY29uZmlnLnR5cGUpO1xyXG5cdCAgICAgICAgdGhpcy5yb3V0ZXIgPSByb3V0ZXJGYWN0b3J5KHRoaXMud3BtcCk7XHJcblx0ICAgICAgICB0aGlzLnVuaXF1ZVNlc3Npb25JZCA9IHV0aWxzLmdlbmVyYXRlVVVJRCgpO1xyXG5cdCAgICAgICAgLyoqXHJcblx0ICAgICAgICAgKiBBZGRzIGhhbmRsZXIgZm9yIHJlcG9ydCBldmVudHMuXHJcblx0ICAgICAgICAgKi9cclxuXHQgICAgICAgIHRoaXMucm91dGVyLnBvc3QoXCIvcmVwb3J0cy86dW5pcXVlSWQvZXZlbnRzLzpldmVudE5hbWVcIiwgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcblx0ICAgICAgICAgICAgdmFyIGV2ZW50ID0ge1xyXG5cdCAgICAgICAgICAgICAgICB0eXBlOiAncmVwb3J0JyxcclxuXHQgICAgICAgICAgICAgICAgaWQ6IHJlcS5wYXJhbXMudW5pcXVlSWQsXHJcblx0ICAgICAgICAgICAgICAgIG5hbWU6IHJlcS5wYXJhbXMuZXZlbnROYW1lLFxyXG5cdCAgICAgICAgICAgICAgICB2YWx1ZTogcmVxLmJvZHlcclxuXHQgICAgICAgICAgICB9O1xyXG5cdCAgICAgICAgICAgIF90aGlzLmhhbmRsZUV2ZW50KGV2ZW50KTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICAgICAgdGhpcy5yb3V0ZXIucG9zdChcIi9yZXBvcnRzLzp1bmlxdWVJZC9wYWdlcy86cGFnZU5hbWUvZXZlbnRzLzpldmVudE5hbWVcIiwgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcblx0ICAgICAgICAgICAgdmFyIGV2ZW50ID0ge1xyXG5cdCAgICAgICAgICAgICAgICB0eXBlOiAncmVwb3J0JyxcclxuXHQgICAgICAgICAgICAgICAgaWQ6IHJlcS5wYXJhbXMudW5pcXVlSWQsXHJcblx0ICAgICAgICAgICAgICAgIG5hbWU6IHJlcS5wYXJhbXMuZXZlbnROYW1lLFxyXG5cdCAgICAgICAgICAgICAgICB2YWx1ZTogcmVxLmJvZHlcclxuXHQgICAgICAgICAgICB9O1xyXG5cdCAgICAgICAgICAgIF90aGlzLmhhbmRsZUV2ZW50KGV2ZW50KTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICAgICAgdGhpcy5yb3V0ZXIucG9zdChcIi9yZXBvcnRzLzp1bmlxdWVJZC9wYWdlcy86cGFnZU5hbWUvdmlzdWFscy86dmlzdWFsTmFtZS9ldmVudHMvOmV2ZW50TmFtZVwiLCBmdW5jdGlvbiAocmVxLCByZXMpIHtcclxuXHQgICAgICAgICAgICB2YXIgZXZlbnQgPSB7XHJcblx0ICAgICAgICAgICAgICAgIHR5cGU6ICdyZXBvcnQnLFxyXG5cdCAgICAgICAgICAgICAgICBpZDogcmVxLnBhcmFtcy51bmlxdWVJZCxcclxuXHQgICAgICAgICAgICAgICAgbmFtZTogcmVxLnBhcmFtcy5ldmVudE5hbWUsXHJcblx0ICAgICAgICAgICAgICAgIHZhbHVlOiByZXEuYm9keVxyXG5cdCAgICAgICAgICAgIH07XHJcblx0ICAgICAgICAgICAgX3RoaXMuaGFuZGxlRXZlbnQoZXZlbnQpO1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgICAgICB0aGlzLnJvdXRlci5wb3N0KFwiL2Rhc2hib2FyZHMvOnVuaXF1ZUlkL2V2ZW50cy86ZXZlbnROYW1lXCIsIGZ1bmN0aW9uIChyZXEsIHJlcykge1xyXG5cdCAgICAgICAgICAgIHZhciBldmVudCA9IHtcclxuXHQgICAgICAgICAgICAgICAgdHlwZTogJ2Rhc2hib2FyZCcsXHJcblx0ICAgICAgICAgICAgICAgIGlkOiByZXEucGFyYW1zLnVuaXF1ZUlkLFxyXG5cdCAgICAgICAgICAgICAgICBuYW1lOiByZXEucGFyYW1zLmV2ZW50TmFtZSxcclxuXHQgICAgICAgICAgICAgICAgdmFsdWU6IHJlcS5ib2R5XHJcblx0ICAgICAgICAgICAgfTtcclxuXHQgICAgICAgICAgICBfdGhpcy5oYW5kbGVFdmVudChldmVudCk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgICAgIHRoaXMucm91dGVyLnBvc3QoXCIvdGlsZS86dW5pcXVlSWQvZXZlbnRzLzpldmVudE5hbWVcIiwgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcblx0ICAgICAgICAgICAgdmFyIGV2ZW50ID0ge1xyXG5cdCAgICAgICAgICAgICAgICB0eXBlOiAndGlsZScsXHJcblx0ICAgICAgICAgICAgICAgIGlkOiByZXEucGFyYW1zLnVuaXF1ZUlkLFxyXG5cdCAgICAgICAgICAgICAgICBuYW1lOiByZXEucGFyYW1zLmV2ZW50TmFtZSxcclxuXHQgICAgICAgICAgICAgICAgdmFsdWU6IHJlcS5ib2R5XHJcblx0ICAgICAgICAgICAgfTtcclxuXHQgICAgICAgICAgICBfdGhpcy5oYW5kbGVFdmVudChldmVudCk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgICAgIC8qKlxyXG5cdCAgICAgICAgICogQWRkcyBoYW5kbGVyIGZvciBRJkEgZXZlbnRzLlxyXG5cdCAgICAgICAgICovXHJcblx0ICAgICAgICB0aGlzLnJvdXRlci5wb3N0KFwiL3FuYS86dW5pcXVlSWQvZXZlbnRzLzpldmVudE5hbWVcIiwgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcblx0ICAgICAgICAgICAgdmFyIGV2ZW50ID0ge1xyXG5cdCAgICAgICAgICAgICAgICB0eXBlOiAncW5hJyxcclxuXHQgICAgICAgICAgICAgICAgaWQ6IHJlcS5wYXJhbXMudW5pcXVlSWQsXHJcblx0ICAgICAgICAgICAgICAgIG5hbWU6IHJlcS5wYXJhbXMuZXZlbnROYW1lLFxyXG5cdCAgICAgICAgICAgICAgICB2YWx1ZTogcmVxLmJvZHlcclxuXHQgICAgICAgICAgICB9O1xyXG5cdCAgICAgICAgICAgIF90aGlzLmhhbmRsZUV2ZW50KGV2ZW50KTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICAgICAgLyoqXHJcblx0ICAgICAgICAgKiBBZGRzIGhhbmRsZXIgZm9yIGZyb250IGxvYWQgJ3JlYWR5JyBtZXNzYWdlLlxyXG5cdCAgICAgICAgICovXHJcblx0ICAgICAgICB0aGlzLnJvdXRlci5wb3N0KFwiL3JlYWR5Lzp1bmlxdWVJZFwiLCBmdW5jdGlvbiAocmVxLCByZXMpIHtcclxuXHQgICAgICAgICAgICB2YXIgZXZlbnQgPSB7XHJcblx0ICAgICAgICAgICAgICAgIHR5cGU6ICdyZXBvcnQnLFxyXG5cdCAgICAgICAgICAgICAgICBpZDogcmVxLnBhcmFtcy51bmlxdWVJZCxcclxuXHQgICAgICAgICAgICAgICAgbmFtZTogJ3JlYWR5JyxcclxuXHQgICAgICAgICAgICAgICAgdmFsdWU6IHJlcS5ib2R5XHJcblx0ICAgICAgICAgICAgfTtcclxuXHQgICAgICAgICAgICBfdGhpcy5oYW5kbGVFdmVudChldmVudCk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgICAgIHRoaXMuZW1iZWRzID0gW107XHJcblx0ICAgICAgICAvLyBUT0RPOiBDaGFuZ2Ugd2hlbiBPYmplY3QuYXNzaWduIGlzIGF2YWlsYWJsZS5cclxuXHQgICAgICAgIHRoaXMuY29uZmlnID0gdXRpbHMuYXNzaWduKHt9LCBTZXJ2aWNlLmRlZmF1bHRDb25maWcsIGNvbmZpZyk7XHJcblx0ICAgICAgICBpZiAodGhpcy5jb25maWcuYXV0b0VtYmVkT25Db250ZW50TG9hZGVkKSB7XHJcblx0ICAgICAgICAgICAgdGhpcy5lbmFibGVBdXRvRW1iZWQoKTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgfVxyXG5cdCAgICAvKipcclxuXHQgICAgICogQ3JlYXRlcyBuZXcgcmVwb3J0XHJcblx0ICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcclxuXHQgICAgICogQHBhcmFtIHtlbWJlZC5JRW1iZWRDb25maWd1cmF0aW9ufSBbY29uZmlnPXt9XVxyXG5cdCAgICAgKiBAcmV0dXJucyB7ZW1iZWQuRW1iZWR9XHJcblx0ICAgICAqL1xyXG5cdCAgICBTZXJ2aWNlLnByb3RvdHlwZS5jcmVhdGVSZXBvcnQgPSBmdW5jdGlvbiAoZWxlbWVudCwgY29uZmlnKSB7XHJcblx0ICAgICAgICBjb25maWcudHlwZSA9ICdjcmVhdGUnO1xyXG5cdCAgICAgICAgdmFyIHBvd2VyQmlFbGVtZW50ID0gZWxlbWVudDtcclxuXHQgICAgICAgIHZhciBjb21wb25lbnQgPSBuZXcgY3JlYXRlXzEuQ3JlYXRlKHRoaXMsIHBvd2VyQmlFbGVtZW50LCBjb25maWcpO1xyXG5cdCAgICAgICAgcG93ZXJCaUVsZW1lbnQucG93ZXJCaUVtYmVkID0gY29tcG9uZW50O1xyXG5cdCAgICAgICAgdGhpcy5hZGRPck92ZXJ3cml0ZUVtYmVkKGNvbXBvbmVudCwgZWxlbWVudCk7XHJcblx0ICAgICAgICByZXR1cm4gY29tcG9uZW50O1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogVE9ETzogQWRkIGEgZGVzY3JpcHRpb24gaGVyZVxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBbY29udGFpbmVyXVxyXG5cdCAgICAgKiBAcGFyYW0ge2VtYmVkLklFbWJlZENvbmZpZ3VyYXRpb259IFtjb25maWc9dW5kZWZpbmVkXVxyXG5cdCAgICAgKiBAcmV0dXJucyB7ZW1iZWQuRW1iZWRbXX1cclxuXHQgICAgICovXHJcblx0ICAgIFNlcnZpY2UucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoY29udGFpbmVyLCBjb25maWcpIHtcclxuXHQgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcblx0ICAgICAgICBpZiAoY29uZmlnID09PSB2b2lkIDApIHsgY29uZmlnID0gdW5kZWZpbmVkOyB9XHJcblx0ICAgICAgICBjb250YWluZXIgPSAoY29udGFpbmVyICYmIGNvbnRhaW5lciBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSA/IGNvbnRhaW5lciA6IGRvY3VtZW50LmJvZHk7XHJcblx0ICAgICAgICB2YXIgZWxlbWVudHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChjb250YWluZXIucXVlcnlTZWxlY3RvckFsbChcIltcIiArIGVtYmVkLkVtYmVkLmVtYmVkVXJsQXR0cmlidXRlICsgXCJdXCIpKTtcclxuXHQgICAgICAgIHJldHVybiBlbGVtZW50cy5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHsgcmV0dXJuIF90aGlzLmVtYmVkKGVsZW1lbnQsIGNvbmZpZyk7IH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogR2l2ZW4gYSBjb25maWd1cmF0aW9uIGJhc2VkIG9uIGFuIEhUTUwgZWxlbWVudCxcclxuXHQgICAgICogaWYgdGhlIGNvbXBvbmVudCBoYXMgYWxyZWFkeSBiZWVuIGNyZWF0ZWQgYW5kIGF0dGFjaGVkIHRvIHRoZSBlbGVtZW50LCByZXVzZXMgdGhlIGNvbXBvbmVudCBpbnN0YW5jZSBhbmQgZXhpc3RpbmcgaWZyYW1lLFxyXG5cdCAgICAgKiBvdGhlcndpc2UgY3JlYXRlcyBhIG5ldyBjb21wb25lbnQgaW5zdGFuY2UuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcclxuXHQgICAgICogQHBhcmFtIHtlbWJlZC5JRW1iZWRDb25maWd1cmF0aW9uQmFzZX0gW2NvbmZpZz17fV1cclxuXHQgICAgICogQHJldHVybnMge2VtYmVkLkVtYmVkfVxyXG5cdCAgICAgKi9cclxuXHQgICAgU2VydmljZS5wcm90b3R5cGUuZW1iZWQgPSBmdW5jdGlvbiAoZWxlbWVudCwgY29uZmlnKSB7XHJcblx0ICAgICAgICBpZiAoY29uZmlnID09PSB2b2lkIDApIHsgY29uZmlnID0ge307IH1cclxuXHQgICAgICAgIHJldHVybiB0aGlzLmVtYmVkSW50ZXJuYWwoZWxlbWVudCwgY29uZmlnKTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEdpdmVuIGEgY29uZmlndXJhdGlvbiBiYXNlZCBvbiBhbiBIVE1MIGVsZW1lbnQsXHJcblx0ICAgICAqIGlmIHRoZSBjb21wb25lbnQgaGFzIGFscmVhZHkgYmVlbiBjcmVhdGVkIGFuZCBhdHRhY2hlZCB0byB0aGUgZWxlbWVudCwgcmV1c2VzIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgYW5kIGV4aXN0aW5nIGlmcmFtZSxcclxuXHQgICAgICogb3RoZXJ3aXNlIGNyZWF0ZXMgYSBuZXcgY29tcG9uZW50IGluc3RhbmNlLlxyXG5cdCAgICAgKiBUaGlzIGlzIHVzZWQgZm9yIHRoZSBwaGFzZWQgZW1iZWRkaW5nIEFQSSwgb25jZSBlbGVtZW50IGlzIGxvYWRlZCBzdWNjZXNzZnVsbHksIG9uZSBjYW4gY2FsbCAncmVuZGVyJyBvbiBpdC5cclxuXHQgICAgICpcclxuXHQgICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxyXG5cdCAgICAgKiBAcGFyYW0ge2VtYmVkLklFbWJlZENvbmZpZ3VyYXRpb25CYXNlfSBbY29uZmlnPXt9XVxyXG5cdCAgICAgKiBAcmV0dXJucyB7ZW1iZWQuRW1iZWR9XHJcblx0ICAgICAqL1xyXG5cdCAgICBTZXJ2aWNlLnByb3RvdHlwZS5sb2FkID0gZnVuY3Rpb24gKGVsZW1lbnQsIGNvbmZpZykge1xyXG5cdCAgICAgICAgaWYgKGNvbmZpZyA9PT0gdm9pZCAwKSB7IGNvbmZpZyA9IHt9OyB9XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5lbWJlZEludGVybmFsKGVsZW1lbnQsIGNvbmZpZywgLyogcGhhc2VkUmVuZGVyICovIHRydWUpO1xyXG5cdCAgICB9O1xyXG5cdCAgICBTZXJ2aWNlLnByb3RvdHlwZS5lbWJlZEludGVybmFsID0gZnVuY3Rpb24gKGVsZW1lbnQsIGNvbmZpZywgcGhhc2VkUmVuZGVyKSB7XHJcblx0ICAgICAgICBpZiAoY29uZmlnID09PSB2b2lkIDApIHsgY29uZmlnID0ge307IH1cclxuXHQgICAgICAgIHZhciBjb21wb25lbnQ7XHJcblx0ICAgICAgICB2YXIgcG93ZXJCaUVsZW1lbnQgPSBlbGVtZW50O1xyXG5cdCAgICAgICAgaWYgKHBvd2VyQmlFbGVtZW50LnBvd2VyQmlFbWJlZCkge1xyXG5cdCAgICAgICAgICAgIGNvbXBvbmVudCA9IHRoaXMuZW1iZWRFeGlzdGluZyhwb3dlckJpRWxlbWVudCwgY29uZmlnLCBwaGFzZWRSZW5kZXIpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgZWxzZSB7XHJcblx0ICAgICAgICAgICAgY29tcG9uZW50ID0gdGhpcy5lbWJlZE5ldyhwb3dlckJpRWxlbWVudCwgY29uZmlnLCBwaGFzZWRSZW5kZXIpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIGNvbXBvbmVudDtcclxuXHQgICAgfTtcclxuXHQgICAgU2VydmljZS5wcm90b3R5cGUuZ2V0TnVtYmVyT2ZDb21wb25lbnRzID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgaWYgKCF0aGlzLmVtYmVkcykge1xyXG5cdCAgICAgICAgICAgIHJldHVybiAwO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuZW1iZWRzLmxlbmd0aDtcclxuXHQgICAgfTtcclxuXHQgICAgU2VydmljZS5wcm90b3R5cGUuZ2V0U2RrU2Vzc2lvbklkID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMudW5pcXVlU2Vzc2lvbklkO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogR2l2ZW4gYSBjb25maWd1cmF0aW9uIGJhc2VkIG9uIGEgUG93ZXIgQkkgZWxlbWVudCwgc2F2ZXMgdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB0aGF0IHJlZmVyZW5jZSB0aGUgZWxlbWVudCBmb3IgbGF0ZXIgbG9va3VwLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcHJpdmF0ZVxyXG5cdCAgICAgKiBAcGFyYW0ge0lQb3dlckJpRWxlbWVudH0gZWxlbWVudFxyXG5cdCAgICAgKiBAcGFyYW0ge2VtYmVkLklFbWJlZENvbmZpZ3VyYXRpb25CYXNlfSBjb25maWdcclxuXHQgICAgICogQHJldHVybnMge2VtYmVkLkVtYmVkfVxyXG5cdCAgICAgKi9cclxuXHQgICAgU2VydmljZS5wcm90b3R5cGUuZW1iZWROZXcgPSBmdW5jdGlvbiAoZWxlbWVudCwgY29uZmlnLCBwaGFzZWRSZW5kZXIpIHtcclxuXHQgICAgICAgIHZhciBjb21wb25lbnRUeXBlID0gY29uZmlnLnR5cGUgfHwgZWxlbWVudC5nZXRBdHRyaWJ1dGUoZW1iZWQuRW1iZWQudHlwZUF0dHJpYnV0ZSk7XHJcblx0ICAgICAgICBpZiAoIWNvbXBvbmVudFR5cGUpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBdHRlbXB0ZWQgdG8gZW1iZWQgdXNpbmcgY29uZmlnIFwiICsgSlNPTi5zdHJpbmdpZnkoY29uZmlnKSArIFwiIG9uIGVsZW1lbnQgXCIgKyBlbGVtZW50Lm91dGVySFRNTCArIFwiLCBidXQgY291bGQgbm90IGRldGVybWluZSB3aGF0IHR5cGUgb2YgY29tcG9uZW50IHRvIGVtYmVkLiBZb3UgbXVzdCBzcGVjaWZ5IGEgdHlwZSBpbiB0aGUgY29uZmlndXJhdGlvbiBvciBhcyBhbiBhdHRyaWJ1dGUgc3VjaCBhcyAnXCIgKyBlbWJlZC5FbWJlZC50eXBlQXR0cmlidXRlICsgXCI9XFxcIlwiICsgcmVwb3J0XzEuUmVwb3J0LnR5cGUudG9Mb3dlckNhc2UoKSArIFwiXFxcIicuXCIpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgLy8gU2F2ZXMgdGhlIHR5cGUgYXMgcGFydCBvZiB0aGUgY29uZmlndXJhdGlvbiBzbyB0aGF0IGl0IGNhbiBiZSByZWZlcmVuY2VkIGxhdGVyIGF0IGEga25vd24gbG9jYXRpb24uXHJcblx0ICAgICAgICBjb25maWcudHlwZSA9IGNvbXBvbmVudFR5cGU7XHJcblx0ICAgICAgICB2YXIgQ29tcG9uZW50ID0gdXRpbHMuZmluZChmdW5jdGlvbiAoY29tcG9uZW50KSB7IHJldHVybiBjb21wb25lbnRUeXBlID09PSBjb21wb25lbnQudHlwZS50b0xvd2VyQ2FzZSgpOyB9LCBTZXJ2aWNlLmNvbXBvbmVudHMpO1xyXG5cdCAgICAgICAgaWYgKCFDb21wb25lbnQpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBdHRlbXB0ZWQgdG8gZW1iZWQgY29tcG9uZW50IG9mIHR5cGU6IFwiICsgY29tcG9uZW50VHlwZSArIFwiIGJ1dCBkaWQgbm90IGZpbmQgYW55IG1hdGNoaW5nIGNvbXBvbmVudC4gIFBsZWFzZSB2ZXJpZnkgdGhlIHR5cGUgeW91IHNwZWNpZmllZCBpcyBpbnRlbmRlZC5cIik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICB2YXIgY29tcG9uZW50ID0gbmV3IENvbXBvbmVudCh0aGlzLCBlbGVtZW50LCBjb25maWcsIHBoYXNlZFJlbmRlcik7XHJcblx0ICAgICAgICBlbGVtZW50LnBvd2VyQmlFbWJlZCA9IGNvbXBvbmVudDtcclxuXHQgICAgICAgIHRoaXMuYWRkT3JPdmVyd3JpdGVFbWJlZChjb21wb25lbnQsIGVsZW1lbnQpO1xyXG5cdCAgICAgICAgcmV0dXJuIGNvbXBvbmVudDtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEdpdmVuIGFuIGVsZW1lbnQgdGhhdCBhbHJlYWR5IGNvbnRhaW5zIGFuIGVtYmVkIGNvbXBvbmVudCwgbG9hZCB3aXRoIGEgbmV3IGNvbmZpZ3VyYXRpb24uXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwcml2YXRlXHJcblx0ICAgICAqIEBwYXJhbSB7SVBvd2VyQmlFbGVtZW50fSBlbGVtZW50XHJcblx0ICAgICAqIEBwYXJhbSB7ZW1iZWQuSUVtYmVkQ29uZmlndXJhdGlvbkJhc2V9IGNvbmZpZ1xyXG5cdCAgICAgKiBAcmV0dXJucyB7ZW1iZWQuRW1iZWR9XHJcblx0ICAgICAqL1xyXG5cdCAgICBTZXJ2aWNlLnByb3RvdHlwZS5lbWJlZEV4aXN0aW5nID0gZnVuY3Rpb24gKGVsZW1lbnQsIGNvbmZpZywgcGhhc2VkUmVuZGVyKSB7XHJcblx0ICAgICAgICB2YXIgY29tcG9uZW50ID0gdXRpbHMuZmluZChmdW5jdGlvbiAoeCkgeyByZXR1cm4geC5lbGVtZW50ID09PSBlbGVtZW50OyB9LCB0aGlzLmVtYmVkcyk7XHJcblx0ICAgICAgICBpZiAoIWNvbXBvbmVudCkge1xyXG5cdCAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkF0dGVtcHRlZCB0byBlbWJlZCB1c2luZyBjb25maWcgXCIgKyBKU09OLnN0cmluZ2lmeShjb25maWcpICsgXCIgb24gZWxlbWVudCBcIiArIGVsZW1lbnQub3V0ZXJIVE1MICsgXCIgd2hpY2ggYWxyZWFkeSBoYXMgZW1iZWRkZWQgY29tb3BuZW50IGFzc29jaWF0ZWQsIGJ1dCBjb3VsZCBub3QgZmluZCB0aGUgZXhpc3RpbmcgY29tb3BuZW50IGluIHRoZSBsaXN0IG9mIGFjdGl2ZSBjb21wb25lbnRzLiBUaGlzIGNvdWxkIGluZGljYXRlIHRoZSBlbWJlZHMgbGlzdCBpcyBvdXQgb2Ygc3luYyB3aXRoIHRoZSBET00sIG9yIHRoZSBjb21wb25lbnQgaXMgcmVmZXJlbmNpbmcgdGhlIGluY29ycmVjdCBIVE1MIGVsZW1lbnQuXCIpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgLy8gVE9ETzogTXVsdGlwbGUgZW1iZWRkaW5nIHRvIHRoZSBzYW1lIGlmcmFtZSBpcyBub3Qgc3VwcG9ydGVkIGluIFFuQVxyXG5cdCAgICAgICAgaWYgKGNvbmZpZy50eXBlICYmIGNvbmZpZy50eXBlLnRvTG93ZXJDYXNlKCkgPT09IFwicW5hXCIpIHtcclxuXHQgICAgICAgICAgICByZXR1cm4gdGhpcy5lbWJlZE5ldyhlbGVtZW50LCBjb25maWcpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgLyoqXHJcblx0ICAgICAgICAgKiBUT0RPOiBEeW5hbWljIGVtYmVkIHR5cGUgc3dpdGNoaW5nIGNvdWxkIGJlIHN1cHBvcnRlZCBidXQgdGhlcmUgaXMgd29yayBuZWVkZWQgdG8gcHJlcGFyZSB0aGUgc2VydmljZSBzdGF0ZSBhbmQgRE9NIGNsZWFudXAuXHJcblx0ICAgICAgICAgKiByZW1vdmUgYWxsIGV2ZW50IGhhbmRsZXJzIGZyb20gdGhlIERPTSwgdGhlbiByZXNldCB0aGUgZWxlbWVudCB0byBpbml0aWFsIHN0YXRlIHdoaWNoIHJlbW92ZXMgaWZyYW1lLCBhbmQgcmVtb3ZlcyBmcm9tIGxpc3Qgb2YgZW1iZWRzXHJcblx0ICAgICAgICAgKiB0aGVuIHdlIGNhbiBjYWxsIHRoZSBlbWJlZE5ldyBmdW5jdGlvbiB3aGljaCB3b3VsZCBhbGxvdyBzZXR0aW5nIHRoZSBwcm9wZXIgZW1iZWRVcmwgYW5kIGNvbnN0cnVjdGlvbiBvZiBvYmplY3QgYmFzZWQgb24gdGhlIG5ldyB0eXBlLlxyXG5cdCAgICAgICAgICovXHJcblx0ICAgICAgICBpZiAodHlwZW9mIGNvbmZpZy50eXBlID09PSBcInN0cmluZ1wiICYmIGNvbmZpZy50eXBlICE9PSBjb21wb25lbnQuY29uZmlnLnR5cGUpIHtcclxuXHQgICAgICAgICAgICAvKipcclxuXHQgICAgICAgICAgICAgKiBXaGVuIGxvYWRpbmcgcmVwb3J0IGFmdGVyIGNyZWF0ZSB3ZSB3YW50IHRvIHVzZSBleGlzdGluZyBJZnJhbWUgdG8gb3B0aW1pemUgbG9hZCBwZXJpb2RcclxuXHQgICAgICAgICAgICAgKi9cclxuXHQgICAgICAgICAgICBpZiAoY29uZmlnLnR5cGUgPT09IFwicmVwb3J0XCIgJiYgY29tcG9uZW50LmNvbmZpZy50eXBlID09PSBcImNyZWF0ZVwiKSB7XHJcblx0ICAgICAgICAgICAgICAgIHZhciByZXBvcnQgPSBuZXcgcmVwb3J0XzEuUmVwb3J0KHRoaXMsIGVsZW1lbnQsIGNvbmZpZywgLyogcGhhc2VkUmVuZGVyICovIGZhbHNlLCBlbGVtZW50LnBvd2VyQmlFbWJlZC5pZnJhbWUpO1xyXG5cdCAgICAgICAgICAgICAgICByZXBvcnQubG9hZChjb25maWcpO1xyXG5cdCAgICAgICAgICAgICAgICBlbGVtZW50LnBvd2VyQmlFbWJlZCA9IHJlcG9ydDtcclxuXHQgICAgICAgICAgICAgICAgdGhpcy5hZGRPck92ZXJ3cml0ZUVtYmVkKGNvbXBvbmVudCwgZWxlbWVudCk7XHJcblx0ICAgICAgICAgICAgICAgIHJldHVybiByZXBvcnQ7XHJcblx0ICAgICAgICAgICAgfVxyXG5cdCAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVtYmVkZGluZyBvbiBhbiBleGlzdGluZyBlbGVtZW50IHdpdGggYSBkaWZmZXJlbnQgdHlwZSB0aGFuIHRoZSBwcmV2aW91cyBlbWJlZCBvYmplY3QgaXMgbm90IHN1cHBvcnRlZC4gIEF0dGVtcHRlZCB0byBlbWJlZCB1c2luZyBjb25maWcgXCIgKyBKU09OLnN0cmluZ2lmeShjb25maWcpICsgXCIgb24gZWxlbWVudCBcIiArIGVsZW1lbnQub3V0ZXJIVE1MICsgXCIsIGJ1dCB0aGUgZXhpc3RpbmcgZWxlbWVudCBjb250YWlucyBhbiBlbWJlZCBvZiB0eXBlOiBcIiArIHRoaXMuY29uZmlnLnR5cGUgKyBcIiB3aGljaCBkb2VzIG5vdCBtYXRjaCB0aGUgbmV3IHR5cGU6IFwiICsgY29uZmlnLnR5cGUpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgY29tcG9uZW50LnBvcHVsYXRlQ29uZmlnKGNvbmZpZyk7XHJcblx0ICAgICAgICBjb21wb25lbnQubG9hZChjb25maWcsIHBoYXNlZFJlbmRlcik7XHJcblx0ICAgICAgICByZXR1cm4gY29tcG9uZW50O1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogQWRkcyBhbiBldmVudCBoYW5kbGVyIGZvciBET01Db250ZW50TG9hZGVkLCB3aGljaCBzZWFyY2hlcyB0aGUgRE9NIGZvciBlbGVtZW50cyB0aGF0IGhhdmUgdGhlICdwb3dlcmJpLWVtYmVkLXVybCcgYXR0cmlidXRlLFxyXG5cdCAgICAgKiBhbmQgYXV0b21hdGljYWxseSBhdHRlbXB0cyB0byBlbWJlZCBhIHBvd2VyYmkgY29tcG9uZW50IGJhc2VkIG9uIGluZm9ybWF0aW9uIGZyb20gb3RoZXIgcG93ZXJiaS0qIGF0dHJpYnV0ZXMuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIE5vdGU6IE9ubHkgcnVucyBpZiBgY29uZmlnLmF1dG9FbWJlZE9uQ29udGVudExvYWRlZGAgaXMgdHJ1ZSB3aGVuIHRoZSBzZXJ2aWNlIGlzIGNyZWF0ZWQuXHJcblx0ICAgICAqIFRoaXMgaGFuZGxlciBpcyB0eXBpY2FsbHkgdXNlZnVsIG9ubHkgZm9yIGFwcGxpY2F0aW9ucyB0aGF0IGFyZSByZW5kZXJlZCBvbiB0aGUgc2VydmVyIHNvIHRoYXQgYWxsIHJlcXVpcmVkIGRhdGEgaXMgYXZhaWxhYmxlIHdoZW4gdGhlIGhhbmRsZXIgaXMgY2FsbGVkLlxyXG5cdCAgICAgKi9cclxuXHQgICAgU2VydmljZS5wcm90b3R5cGUuZW5hYmxlQXV0b0VtYmVkID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuXHQgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKGV2ZW50KSB7IHJldHVybiBfdGhpcy5pbml0KGRvY3VtZW50LmJvZHkpOyB9LCBmYWxzZSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBSZXR1cm5zIGFuIGluc3RhbmNlIG9mIHRoZSBjb21wb25lbnQgYXNzb2NpYXRlZCB3aXRoIHRoZSBlbGVtZW50LlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XHJcblx0ICAgICAqIEByZXR1cm5zIHsoUmVwb3J0IHwgVGlsZSl9XHJcblx0ICAgICAqL1xyXG5cdCAgICBTZXJ2aWNlLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG5cdCAgICAgICAgdmFyIHBvd2VyQmlFbGVtZW50ID0gZWxlbWVudDtcclxuXHQgICAgICAgIGlmICghcG93ZXJCaUVsZW1lbnQucG93ZXJCaUVtYmVkKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IGF0dGVtcHRlZCB0byBnZXQgYW4gaW5zdGFuY2Ugb2YgcG93ZXJiaSBjb21wb25lbnQgYXNzb2NpYXRlZCB3aXRoIGVsZW1lbnQ6IFwiICsgZWxlbWVudC5vdXRlckhUTUwgKyBcIiBidXQgdGhlcmUgd2FzIG5vIGFzc29jaWF0ZWQgaW5zdGFuY2UuXCIpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIHBvd2VyQmlFbGVtZW50LnBvd2VyQmlFbWJlZDtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEZpbmRzIGFuIGVtYmVkIGluc3RhbmNlIGJ5IHRoZSBuYW1lIG9yIHVuaXF1ZSBJRCB0aGF0IGlzIHByb3ZpZGVkLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0ge3N0cmluZ30gdW5pcXVlSWRcclxuXHQgICAgICogQHJldHVybnMgeyhSZXBvcnQgfCBUaWxlKX1cclxuXHQgICAgICovXHJcblx0ICAgIFNlcnZpY2UucHJvdG90eXBlLmZpbmQgPSBmdW5jdGlvbiAodW5pcXVlSWQpIHtcclxuXHQgICAgICAgIHJldHVybiB1dGlscy5maW5kKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LmNvbmZpZy51bmlxdWVJZCA9PT0gdW5pcXVlSWQ7IH0sIHRoaXMuZW1iZWRzKTtcclxuXHQgICAgfTtcclxuXHQgICAgU2VydmljZS5wcm90b3R5cGUuYWRkT3JPdmVyd3JpdGVFbWJlZCA9IGZ1bmN0aW9uIChjb21wb25lbnQsIGVsZW1lbnQpIHtcclxuXHQgICAgICAgIC8vIHJlbW92ZSBlbWJlZHMgb3ZlciB0aGUgc2FtZSBkaXYgZWxlbWVudC5cclxuXHQgICAgICAgIHRoaXMuZW1iZWRzID0gdGhpcy5lbWJlZHMuZmlsdGVyKGZ1bmN0aW9uIChlbWJlZCkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiBlbWJlZC5lbGVtZW50LmlkICE9PSBlbGVtZW50LmlkO1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgICAgICB0aGlzLmVtYmVkcy5wdXNoKGNvbXBvbmVudCk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBHaXZlbiBhbiBIVE1MIGVsZW1lbnQgdGhhdCBoYXMgYSBjb21wb25lbnQgZW1iZWRkZWQgd2l0aGluIGl0LCByZW1vdmVzIHRoZSBjb21wb25lbnQgZnJvbSB0aGUgbGlzdCBvZiBlbWJlZGRlZCBjb21wb25lbnRzLCByZW1vdmVzIHRoZSBhc3NvY2lhdGlvbiBiZXR3ZWVuIHRoZSBlbGVtZW50IGFuZCB0aGUgY29tcG9uZW50LCBhbmQgcmVtb3ZlcyB0aGUgaWZyYW1lLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XHJcblx0ICAgICAqIEByZXR1cm5zIHt2b2lkfVxyXG5cdCAgICAgKi9cclxuXHQgICAgU2VydmljZS5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG5cdCAgICAgICAgdmFyIHBvd2VyQmlFbGVtZW50ID0gZWxlbWVudDtcclxuXHQgICAgICAgIGlmICghcG93ZXJCaUVsZW1lbnQucG93ZXJCaUVtYmVkKSB7XHJcblx0ICAgICAgICAgICAgcmV0dXJuO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgLyoqIFJlbW92ZXMgdGhlIGVsZW1lbnQgZnJvbnRMb2FkIGxpc3RlbmVyIGlmIGV4aXN0cy4gKi9cclxuXHQgICAgICAgIHZhciBlbWJlZEVsZW1lbnQgPSBwb3dlckJpRWxlbWVudC5wb3dlckJpRW1iZWQ7XHJcblx0ICAgICAgICBpZiAoZW1iZWRFbGVtZW50LmZyb250TG9hZEhhbmRsZXIpIHtcclxuXHQgICAgICAgICAgICBlbWJlZEVsZW1lbnQuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdyZWFkeScsIGVtYmVkRWxlbWVudC5mcm9udExvYWRIYW5kbGVyLCBmYWxzZSk7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICAvKiogUmVtb3ZlcyB0aGUgY29tcG9uZW50IGZyb20gYW4gaW50ZXJuYWwgbGlzdCBvZiBjb21wb25lbnRzLiAqL1xyXG5cdCAgICAgICAgdXRpbHMucmVtb3ZlKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4ID09PSBwb3dlckJpRWxlbWVudC5wb3dlckJpRW1iZWQ7IH0sIHRoaXMuZW1iZWRzKTtcclxuXHQgICAgICAgIC8qKiBEZWxldGVzIGEgcHJvcGVydHkgZnJvbSB0aGUgSFRNTCBlbGVtZW50LiAqL1xyXG5cdCAgICAgICAgZGVsZXRlIHBvd2VyQmlFbGVtZW50LnBvd2VyQmlFbWJlZDtcclxuXHQgICAgICAgIC8qKiBSZW1vdmVzIHRoZSBpZnJhbWUgZnJvbSB0aGUgZWxlbWVudC4gKi9cclxuXHQgICAgICAgIHZhciBpZnJhbWUgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lmcmFtZScpO1xyXG5cdCAgICAgICAgaWYgKGlmcmFtZSkge1xyXG5cdCAgICAgICAgICAgIGlmIChpZnJhbWUucmVtb3ZlICE9PSB1bmRlZmluZWQpIHtcclxuXHQgICAgICAgICAgICAgICAgaWZyYW1lLnJlbW92ZSgpO1xyXG5cdCAgICAgICAgICAgIH1cclxuXHQgICAgICAgICAgICBlbHNlIHtcclxuXHQgICAgICAgICAgICAgICAgLyoqIFdvcmthcm91bmQgZm9yIElFOiB1bmhhbmRsZWQgcmVqZWN0aW9uIFR5cGVFcnJvcjogb2JqZWN0IGRvZXNuJ3Qgc3VwcG9ydCBwcm9wZXJ0IG9yIG1ldGhvZCAncmVtb3ZlJyAqL1xyXG5cdCAgICAgICAgICAgICAgICBpZnJhbWUucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChpZnJhbWUpO1xyXG5cdCAgICAgICAgICAgIH1cclxuXHQgICAgICAgIH1cclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIGhhbmRsZXMgdGlsZSBldmVudHNcclxuXHQgICAgICpcclxuXHQgICAgICogQHBhcmFtIHtJRXZlbnQ8YW55Pn0gZXZlbnRcclxuXHQgICAgICovXHJcblx0ICAgIFNlcnZpY2UucHJvdG90eXBlLmhhbmRsZVRpbGVFdmVudHMgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuXHQgICAgICAgIGlmIChldmVudC50eXBlID09PSAndGlsZScpIHtcclxuXHQgICAgICAgICAgICB0aGlzLmhhbmRsZUV2ZW50KGV2ZW50KTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEdpdmVuIGFuIGV2ZW50IG9iamVjdCwgZmluZHMgdGhlIGVtYmVkIGNvbXBvbmVudCB3aXRoIHRoZSBtYXRjaGluZyB0eXBlIGFuZCBJRCwgYW5kIGludm9rZXMgaXRzIGhhbmRsZUV2ZW50IG1ldGhvZCB3aXRoIHRoZSBldmVudCBvYmplY3QuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwcml2YXRlXHJcblx0ICAgICAqIEBwYXJhbSB7SUV2ZW50PGFueT59IGV2ZW50XHJcblx0ICAgICAqL1xyXG5cdCAgICBTZXJ2aWNlLnByb3RvdHlwZS5oYW5kbGVFdmVudCA9IGZ1bmN0aW9uIChldmVudCkge1xyXG5cdCAgICAgICAgdmFyIGVtYmVkID0gdXRpbHMuZmluZChmdW5jdGlvbiAoZW1iZWQpIHtcclxuXHQgICAgICAgICAgICByZXR1cm4gKGVtYmVkLmNvbmZpZy51bmlxdWVJZCA9PT0gZXZlbnQuaWQpO1xyXG5cdCAgICAgICAgfSwgdGhpcy5lbWJlZHMpO1xyXG5cdCAgICAgICAgaWYgKGVtYmVkKSB7XHJcblx0ICAgICAgICAgICAgdmFyIHZhbHVlID0gZXZlbnQudmFsdWU7XHJcblx0ICAgICAgICAgICAgaWYgKGV2ZW50Lm5hbWUgPT09ICdwYWdlQ2hhbmdlZCcpIHtcclxuXHQgICAgICAgICAgICAgICAgdmFyIHBhZ2VLZXkgPSAnbmV3UGFnZSc7XHJcblx0ICAgICAgICAgICAgICAgIHZhciBwYWdlID0gdmFsdWVbcGFnZUtleV07XHJcblx0ICAgICAgICAgICAgICAgIGlmICghcGFnZSkge1xyXG5cdCAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGFnZSBtb2RlbCBub3QgZm91bmQgYXQgJ2V2ZW50LnZhbHVlLlwiICsgcGFnZUtleSArIFwiJy5cIik7XHJcblx0ICAgICAgICAgICAgICAgIH1cclxuXHQgICAgICAgICAgICAgICAgdmFsdWVbcGFnZUtleV0gPSBuZXcgcGFnZV8xLlBhZ2UoZW1iZWQsIHBhZ2UubmFtZSwgcGFnZS5kaXNwbGF5TmFtZSwgdHJ1ZSAvKiBpc0FjdGl2ZSAqLyk7XHJcblx0ICAgICAgICAgICAgfVxyXG5cdCAgICAgICAgICAgIHV0aWxzLnJhaXNlQ3VzdG9tRXZlbnQoZW1iZWQuZWxlbWVudCwgZXZlbnQubmFtZSwgdmFsdWUpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogQVBJIGZvciB3YXJtIHN0YXJ0aW5nIHBvd2VyYmkgZW1iZWRkZWQgZW5kcG9pbnRzLlxyXG5cdCAgICAgKiBVc2UgdGhpcyBBUEkgdG8gcHJlbG9hZCBQb3dlciBCSSBFbWJlZGRlZCBpbiB0aGUgYmFja2dyb3VuZC5cclxuXHQgICAgICpcclxuXHQgICAgICogQHB1YmxpY1xyXG5cdCAgICAgKiBAcGFyYW0ge2VtYmVkLklFbWJlZENvbmZpZ3VyYXRpb25CYXNlfSBbY29uZmlnPXt9XVxyXG5cdCAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBbZWxlbWVudD11bmRlZmluZWRdXHJcblx0ICAgICAqL1xyXG5cdCAgICBTZXJ2aWNlLnByb3RvdHlwZS5wcmVsb2FkID0gZnVuY3Rpb24gKGNvbmZpZywgZWxlbWVudCkge1xyXG5cdCAgICAgICAgdmFyIGlmcmFtZUNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO1xyXG5cdCAgICAgICAgaWZyYW1lQ29udGVudC5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBcImRpc3BsYXk6bm9uZTtcIik7XHJcblx0ICAgICAgICBpZnJhbWVDb250ZW50LnNldEF0dHJpYnV0ZShcInNyY1wiLCBjb25maWcuZW1iZWRVcmwpO1xyXG5cdCAgICAgICAgaWZyYW1lQ29udGVudC5zZXRBdHRyaWJ1dGUoXCJzY3JvbGxpbmdcIiwgXCJub1wiKTtcclxuXHQgICAgICAgIGlmcmFtZUNvbnRlbnQuc2V0QXR0cmlidXRlKFwiYWxsb3dmdWxsc2NyZWVuXCIsIFwiZmFsc2VcIik7XHJcblx0ICAgICAgICB2YXIgbm9kZSA9IGVsZW1lbnQ7XHJcblx0ICAgICAgICBpZiAoIW5vZGUpIHtcclxuXHQgICAgICAgICAgICBub2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJib2R5XCIpWzBdO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgbm9kZS5hcHBlbmRDaGlsZChpZnJhbWVDb250ZW50KTtcclxuXHQgICAgICAgIGlmcmFtZUNvbnRlbnQub25sb2FkID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgICAgIHV0aWxzLnJhaXNlQ3VzdG9tRXZlbnQoaWZyYW1lQ29udGVudCwgXCJwcmVsb2FkZWRcIiwge30pO1xyXG5cdCAgICAgICAgfTtcclxuXHQgICAgICAgIHJldHVybiBpZnJhbWVDb250ZW50O1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogQSBsaXN0IG9mIGNvbXBvbmVudHMgdGhhdCB0aGlzIHNlcnZpY2UgY2FuIGVtYmVkXHJcblx0ICAgICAqL1xyXG5cdCAgICBTZXJ2aWNlLmNvbXBvbmVudHMgPSBbXHJcblx0ICAgICAgICB0aWxlXzEuVGlsZSxcclxuXHQgICAgICAgIHJlcG9ydF8xLlJlcG9ydCxcclxuXHQgICAgICAgIGRhc2hib2FyZF8xLkRhc2hib2FyZCxcclxuXHQgICAgICAgIHFuYV8xLlFuYSxcclxuXHQgICAgICAgIHZpc3VhbF8xLlZpc3VhbFxyXG5cdCAgICBdO1xyXG5cdCAgICAvKipcclxuXHQgICAgICogVGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbiBmb3IgdGhlIHNlcnZpY2VcclxuXHQgICAgICovXHJcblx0ICAgIFNlcnZpY2UuZGVmYXVsdENvbmZpZyA9IHtcclxuXHQgICAgICAgIGF1dG9FbWJlZE9uQ29udGVudExvYWRlZDogZmFsc2UsXHJcblx0ICAgICAgICBvbkVycm9yOiBmdW5jdGlvbiAoKSB7XHJcblx0ICAgICAgICAgICAgdmFyIGFyZ3MgPSBbXTtcclxuXHQgICAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG5cdCAgICAgICAgICAgICAgICBhcmdzW19pIC0gMF0gPSBhcmd1bWVudHNbX2ldO1xyXG5cdCAgICAgICAgICAgIH1cclxuXHQgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coYXJnc1swXSwgYXJncy5zbGljZSgxKSk7XHJcblx0ICAgICAgICB9XHJcblx0ICAgIH07XHJcblx0ICAgIFNlcnZpY2UuRGVmYXVsdEluaXRFbWJlZFVybCA9IFwiaHR0cDovL2FwcC5wb3dlcmJpLmNvbS9yZXBvcnRFbWJlZFwiO1xyXG5cdCAgICByZXR1cm4gU2VydmljZTtcclxuXHR9KCkpO1xyXG5cdGV4cG9ydHMuU2VydmljZSA9IFNlcnZpY2U7XHJcblxuXG4vKioqLyB9KSxcbi8qIDIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHR2YXIgdXRpbHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xyXG5cdHZhciBtb2RlbHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xyXG5cdC8qKlxyXG5cdCAqIEJhc2UgY2xhc3MgZm9yIGFsbCBQb3dlciBCSSBlbWJlZCBjb21wb25lbnRzXHJcblx0ICpcclxuXHQgKiBAZXhwb3J0XHJcblx0ICogQGFic3RyYWN0XHJcblx0ICogQGNsYXNzIEVtYmVkXHJcblx0ICovXHJcblx0dmFyIEVtYmVkID0gKGZ1bmN0aW9uICgpIHtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgRW1iZWQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIE5vdGU6IHRoZXJlIGlzIGNpcmN1bGFyIHJlZmVyZW5jZSBiZXR3ZWVuIGVtYmVkcyBhbmQgdGhlIHNlcnZpY2UsIGJlY2F1c2VcclxuXHQgICAgICogdGhlIHNlcnZpY2UgaGFzIGEgbGlzdCBvZiBhbGwgZW1iZWRzIG9uIHRoZSBob3N0IHBhZ2UsIGFuZCBlYWNoIGVtYmVkIGhhcyBhIHJlZmVyZW5jZSB0byB0aGUgc2VydmljZSB0aGF0IGNyZWF0ZWQgaXQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwYXJhbSB7c2VydmljZS5TZXJ2aWNlfSBzZXJ2aWNlXHJcblx0ICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcclxuXHQgICAgICogQHBhcmFtIHtJRW1iZWRDb25maWd1cmF0aW9uQmFzZX0gY29uZmlnXHJcblx0ICAgICAqL1xyXG5cdCAgICBmdW5jdGlvbiBFbWJlZChzZXJ2aWNlLCBlbGVtZW50LCBjb25maWcsIGlmcmFtZSwgcGhhc2VkUmVuZGVyKSB7XHJcblx0ICAgICAgICB0aGlzLmFsbG93ZWRFdmVudHMgPSBbXTtcclxuXHQgICAgICAgIEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMuYWxsb3dlZEV2ZW50cywgRW1iZWQuYWxsb3dlZEV2ZW50cyk7XHJcblx0ICAgICAgICB0aGlzLmV2ZW50SGFuZGxlcnMgPSBbXTtcclxuXHQgICAgICAgIHRoaXMuc2VydmljZSA9IHNlcnZpY2U7XHJcblx0ICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xyXG5cdCAgICAgICAgdGhpcy5pZnJhbWUgPSBpZnJhbWU7XHJcblx0ICAgICAgICB0aGlzLmVtYmVUeXBlID0gY29uZmlnLnR5cGUudG9Mb3dlckNhc2UoKTtcclxuXHQgICAgICAgIHRoaXMucG9wdWxhdGVDb25maWcoY29uZmlnKTtcclxuXHQgICAgICAgIGlmICh0aGlzLmVtYmVUeXBlID09PSAnY3JlYXRlJykge1xyXG5cdCAgICAgICAgICAgIHRoaXMuc2V0SWZyYW1lKGZhbHNlIC8qc2V0IEV2ZW50TGlzdGVuZXIgdG8gY2FsbCBjcmVhdGUoKSBvbiAnbG9hZCcgZXZlbnQqLyk7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICBlbHNlIHtcclxuXHQgICAgICAgICAgICB0aGlzLnNldElmcmFtZSh0cnVlIC8qc2V0IEV2ZW50TGlzdGVuZXIgdG8gY2FsbCBsb2FkKCkgb24gJ2xvYWQnIGV2ZW50Ki8sIHBoYXNlZFJlbmRlcik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgIH1cclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFNlbmRzIGNyZWF0ZVJlcG9ydCBjb25maWd1cmF0aW9uIGRhdGEuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogY3JlYXRlUmVwb3J0KHtcclxuXHQgICAgICogICBkYXRhc2V0SWQ6ICc1ZGFjN2E0YS00NDUyLTQ2YjMtOTlmNi1hMjU5MTVlMGZlNTUnLFxyXG5cdCAgICAgKiAgIGFjY2Vzc1Rva2VuOiAnZXlKMGVYQSAuLi4gVGFFMnJUU2JtZycsXHJcblx0ICAgICAqIGBgYFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0ge21vZGVscy5JUmVwb3J0Q3JlYXRlQ29uZmlndXJhdGlvbn0gY29uZmlnXHJcblx0ICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLmNyZWF0ZVJlcG9ydCA9IGZ1bmN0aW9uIChjb25maWcpIHtcclxuXHQgICAgICAgIHZhciBlcnJvcnMgPSBtb2RlbHMudmFsaWRhdGVDcmVhdGVSZXBvcnQoY29uZmlnKTtcclxuXHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyBlcnJvcnM7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmhwbS5wb3N0KFwiL3JlcG9ydC9jcmVhdGVcIiwgY29uZmlnLCB7IHVpZDogdGhpcy5jb25maWcudW5pcXVlSWQsIHNka1Nlc3Npb25JZDogdGhpcy5zZXJ2aWNlLmdldFNka1Nlc3Npb25JZCgpIH0sIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpXHJcblx0ICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9LCBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBTYXZlcyBSZXBvcnQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLnNhdmUgPSBmdW5jdGlvbiAoKSB7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmhwbS5wb3N0KCcvcmVwb3J0L3NhdmUnLCBudWxsLCB7IHVpZDogdGhpcy5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pXHJcblx0ICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFNhdmVBcyBSZXBvcnQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLnNhdmVBcyA9IGZ1bmN0aW9uIChzYXZlQXNQYXJhbWV0ZXJzKSB7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmhwbS5wb3N0KCcvcmVwb3J0L3NhdmVBcycsIHNhdmVBc1BhcmFtZXRlcnMsIHsgdWlkOiB0aGlzLmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSlcclxuXHQgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogU2VuZHMgbG9hZCBjb25maWd1cmF0aW9uIGRhdGEuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogcmVwb3J0LmxvYWQoe1xyXG5cdCAgICAgKiAgIHR5cGU6ICdyZXBvcnQnLFxyXG5cdCAgICAgKiAgIGlkOiAnNWRhYzdhNGEtNDQ1Mi00NmIzLTk5ZjYtYTI1OTE1ZTBmZTU1JyxcclxuXHQgICAgICogICBhY2Nlc3NUb2tlbjogJ2V5SjBlWEEgLi4uIFRhRTJyVFNibWcnLFxyXG5cdCAgICAgKiAgIHNldHRpbmdzOiB7XHJcblx0ICAgICAqICAgICBuYXZDb250ZW50UGFuZUVuYWJsZWQ6IGZhbHNlXHJcblx0ICAgICAqICAgfSxcclxuXHQgICAgICogICBwYWdlTmFtZTogXCJEZWZhdWx0UGFnZVwiLFxyXG5cdCAgICAgKiAgIGZpbHRlcnM6IFtcclxuXHQgICAgICogICAgIHtcclxuXHQgICAgICogICAgICAgIC4uLiAgRGVmYXVsdFJlcG9ydEZpbHRlciAuLi5cclxuXHQgICAgICogICAgIH1cclxuXHQgICAgICogICBdXHJcblx0ICAgICAqIH0pXHJcblx0ICAgICAqICAgLmNhdGNoKGVycm9yID0+IHsgLi4uIH0pO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHBhcmFtIHttb2RlbHMuSUxvYWRDb25maWd1cmF0aW9ufSBjb25maWdcclxuXHQgICAgICogQHBhcmFtIHtib29sZWFufSBwaGFzZWRSZW5kZXJcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XHJcblx0ICAgICAqL1xyXG5cdCAgICBFbWJlZC5wcm90b3R5cGUubG9hZCA9IGZ1bmN0aW9uIChjb25maWcsIHBoYXNlZFJlbmRlcikge1xyXG5cdCAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuXHQgICAgICAgIHZhciBwYXRoID0gcGhhc2VkUmVuZGVyICYmIGNvbmZpZy50eXBlID09PSAncmVwb3J0JyA/IHRoaXMucGhhc2VkTG9hZFBhdGggOiB0aGlzLmxvYWRQYXRoO1xyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5ocG0ucG9zdChwYXRoLCBjb25maWcsIHsgdWlkOiB0aGlzLmNvbmZpZy51bmlxdWVJZCwgc2RrU2Vzc2lvbklkOiB0aGlzLnNlcnZpY2UuZ2V0U2RrU2Vzc2lvbklkKCkgfSwgdGhpcy5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICB1dGlscy5hc3NpZ24oX3RoaXMuY29uZmlnLCBjb25maWcpO1xyXG5cdCAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogUmVtb3ZlcyBvbmUgb3IgbW9yZSBldmVudCBoYW5kbGVycyBmcm9tIHRoZSBsaXN0IG9mIGhhbmRsZXJzLlxyXG5cdCAgICAgKiBJZiBhIHJlZmVyZW5jZSB0byB0aGUgZXhpc3RpbmcgaGFuZGxlIGZ1bmN0aW9uIGlzIHNwZWNpZmllZCwgcmVtb3ZlIHRoZSBzcGVjaWZpYyBoYW5kbGVyLlxyXG5cdCAgICAgKiBJZiB0aGUgaGFuZGxlciBpcyBub3Qgc3BlY2lmaWVkLCByZW1vdmUgYWxsIGhhbmRsZXJzIGZvciB0aGUgZXZlbnQgbmFtZSBzcGVjaWZpZWQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogcmVwb3J0Lm9mZigncGFnZUNoYW5nZWQnKVxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBvclxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBjb25zdCBsb2dIYW5kbGVyID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcblx0ICAgICAqICAgIGNvbnNvbGUubG9nKGV2ZW50KTtcclxuXHQgICAgICogfTtcclxuXHQgICAgICpcclxuXHQgICAgICogcmVwb3J0Lm9mZigncGFnZUNoYW5nZWQnLCBsb2dIYW5kbGVyKTtcclxuXHQgICAgICogYGBgXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEB0ZW1wbGF0ZSBUXHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudE5hbWVcclxuXHQgICAgICogQHBhcmFtIHtzZXJ2aWNlLklFdmVudEhhbmRsZXI8VD59IFtoYW5kbGVyXVxyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLm9mZiA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGhhbmRsZXIpIHtcclxuXHQgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcblx0ICAgICAgICB2YXIgZmFrZUV2ZW50ID0geyBuYW1lOiBldmVudE5hbWUsIHR5cGU6IG51bGwsIGlkOiBudWxsLCB2YWx1ZTogbnVsbCB9O1xyXG5cdCAgICAgICAgaWYgKGhhbmRsZXIpIHtcclxuXHQgICAgICAgICAgICB1dGlscy5yZW1vdmUoZnVuY3Rpb24gKGV2ZW50SGFuZGxlcikgeyByZXR1cm4gZXZlbnRIYW5kbGVyLnRlc3QoZmFrZUV2ZW50KSAmJiAoZXZlbnRIYW5kbGVyLmhhbmRsZSA9PT0gaGFuZGxlcik7IH0sIHRoaXMuZXZlbnRIYW5kbGVycyk7XHJcblx0ICAgICAgICAgICAgdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBoYW5kbGVyKTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIGVsc2Uge1xyXG5cdCAgICAgICAgICAgIHZhciBldmVudEhhbmRsZXJzVG9SZW1vdmUgPSB0aGlzLmV2ZW50SGFuZGxlcnNcclxuXHQgICAgICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoZXZlbnRIYW5kbGVyKSB7IHJldHVybiBldmVudEhhbmRsZXIudGVzdChmYWtlRXZlbnQpOyB9KTtcclxuXHQgICAgICAgICAgICBldmVudEhhbmRsZXJzVG9SZW1vdmVcclxuXHQgICAgICAgICAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50SGFuZGxlclRvUmVtb3ZlKSB7XHJcblx0ICAgICAgICAgICAgICAgIHV0aWxzLnJlbW92ZShmdW5jdGlvbiAoZXZlbnRIYW5kbGVyKSB7IHJldHVybiBldmVudEhhbmRsZXIgPT09IGV2ZW50SGFuZGxlclRvUmVtb3ZlOyB9LCBfdGhpcy5ldmVudEhhbmRsZXJzKTtcclxuXHQgICAgICAgICAgICAgICAgX3RoaXMuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgZXZlbnRIYW5kbGVyVG9SZW1vdmUuaGFuZGxlKTtcclxuXHQgICAgICAgICAgICB9KTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEFkZHMgYW4gZXZlbnQgaGFuZGxlciBmb3IgYSBzcGVjaWZpYyBldmVudC5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiByZXBvcnQub24oJ3BhZ2VDaGFuZ2VkJywgKGV2ZW50KSA9PiB7XHJcblx0ICAgICAqICAgY29uc29sZS5sb2coJ1BhZ2VDaGFuZ2VkOiAnLCBldmVudC5wYWdlLm5hbWUpO1xyXG5cdCAgICAgKiB9KTtcclxuXHQgICAgICogYGBgXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEB0ZW1wbGF0ZSBUXHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudE5hbWVcclxuXHQgICAgICogQHBhcmFtIHtzZXJ2aWNlLklFdmVudEhhbmRsZXI8VD59IGhhbmRsZXJcclxuXHQgICAgICovXHJcblx0ICAgIEVtYmVkLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGhhbmRsZXIpIHtcclxuXHQgICAgICAgIGlmICh0aGlzLmFsbG93ZWRFdmVudHMuaW5kZXhPZihldmVudE5hbWUpID09PSAtMSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImV2ZW50TmFtZSBpcyBtdXN0IGJlIG9uZSBvZiBcIiArIHRoaXMuYWxsb3dlZEV2ZW50cyArIFwiLiBZb3UgcGFzc2VkOiBcIiArIGV2ZW50TmFtZSk7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICB0aGlzLmV2ZW50SGFuZGxlcnMucHVzaCh7XHJcblx0ICAgICAgICAgICAgdGVzdDogZnVuY3Rpb24gKGV2ZW50KSB7IHJldHVybiBldmVudC5uYW1lID09PSBldmVudE5hbWU7IH0sXHJcblx0ICAgICAgICAgICAgaGFuZGxlOiBoYW5kbGVyXHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgaGFuZGxlcik7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBSZWxvYWRzIGVtYmVkIHVzaW5nIGV4aXN0aW5nIGNvbmZpZ3VyYXRpb24uXHJcblx0ICAgICAqIEUuZy4gRm9yIHJlcG9ydHMgdGhpcyBlZmZlY3RpdmVseSBjbGVhcnMgYWxsIGZpbHRlcnMgYW5kIG1ha2VzIHRoZSBmaXJzdCBwYWdlIGFjdGl2ZSB3aGljaCBzaW11bGF0ZXMgcmVzZXR0aW5nIGEgcmVwb3J0IGJhY2sgdG8gbG9hZGVkIHN0YXRlLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBgYGBqYXZhc2NyaXB0XHJcblx0ICAgICAqIHJlcG9ydC5yZWxvYWQoKTtcclxuXHQgICAgICogYGBgXHJcblx0ICAgICAqL1xyXG5cdCAgICBFbWJlZC5wcm90b3R5cGUucmVsb2FkID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMubG9hZCh0aGlzLmNvbmZpZyk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBTZXQgYWNjZXNzVG9rZW4uXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLnNldEFjY2Vzc1Rva2VuID0gZnVuY3Rpb24gKGFjY2Vzc1Rva2VuKSB7XHJcblx0ICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG5cdCAgICAgICAgdmFyIGVtYmVkVHlwZSA9IHRoaXMuY29uZmlnLnR5cGU7XHJcblx0ICAgICAgICBlbWJlZFR5cGUgPSAoZW1iZWRUeXBlID09PSAnY3JlYXRlJyB8fCBlbWJlZFR5cGUgPT09ICd2aXN1YWwnIHx8IGVtYmVkVHlwZSA9PT0gJ3FuYScpID8gJ3JlcG9ydCcgOiBlbWJlZFR5cGU7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmhwbS5wb3N0KCcvJyArIGVtYmVkVHlwZSArICcvdG9rZW4nLCBhY2Nlc3NUb2tlbiwgeyB1aWQ6IHRoaXMuY29uZmlnLnVuaXF1ZUlkIH0sIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpXHJcblx0ICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgX3RoaXMuY29uZmlnLmFjY2Vzc1Rva2VuID0gYWNjZXNzVG9rZW47XHJcblx0ICAgICAgICAgICAgX3RoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoRW1iZWQuYWNjZXNzVG9rZW5BdHRyaWJ1dGUsIGFjY2Vzc1Rva2VuKTtcclxuXHQgICAgICAgICAgICBfdGhpcy5zZXJ2aWNlLmFjY2Vzc1Rva2VuID0gYWNjZXNzVG9rZW47XHJcblx0ICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KVxyXG5cdCAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBHZXRzIGFuIGFjY2VzcyB0b2tlbiBmcm9tIHRoZSBmaXJzdCBhdmFpbGFibGUgbG9jYXRpb246IGNvbmZpZywgYXR0cmlidXRlLCBnbG9iYWwuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwcml2YXRlXHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSBnbG9iYWxBY2Nlc3NUb2tlblxyXG5cdCAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLmdldEFjY2Vzc1Rva2VuID0gZnVuY3Rpb24gKGdsb2JhbEFjY2Vzc1Rva2VuKSB7XHJcblx0ICAgICAgICB2YXIgYWNjZXNzVG9rZW4gPSB0aGlzLmNvbmZpZy5hY2Nlc3NUb2tlbiB8fCB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKEVtYmVkLmFjY2Vzc1Rva2VuQXR0cmlidXRlKSB8fCBnbG9iYWxBY2Nlc3NUb2tlbjtcclxuXHQgICAgICAgIGlmICghYWNjZXNzVG9rZW4pIHtcclxuXHQgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBhY2Nlc3MgdG9rZW4gd2FzIGZvdW5kIGZvciBlbGVtZW50LiBZb3UgbXVzdCBzcGVjaWZ5IGFuIGFjY2VzcyB0b2tlbiBkaXJlY3RseSBvbiB0aGUgZWxlbWVudCB1c2luZyBhdHRyaWJ1dGUgJ1wiICsgRW1iZWQuYWNjZXNzVG9rZW5BdHRyaWJ1dGUgKyBcIicgb3Igc3BlY2lmeSBhIGdsb2JhbCB0b2tlbiBhdDogcG93ZXJiaS5hY2Nlc3NUb2tlbi5cIik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gYWNjZXNzVG9rZW47XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBQb3B1bGF0ZSBjb25maWcgZm9yIGNyZWF0ZSBhbmQgbG9hZFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0ge0lFbWJlZENvbmZpZ3VyYXRpb259XHJcblx0ICAgICAqIEByZXR1cm5zIHt2b2lkfVxyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLnBvcHVsYXRlQ29uZmlnID0gZnVuY3Rpb24gKGNvbmZpZykge1xyXG5cdCAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XHJcblx0ICAgICAgICAvLyBUT0RPOiBDaGFuZ2Ugd2hlbiBPYmplY3QuYXNzaWduIGlzIGF2YWlsYWJsZS5cclxuXHQgICAgICAgIHRoaXMuY29uZmlnLnVuaXF1ZUlkID0gdGhpcy5nZXRVbmlxdWVJZCgpO1xyXG5cdCAgICAgICAgdGhpcy5jb25maWcuZW1iZWRVcmwgPSB0aGlzLmdldEVtYmVkVXJsKCk7XHJcblx0ICAgICAgICB0aGlzLmNvbmZpZy5hY2Nlc3NUb2tlbiA9IHRoaXMuZ2V0QWNjZXNzVG9rZW4odGhpcy5zZXJ2aWNlLmFjY2Vzc1Rva2VuKTtcclxuXHQgICAgICAgIHRoaXMuY29uZmlnLmdyb3VwSWQgPSB0aGlzLmdldEdyb3VwSWQoKTtcclxuXHQgICAgICAgIHRoaXMuYWRkTG9jYWxlVG9FbWJlZFVybChjb25maWcpO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogQWRkcyBsb2NhbGUgcGFyYW1ldGVycyB0byBlbWJlZFVybFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcHJpdmF0ZVxyXG5cdCAgICAgKiBAcGFyYW0ge0lFbWJlZENvbmZpZ3VyYXRpb259IGNvbmZpZ1xyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLmFkZExvY2FsZVRvRW1iZWRVcmwgPSBmdW5jdGlvbiAoY29uZmlnKSB7XHJcblx0ICAgICAgICBpZiAoIWNvbmZpZy5zZXR0aW5ncykge1xyXG5cdCAgICAgICAgICAgIHJldHVybjtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHZhciBsb2NhbGVTZXR0aW5ncyA9IGNvbmZpZy5zZXR0aW5ncy5sb2NhbGVTZXR0aW5ncztcclxuXHQgICAgICAgIGlmIChsb2NhbGVTZXR0aW5ncyAmJiBsb2NhbGVTZXR0aW5ncy5sYW5ndWFnZSkge1xyXG5cdCAgICAgICAgICAgIHRoaXMuY29uZmlnLmVtYmVkVXJsID0gdXRpbHMuYWRkUGFyYW1Ub1VybCh0aGlzLmNvbmZpZy5lbWJlZFVybCwgJ2xhbmd1YWdlJywgbG9jYWxlU2V0dGluZ3MubGFuZ3VhZ2UpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgaWYgKGxvY2FsZVNldHRpbmdzICYmIGxvY2FsZVNldHRpbmdzLmZvcm1hdExvY2FsZSkge1xyXG5cdCAgICAgICAgICAgIHRoaXMuY29uZmlnLmVtYmVkVXJsID0gdXRpbHMuYWRkUGFyYW1Ub1VybCh0aGlzLmNvbmZpZy5lbWJlZFVybCwgJ2Zvcm1hdExvY2FsZScsIGxvY2FsZVNldHRpbmdzLmZvcm1hdExvY2FsZSk7XHJcblx0ICAgICAgICB9XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBHZXRzIGFuIGVtYmVkIHVybCBmcm9tIHRoZSBmaXJzdCBhdmFpbGFibGUgbG9jYXRpb246IG9wdGlvbnMsIGF0dHJpYnV0ZS5cclxuXHQgICAgICpcclxuXHQgICAgICogQHByaXZhdGVcclxuXHQgICAgICogQHJldHVybnMge3N0cmluZ31cclxuXHQgICAgICovXHJcblx0ICAgIEVtYmVkLnByb3RvdHlwZS5nZXRFbWJlZFVybCA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIHZhciBlbWJlZFVybCA9IHRoaXMuY29uZmlnLmVtYmVkVXJsIHx8IHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoRW1iZWQuZW1iZWRVcmxBdHRyaWJ1dGUpO1xyXG5cdCAgICAgICAgaWYgKHR5cGVvZiBlbWJlZFVybCAhPT0gJ3N0cmluZycgfHwgZW1iZWRVcmwubGVuZ3RoID09PSAwKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRW1iZWQgVXJsIGlzIHJlcXVpcmVkLCBidXQgaXQgd2FzIG5vdCBmb3VuZC4gWW91IG11c3QgcHJvdmlkZSBhbiBlbWJlZCB1cmwgZWl0aGVyIGFzIHBhcnQgb2YgZW1iZWQgY29uZmlndXJhdGlvbiBvciBhcyBhdHRyaWJ1dGUgJ1wiICsgRW1iZWQuZW1iZWRVcmxBdHRyaWJ1dGUgKyBcIicuXCIpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIGVtYmVkVXJsO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogR2V0cyBhIHVuaXF1ZSBJRCBmcm9tIHRoZSBmaXJzdCBhdmFpbGFibGUgbG9jYXRpb246IG9wdGlvbnMsIGF0dHJpYnV0ZS5cclxuXHQgICAgICogSWYgbmVpdGhlciBpcyBwcm92aWRlZCBnZW5lcmF0ZSBhIHVuaXF1ZSBzdHJpbmcuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwcml2YXRlXHJcblx0ICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcblx0ICAgICAqL1xyXG5cdCAgICBFbWJlZC5wcm90b3R5cGUuZ2V0VW5pcXVlSWQgPSBmdW5jdGlvbiAoKSB7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5jb25maWcudW5pcXVlSWQgfHwgdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZShFbWJlZC5uYW1lQXR0cmlidXRlKSB8fCB1dGlscy5jcmVhdGVSYW5kb21TdHJpbmcoKTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEdldHMgdGhlIGdyb3VwIElEIGZyb20gdGhlIGZpcnN0IGF2YWlsYWJsZSBsb2NhdGlvbjogb3B0aW9ucywgZW1iZWRkZWRVcmwuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwcml2YXRlXHJcblx0ICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcblx0ICAgICAqL1xyXG5cdCAgICBFbWJlZC5wcm90b3R5cGUuZ2V0R3JvdXBJZCA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLmNvbmZpZy5ncm91cElkIHx8IEVtYmVkLmZpbmRHcm91cElkRnJvbUVtYmVkVXJsKHRoaXMuY29uZmlnLmVtYmVkVXJsKTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFJlcXVlc3RzIHRoZSBicm93c2VyIHRvIHJlbmRlciB0aGUgY29tcG9uZW50J3MgaWZyYW1lIGluIGZ1bGxzY3JlZW4gbW9kZS5cclxuXHQgICAgICovXHJcblx0ICAgIEVtYmVkLnByb3RvdHlwZS5mdWxsc2NyZWVuID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgdmFyIHJlcXVlc3RGdWxsU2NyZWVuID0gdGhpcy5pZnJhbWUucmVxdWVzdEZ1bGxzY3JlZW4gfHwgdGhpcy5pZnJhbWUubXNSZXF1ZXN0RnVsbHNjcmVlbiB8fCB0aGlzLmlmcmFtZS5tb3pSZXF1ZXN0RnVsbFNjcmVlbiB8fCB0aGlzLmlmcmFtZS53ZWJraXRSZXF1ZXN0RnVsbHNjcmVlbjtcclxuXHQgICAgICAgIHJlcXVlc3RGdWxsU2NyZWVuLmNhbGwodGhpcy5pZnJhbWUpO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogUmVxdWVzdHMgdGhlIGJyb3dzZXIgdG8gZXhpdCBmdWxsc2NyZWVuIG1vZGUuXHJcblx0ICAgICAqL1xyXG5cdCAgICBFbWJlZC5wcm90b3R5cGUuZXhpdEZ1bGxzY3JlZW4gPSBmdW5jdGlvbiAoKSB7XHJcblx0ICAgICAgICBpZiAoIXRoaXMuaXNGdWxsc2NyZWVuKHRoaXMuaWZyYW1lKSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybjtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHZhciBleGl0RnVsbHNjcmVlbiA9IGRvY3VtZW50LmV4aXRGdWxsc2NyZWVuIHx8IGRvY3VtZW50Lm1vekNhbmNlbEZ1bGxTY3JlZW4gfHwgZG9jdW1lbnQud2Via2l0RXhpdEZ1bGxzY3JlZW4gfHwgZG9jdW1lbnQubXNFeGl0RnVsbHNjcmVlbjtcclxuXHQgICAgICAgIGV4aXRGdWxsc2NyZWVuLmNhbGwoZG9jdW1lbnQpO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBpZnJhbWUgaXMgcmVuZGVyZWQgaW4gZnVsbHNjcmVlbiBtb2RlLFxyXG5cdCAgICAgKiBvdGhlcndpc2UgcmV0dXJucyBmYWxzZS5cclxuXHQgICAgICpcclxuXHQgICAgICogQHByaXZhdGVcclxuXHQgICAgICogQHBhcmFtIHtIVE1MSUZyYW1lRWxlbWVudH0gaWZyYW1lXHJcblx0ICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLmlzRnVsbHNjcmVlbiA9IGZ1bmN0aW9uIChpZnJhbWUpIHtcclxuXHQgICAgICAgIHZhciBvcHRpb25zID0gWydmdWxsc2NyZWVuRWxlbWVudCcsICd3ZWJraXRGdWxsc2NyZWVuRWxlbWVudCcsICdtb3pGdWxsc2NyZWVuU2NyZWVuRWxlbWVudCcsICdtc0Z1bGxzY3JlZW5FbGVtZW50J107XHJcblx0ICAgICAgICByZXR1cm4gb3B0aW9ucy5zb21lKGZ1bmN0aW9uIChvcHRpb24pIHsgcmV0dXJuIGRvY3VtZW50W29wdGlvbl0gPT09IGlmcmFtZTsgfSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBTZXRzIElmcmFtZSBmb3IgZW1iZWRcclxuXHQgICAgICovXHJcblx0ICAgIEVtYmVkLnByb3RvdHlwZS5zZXRJZnJhbWUgPSBmdW5jdGlvbiAoaXNMb2FkLCBwaGFzZWRSZW5kZXIpIHtcclxuXHQgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcblx0ICAgICAgICBpZiAoIXRoaXMuaWZyYW1lKSB7XHJcblx0ICAgICAgICAgICAgdmFyIGlmcmFtZUNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO1xyXG5cdCAgICAgICAgICAgIHZhciBlbWJlZFVybCA9IHRoaXMuY29uZmlnLnVuaXF1ZUlkID8gdXRpbHMuYWRkUGFyYW1Ub1VybCh0aGlzLmNvbmZpZy5lbWJlZFVybCwgJ3VpZCcsIHRoaXMuY29uZmlnLnVuaXF1ZUlkKSA6IHRoaXMuY29uZmlnLmVtYmVkVXJsO1xyXG5cdCAgICAgICAgICAgIGlmcmFtZUNvbnRlbnQuc3R5bGUud2lkdGggPSAnMTAwJSc7XHJcblx0ICAgICAgICAgICAgaWZyYW1lQ29udGVudC5zdHlsZS5oZWlnaHQgPSAnMTAwJSc7XHJcblx0ICAgICAgICAgICAgaWZyYW1lQ29udGVudC5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgZW1iZWRVcmwpO1xyXG5cdCAgICAgICAgICAgIGlmcmFtZUNvbnRlbnQuc2V0QXR0cmlidXRlKFwic2Nyb2xsaW5nXCIsIFwibm9cIik7XHJcblx0ICAgICAgICAgICAgaWZyYW1lQ29udGVudC5zZXRBdHRyaWJ1dGUoXCJhbGxvd2Z1bGxzY3JlZW5cIiwgXCJ0cnVlXCIpO1xyXG5cdCAgICAgICAgICAgIHZhciBub2RlID0gdGhpcy5lbGVtZW50O1xyXG5cdCAgICAgICAgICAgIHdoaWxlIChub2RlLmZpcnN0Q2hpbGQpIHtcclxuXHQgICAgICAgICAgICAgICAgbm9kZS5yZW1vdmVDaGlsZChub2RlLmZpcnN0Q2hpbGQpO1xyXG5cdCAgICAgICAgICAgIH1cclxuXHQgICAgICAgICAgICBub2RlLmFwcGVuZENoaWxkKGlmcmFtZUNvbnRlbnQpO1xyXG5cdCAgICAgICAgICAgIHRoaXMuaWZyYW1lID0gbm9kZS5maXJzdENoaWxkO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgaWYgKGlzTG9hZCkge1xyXG5cdCAgICAgICAgICAgIHZhciBlcnJvcnMgPSB0aGlzLnZhbGlkYXRlKHRoaXMuY29uZmlnKTtcclxuXHQgICAgICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0ICAgICAgICAgICAgICAgIHRocm93IGVycm9ycztcclxuXHQgICAgICAgICAgICB9XHJcblx0ICAgICAgICAgICAgdGhpcy5pZnJhbWUuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLmxvYWQoX3RoaXMuY29uZmlnLCBwaGFzZWRSZW5kZXIpOyB9LCBmYWxzZSk7XHJcblx0ICAgICAgICAgICAgaWYgKHRoaXMuc2VydmljZS5nZXROdW1iZXJPZkNvbXBvbmVudHMoKSA8PSBFbWJlZC5tYXhGcm9udExvYWRUaW1lcykge1xyXG5cdCAgICAgICAgICAgICAgICB0aGlzLmZyb250TG9hZEhhbmRsZXIgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5mcm9udExvYWRTZW5kQ29uZmlnKF90aGlzLmNvbmZpZyk7IH07XHJcblx0ICAgICAgICAgICAgICAgIC8vICdyZWFkeScgZXZlbnQgaXMgZmlyZWQgYnkgdGhlIGVtYmVkZGVkIGVsZW1lbnQgKG5vdCBieSB0aGUgaWZyYW1lKVxyXG5cdCAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncmVhZHknLCB0aGlzLmZyb250TG9hZEhhbmRsZXIsIGZhbHNlKTtcclxuXHQgICAgICAgICAgICB9XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICBlbHNlIHtcclxuXHQgICAgICAgICAgICB0aGlzLmlmcmFtZS5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuY3JlYXRlUmVwb3J0KF90aGlzLmNyZWF0ZUNvbmZpZyk7IH0sIGZhbHNlKTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFNldHMgSWZyYW1lJ3MgdGl0bGVcclxuXHQgICAgICovXHJcblx0ICAgIEVtYmVkLnByb3RvdHlwZS5zZXRDb21wb25lbnRUaXRsZSA9IGZ1bmN0aW9uICh0aXRsZSkge1xyXG5cdCAgICAgICAgaWYgKCF0aGlzLmlmcmFtZSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybjtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIGlmICh0aXRsZSA9PSBudWxsKSB7XHJcblx0ICAgICAgICAgICAgdGhpcy5pZnJhbWUucmVtb3ZlQXR0cmlidXRlKFwidGl0bGVcIik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICBlbHNlIHtcclxuXHQgICAgICAgICAgICB0aGlzLmlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJ0aXRsZVwiLCB0aXRsZSk7XHJcblx0ICAgICAgICB9XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBTZXRzIGVsZW1lbnQncyB0YWJpbmRleCBhdHRyaWJ1dGVcclxuXHQgICAgICovXHJcblx0ICAgIEVtYmVkLnByb3RvdHlwZS5zZXRDb21wb25lbnRUYWJJbmRleCA9IGZ1bmN0aW9uICh0YWJJbmRleCkge1xyXG5cdCAgICAgICAgaWYgKCF0aGlzLmVsZW1lbnQpIHtcclxuXHQgICAgICAgICAgICByZXR1cm47XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKFwidGFiaW5kZXhcIiwgKHRhYkluZGV4ID09IG51bGwpID8gXCIwXCIgOiB0YWJJbmRleC50b1N0cmluZygpKTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFJlbW92ZXMgZWxlbWVudCdzIHRhYmluZGV4IGF0dHJpYnV0ZVxyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLnJlbW92ZUNvbXBvbmVudFRhYkluZGV4ID0gZnVuY3Rpb24gKHRhYkluZGV4KSB7XHJcblx0ICAgICAgICBpZiAoIXRoaXMuZWxlbWVudCkge1xyXG5cdCAgICAgICAgICAgIHJldHVybjtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHRoaXMuZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJ0YWJpbmRleFwiKTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEFkZHMgdGhlIGFiaWxpdHkgdG8gZ2V0IGdyb3VwSWQgZnJvbSB1cmwuXHJcblx0ICAgICAqIEJ5IGV4dHJhY3RpbmcgdGhlIElEIHdlIGNhbiBlbnN1cmUgdGhhdCB0aGUgSUQgaXMgYWx3YXlzIGV4cGxpY2l0bHkgcHJvdmlkZWQgYXMgcGFydCBvZiB0aGUgbG9hZCBjb25maWd1cmF0aW9uLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAc3RhdGljXHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcclxuXHQgICAgICogQHJldHVybnMge3N0cmluZ31cclxuXHQgICAgICovXHJcblx0ICAgIEVtYmVkLmZpbmRHcm91cElkRnJvbUVtYmVkVXJsID0gZnVuY3Rpb24gKHVybCkge1xyXG5cdCAgICAgICAgdmFyIGdyb3VwSWRSZWdFeCA9IC9ncm91cElkPVwiPyhbXiZdKylcIj8vO1xyXG5cdCAgICAgICAgdmFyIGdyb3VwSWRNYXRjaCA9IHVybC5tYXRjaChncm91cElkUmVnRXgpO1xyXG5cdCAgICAgICAgdmFyIGdyb3VwSWQ7XHJcblx0ICAgICAgICBpZiAoZ3JvdXBJZE1hdGNoKSB7XHJcblx0ICAgICAgICAgICAgZ3JvdXBJZCA9IGdyb3VwSWRNYXRjaFsxXTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHJldHVybiBncm91cElkO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogU2VuZHMgdGhlIGNvbmZpZyBmb3IgZnJvbnQgbG9hZCBjYWxscywgYWZ0ZXIgJ3JlYWR5JyBtZXNzYWdlIGlzIHJlY2VpdmVkIGZyb20gdGhlIGlmcmFtZVxyXG5cdCAgICAgKi9cclxuXHQgICAgRW1iZWQucHJvdG90eXBlLmZyb250TG9hZFNlbmRDb25maWcgPSBmdW5jdGlvbiAoY29uZmlnKSB7XHJcblx0ICAgICAgICB2YXIgZXJyb3JzID0gdGhpcy52YWxpZGF0ZShjb25maWcpO1xyXG5cdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdCAgICAgICAgICAgIHRocm93IGVycm9ycztcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIC8vIGNvbnRlbnRXaW5kb3cgbXVzdCBiZSBpbml0aWFsaXplZFxyXG5cdCAgICAgICAgaWYgKHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cgPT0gbnVsbClcclxuXHQgICAgICAgICAgICByZXR1cm47XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmhwbS5wb3N0KFwiL2Zyb250bG9hZC9jb25maWdcIiwgY29uZmlnLCB7IHVpZDogdGhpcy5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5pZnJhbWUuY29udGVudFdpbmRvdykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0sIGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgRW1iZWQuYWxsb3dlZEV2ZW50cyA9IFtcImxvYWRlZFwiLCBcInNhdmVkXCIsIFwicmVuZGVyZWRcIiwgXCJzYXZlQXNUcmlnZ2VyZWRcIiwgXCJlcnJvclwiLCBcImRhdGFTZWxlY3RlZFwiLCBcImJ1dHRvbkNsaWNrZWRcIl07XHJcblx0ICAgIEVtYmVkLmFjY2Vzc1Rva2VuQXR0cmlidXRlID0gJ3Bvd2VyYmktYWNjZXNzLXRva2VuJztcclxuXHQgICAgRW1iZWQuZW1iZWRVcmxBdHRyaWJ1dGUgPSAncG93ZXJiaS1lbWJlZC11cmwnO1xyXG5cdCAgICBFbWJlZC5uYW1lQXR0cmlidXRlID0gJ3Bvd2VyYmktbmFtZSc7XHJcblx0ICAgIEVtYmVkLnR5cGVBdHRyaWJ1dGUgPSAncG93ZXJiaS10eXBlJztcclxuXHQgICAgRW1iZWQubWF4RnJvbnRMb2FkVGltZXMgPSAyO1xyXG5cdCAgICByZXR1cm4gRW1iZWQ7XHJcblx0fSgpKTtcclxuXHRleHBvcnRzLkVtYmVkID0gRW1iZWQ7XHJcblxuXG4vKioqLyB9KSxcbi8qIDMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHQvKipcclxuXHQgKiBSYWlzZXMgYSBjdXN0b20gZXZlbnQgd2l0aCBldmVudCBkYXRhIG9uIHRoZSBzcGVjaWZpZWQgSFRNTCBlbGVtZW50LlxyXG5cdCAqXHJcblx0ICogQGV4cG9ydFxyXG5cdCAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcclxuXHQgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnROYW1lXHJcblx0ICogQHBhcmFtIHsqfSBldmVudERhdGFcclxuXHQgKi9cclxuXHRmdW5jdGlvbiByYWlzZUN1c3RvbUV2ZW50KGVsZW1lbnQsIGV2ZW50TmFtZSwgZXZlbnREYXRhKSB7XHJcblx0ICAgIHZhciBjdXN0b21FdmVudDtcclxuXHQgICAgaWYgKHR5cGVvZiBDdXN0b21FdmVudCA9PT0gJ2Z1bmN0aW9uJykge1xyXG5cdCAgICAgICAgY3VzdG9tRXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCB7XHJcblx0ICAgICAgICAgICAgZGV0YWlsOiBldmVudERhdGEsXHJcblx0ICAgICAgICAgICAgYnViYmxlczogdHJ1ZSxcclxuXHQgICAgICAgICAgICBjYW5jZWxhYmxlOiB0cnVlXHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfVxyXG5cdCAgICBlbHNlIHtcclxuXHQgICAgICAgIGN1c3RvbUV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7XHJcblx0ICAgICAgICBjdXN0b21FdmVudC5pbml0Q3VzdG9tRXZlbnQoZXZlbnROYW1lLCB0cnVlLCB0cnVlLCBldmVudERhdGEpO1xyXG5cdCAgICB9XHJcblx0ICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChjdXN0b21FdmVudCk7XHJcblx0fVxyXG5cdGV4cG9ydHMucmFpc2VDdXN0b21FdmVudCA9IHJhaXNlQ3VzdG9tRXZlbnQ7XHJcblx0LyoqXHJcblx0ICogRmluZHMgdGhlIGluZGV4IG9mIHRoZSBmaXJzdCB2YWx1ZSBpbiBhbiBhcnJheSB0aGF0IG1hdGNoZXMgdGhlIHNwZWNpZmllZCBwcmVkaWNhdGUuXHJcblx0ICpcclxuXHQgKiBAZXhwb3J0XHJcblx0ICogQHRlbXBsYXRlIFRcclxuXHQgKiBAcGFyYW0geyh4OiBUKSA9PiBib29sZWFufSBwcmVkaWNhdGVcclxuXHQgKiBAcGFyYW0ge1RbXX0geHNcclxuXHQgKiBAcmV0dXJucyB7bnVtYmVyfVxyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIGZpbmRJbmRleChwcmVkaWNhdGUsIHhzKSB7XHJcblx0ICAgIGlmICghQXJyYXkuaXNBcnJheSh4cykpIHtcclxuXHQgICAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBhdHRlbXB0ZWQgdG8gY2FsbCBmaW5kIHdpdGggc2Vjb25kIHBhcmFtZXRlciB0aGF0IHdhcyBub3QgYW4gYXJyYXkuIFlvdSBwYXNzZWQ6IFwiICsgeHMpO1xyXG5cdCAgICB9XHJcblx0ICAgIHZhciBpbmRleDtcclxuXHQgICAgeHMuc29tZShmdW5jdGlvbiAoeCwgaSkge1xyXG5cdCAgICAgICAgaWYgKHByZWRpY2F0ZSh4KSkge1xyXG5cdCAgICAgICAgICAgIGluZGV4ID0gaTtcclxuXHQgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgfSk7XHJcblx0ICAgIHJldHVybiBpbmRleDtcclxuXHR9XHJcblx0ZXhwb3J0cy5maW5kSW5kZXggPSBmaW5kSW5kZXg7XHJcblx0LyoqXHJcblx0ICogRmluZHMgdGhlIGZpcnN0IHZhbHVlIGluIGFuIGFycmF5IHRoYXQgbWF0Y2hlcyB0aGUgc3BlY2lmaWVkIHByZWRpY2F0ZS5cclxuXHQgKlxyXG5cdCAqIEBleHBvcnRcclxuXHQgKiBAdGVtcGxhdGUgVFxyXG5cdCAqIEBwYXJhbSB7KHg6IFQpID0+IGJvb2xlYW59IHByZWRpY2F0ZVxyXG5cdCAqIEBwYXJhbSB7VFtdfSB4c1xyXG5cdCAqIEByZXR1cm5zIHtUfVxyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIGZpbmQocHJlZGljYXRlLCB4cykge1xyXG5cdCAgICB2YXIgaW5kZXggPSBmaW5kSW5kZXgocHJlZGljYXRlLCB4cyk7XHJcblx0ICAgIHJldHVybiB4c1tpbmRleF07XHJcblx0fVxyXG5cdGV4cG9ydHMuZmluZCA9IGZpbmQ7XHJcblx0ZnVuY3Rpb24gcmVtb3ZlKHByZWRpY2F0ZSwgeHMpIHtcclxuXHQgICAgdmFyIGluZGV4ID0gZmluZEluZGV4KHByZWRpY2F0ZSwgeHMpO1xyXG5cdCAgICB4cy5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cdH1cclxuXHRleHBvcnRzLnJlbW92ZSA9IHJlbW92ZTtcclxuXHQvLyBTZWU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9hc3NpZ25cclxuXHQvLyBUT0RPOiByZXBsYWNlIGluIGZhdm9yIG9mIHVzaW5nIHBvbHlmaWxsXHJcblx0LyoqXHJcblx0ICogQ29waWVzIHRoZSB2YWx1ZXMgb2YgYWxsIGVudW1lcmFibGUgcHJvcGVydGllcyBmcm9tIG9uZSBvciBtb3JlIHNvdXJjZSBvYmplY3RzIHRvIGEgdGFyZ2V0IG9iamVjdCwgYW5kIHJldHVybnMgdGhlIHRhcmdldCBvYmplY3QuXHJcblx0ICpcclxuXHQgKiBAZXhwb3J0XHJcblx0ICogQHBhcmFtIHthbnl9IGFyZ3NcclxuXHQgKiBAcmV0dXJuc1xyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIGFzc2lnbigpIHtcclxuXHQgICAgdmFyIGFyZ3MgPSBbXTtcclxuXHQgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuXHQgICAgICAgIGFyZ3NbX2kgLSAwXSA9IGFyZ3VtZW50c1tfaV07XHJcblx0ICAgIH1cclxuXHQgICAgdmFyIHRhcmdldCA9IGFyZ3NbMF07XHJcblx0ICAgICd1c2Ugc3RyaWN0JztcclxuXHQgICAgaWYgKHRhcmdldCA9PT0gdW5kZWZpbmVkIHx8IHRhcmdldCA9PT0gbnVsbCkge1xyXG5cdCAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNvbnZlcnQgdW5kZWZpbmVkIG9yIG51bGwgdG8gb2JqZWN0Jyk7XHJcblx0ICAgIH1cclxuXHQgICAgdmFyIG91dHB1dCA9IE9iamVjdCh0YXJnZXQpO1xyXG5cdCAgICBmb3IgKHZhciBpbmRleCA9IDE7IGluZGV4IDwgYXJndW1lbnRzLmxlbmd0aDsgaW5kZXgrKykge1xyXG5cdCAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpbmRleF07XHJcblx0ICAgICAgICBpZiAoc291cmNlICE9PSB1bmRlZmluZWQgJiYgc291cmNlICE9PSBudWxsKSB7XHJcblx0ICAgICAgICAgICAgZm9yICh2YXIgbmV4dEtleSBpbiBzb3VyY2UpIHtcclxuXHQgICAgICAgICAgICAgICAgaWYgKHNvdXJjZS5oYXNPd25Qcm9wZXJ0eShuZXh0S2V5KSkge1xyXG5cdCAgICAgICAgICAgICAgICAgICAgb3V0cHV0W25leHRLZXldID0gc291cmNlW25leHRLZXldO1xyXG5cdCAgICAgICAgICAgICAgICB9XHJcblx0ICAgICAgICAgICAgfVxyXG5cdCAgICAgICAgfVxyXG5cdCAgICB9XHJcblx0ICAgIHJldHVybiBvdXRwdXQ7XHJcblx0fVxyXG5cdGV4cG9ydHMuYXNzaWduID0gYXNzaWduO1xyXG5cdC8qKlxyXG5cdCAqIEdlbmVyYXRlcyBhIHJhbmRvbSA3IGNoYXJhY3RlciBzdHJpbmcuXHJcblx0ICpcclxuXHQgKiBAZXhwb3J0XHJcblx0ICogQHJldHVybnMge3N0cmluZ31cclxuXHQgKi9cclxuXHRmdW5jdGlvbiBjcmVhdGVSYW5kb21TdHJpbmcoKSB7XHJcblx0ICAgIHJldHVybiAoTWF0aC5yYW5kb20oKSArIDEpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNyk7XHJcblx0fVxyXG5cdGV4cG9ydHMuY3JlYXRlUmFuZG9tU3RyaW5nID0gY3JlYXRlUmFuZG9tU3RyaW5nO1xyXG5cdC8qKlxyXG5cdCAqIEdlbmVyYXRlcyBhIDIwIGNoYXJhY2h0ZXIgdXVpZC5cclxuXHQgKlxyXG5cdCAqIEBleHBvcnRcclxuXHQgKiBAcmV0dXJucyB7c3RyaW5nfVxyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIGdlbmVyYXRlVVVJRCgpIHtcclxuXHQgICAgdmFyIGQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuXHQgICAgaWYgKHR5cGVvZiBwZXJmb3JtYW5jZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHBlcmZvcm1hbmNlLm5vdyA9PT0gJ2Z1bmN0aW9uJykge1xyXG5cdCAgICAgICAgZCArPSBwZXJmb3JtYW5jZS5ub3coKTtcclxuXHQgICAgfVxyXG5cdCAgICByZXR1cm4gJ3h4eHh4eHh4eHh4eHh4eHh4eHh4Jy5yZXBsYWNlKC9beHldL2csIGZ1bmN0aW9uIChjKSB7XHJcblx0ICAgICAgICAvLyBHZW5lcmF0ZSBhIHJhbmRvbSBudW1iZXIsIHNjYWxlZCBmcm9tIDAgdG8gMTYuXHJcblx0ICAgICAgICAvLyBCaXR3aXNlLWFuZCBieSAxNSBzaW5jZSB3ZSBvbmx5IGNhcmUgYWJvdXQgdGhlIGxhc3QgNCBiaXRzLlxyXG5cdCAgICAgICAgdmFyIHIgPSAoZCArIE1hdGgucmFuZG9tKCkgKiAxNikgJiAxNSB8IDA7XHJcblx0ICAgICAgICAvLyBTaGlmdCA0IHRpbWVzIHRvIGRpdmlkZSBieSAxNlxyXG5cdCAgICAgICAgZCA+Pj0gNDtcclxuXHQgICAgICAgIHJldHVybiByLnRvU3RyaW5nKDE2KTtcclxuXHQgICAgfSk7XHJcblx0fVxyXG5cdGV4cG9ydHMuZ2VuZXJhdGVVVUlEID0gZ2VuZXJhdGVVVUlEO1xyXG5cdC8qKlxyXG5cdCAqIEFkZHMgYSBwYXJhbWV0ZXIgdG8gdGhlIGdpdmVuIHVybFxyXG5cdCAqXHJcblx0ICogQGV4cG9ydFxyXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcclxuXHQgKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1OYW1lXHJcblx0ICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXHJcblx0ICogQHJldHVybnMge3N0cmluZ31cclxuXHQgKi9cclxuXHRmdW5jdGlvbiBhZGRQYXJhbVRvVXJsKHVybCwgcGFyYW1OYW1lLCB2YWx1ZSkge1xyXG5cdCAgICB2YXIgcGFyYW1ldGVyUHJlZml4ID0gdXJsLmluZGV4T2YoJz8nKSA+IDAgPyAnJicgOiAnPyc7XHJcblx0ICAgIHVybCArPSBwYXJhbWV0ZXJQcmVmaXggKyBwYXJhbU5hbWUgKyAnPScgKyB2YWx1ZTtcclxuXHQgICAgcmV0dXJuIHVybDtcclxuXHR9XHJcblx0ZXhwb3J0cy5hZGRQYXJhbVRvVXJsID0gYWRkUGFyYW1Ub1VybDtcclxuXHQvKipcclxuXHQgKiBDaGVja3MgaWYgdGhlIHJlcG9ydCBpcyBzYXZlZC5cclxuXHQgKlxyXG5cdCAqIEBleHBvcnRcclxuXHQgKiBAcGFyYW0ge0h0dHBQb3N0TWVzc2FnZX0gaHBtXHJcblx0ICogQHBhcmFtIHtzdHJpbmd9IHVpZFxyXG5cdCAqIEBwYXJhbSB7V2luZG93fSBjb250ZW50V2luZG93XHJcblx0ICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59XHJcblx0ICovXHJcblx0ZnVuY3Rpb24gaXNTYXZlZEludGVybmFsKGhwbSwgdWlkLCBjb250ZW50V2luZG93KSB7XHJcblx0ICAgIHJldHVybiBocG0uZ2V0KCcvcmVwb3J0L2hhc1Vuc2F2ZWRDaGFuZ2VzJywgeyB1aWQ6IHVpZCB9LCBjb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7IHJldHVybiAhcmVzcG9uc2UuYm9keTsgfSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICB0aHJvdyByZXNwb25zZS5ib2R5O1xyXG5cdCAgICB9KTtcclxuXHR9XHJcblx0ZXhwb3J0cy5pc1NhdmVkSW50ZXJuYWwgPSBpc1NhdmVkSW50ZXJuYWw7XHJcblx0LyoqXHJcblx0ICogQ2hlY2tzIGlmIHRoZSBlbWJlZCB1cmwgaXMgZm9yIFJETCByZXBvcnQuXHJcblx0ICpcclxuXHQgKiBAZXhwb3J0XHJcblx0ICAqIEBwYXJhbSB7c3RyaW5nfSBlbWJlZFVybFxyXG5cdCAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuXHQgKi9cclxuXHRmdW5jdGlvbiBpc1JETEVtYmVkKGVtYmVkVXJsKSB7XHJcblx0ICAgIHJldHVybiBlbWJlZFVybC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoXCIvcmRsZW1iZWQ/XCIpID49IDA7XHJcblx0fVxyXG5cdGV4cG9ydHMuaXNSRExFbWJlZCA9IGlzUkRMRW1iZWQ7XHJcblxuXG4vKioqLyB9KSxcbi8qIDQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHQvKiEgcG93ZXJiaS1tb2RlbHMgdjEuMi4xIHwgKGMpIDIwMTYgTWljcm9zb2Z0IENvcnBvcmF0aW9uIE1JVCAqL1xuXHQoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRcdGlmKHRydWUpXG5cdFx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0XHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdFx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0XHRleHBvcnRzW1wicG93ZXJiaS1tb2RlbHNcIl0gPSBmYWN0b3J5KCk7XG5cdFx0ZWxzZVxuXHRcdFx0cm9vdFtcInBvd2VyYmktbW9kZWxzXCJdID0gZmFjdG9yeSgpO1xuXHR9KSh0aGlzLCBmdW5jdGlvbigpIHtcblx0cmV0dXJuIC8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcblx0LyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG5cdC8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuXHQvKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHQvKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG5cdC8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0LyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcblx0LyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge30sXG5cdC8qKioqKiovIFx0XHRcdGlkOiBtb2R1bGVJZCxcblx0LyoqKioqKi8gXHRcdFx0bG9hZGVkOiBmYWxzZVxuXHQvKioqKioqLyBcdFx0fTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHQvKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG5cdC8qKioqKiovIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdC8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG5cdC8qKioqKiovIFx0fVxuXHQvKioqKioqL1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5cdC8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuXHQvKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cblx0LyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuXHQvKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXHQvKioqKioqLyB9KVxuXHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHQvKioqKioqLyAoW1xuXHQvKiAwICovXG5cdC8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblx0XG5cdFx0dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcblx0XHQgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcblx0XHQgICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcblx0XHQgICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG5cdFx0ICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcblx0XHQgICAgfTtcclxuXHRcdH0pKCk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0XHRleHBvcnRzLlZhbGlkYXRvcnMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpLlZhbGlkYXRvcnM7XHJcblx0XHR2YXIgVHJhY2VUeXBlO1xyXG5cdFx0KGZ1bmN0aW9uIChUcmFjZVR5cGUpIHtcclxuXHRcdCAgICBUcmFjZVR5cGVbVHJhY2VUeXBlW1wiSW5mb3JtYXRpb25cIl0gPSAwXSA9IFwiSW5mb3JtYXRpb25cIjtcclxuXHRcdCAgICBUcmFjZVR5cGVbVHJhY2VUeXBlW1wiVmVyYm9zZVwiXSA9IDFdID0gXCJWZXJib3NlXCI7XHJcblx0XHQgICAgVHJhY2VUeXBlW1RyYWNlVHlwZVtcIldhcm5pbmdcIl0gPSAyXSA9IFwiV2FybmluZ1wiO1xyXG5cdFx0ICAgIFRyYWNlVHlwZVtUcmFjZVR5cGVbXCJFcnJvclwiXSA9IDNdID0gXCJFcnJvclwiO1xyXG5cdFx0ICAgIFRyYWNlVHlwZVtUcmFjZVR5cGVbXCJFeHBlY3RlZEVycm9yXCJdID0gNF0gPSBcIkV4cGVjdGVkRXJyb3JcIjtcclxuXHRcdCAgICBUcmFjZVR5cGVbVHJhY2VUeXBlW1wiVW5leHBlY3RlZEVycm9yXCJdID0gNV0gPSBcIlVuZXhwZWN0ZWRFcnJvclwiO1xyXG5cdFx0ICAgIFRyYWNlVHlwZVtUcmFjZVR5cGVbXCJGYXRhbFwiXSA9IDZdID0gXCJGYXRhbFwiO1xyXG5cdFx0fSkoVHJhY2VUeXBlID0gZXhwb3J0cy5UcmFjZVR5cGUgfHwgKGV4cG9ydHMuVHJhY2VUeXBlID0ge30pKTtcclxuXHRcdHZhciBQYWdlU2l6ZVR5cGU7XHJcblx0XHQoZnVuY3Rpb24gKFBhZ2VTaXplVHlwZSkge1xyXG5cdFx0ICAgIFBhZ2VTaXplVHlwZVtQYWdlU2l6ZVR5cGVbXCJXaWRlc2NyZWVuXCJdID0gMF0gPSBcIldpZGVzY3JlZW5cIjtcclxuXHRcdCAgICBQYWdlU2l6ZVR5cGVbUGFnZVNpemVUeXBlW1wiU3RhbmRhcmRcIl0gPSAxXSA9IFwiU3RhbmRhcmRcIjtcclxuXHRcdCAgICBQYWdlU2l6ZVR5cGVbUGFnZVNpemVUeXBlW1wiQ29ydGFuYVwiXSA9IDJdID0gXCJDb3J0YW5hXCI7XHJcblx0XHQgICAgUGFnZVNpemVUeXBlW1BhZ2VTaXplVHlwZVtcIkxldHRlclwiXSA9IDNdID0gXCJMZXR0ZXJcIjtcclxuXHRcdCAgICBQYWdlU2l6ZVR5cGVbUGFnZVNpemVUeXBlW1wiQ3VzdG9tXCJdID0gNF0gPSBcIkN1c3RvbVwiO1xyXG5cdFx0fSkoUGFnZVNpemVUeXBlID0gZXhwb3J0cy5QYWdlU2l6ZVR5cGUgfHwgKGV4cG9ydHMuUGFnZVNpemVUeXBlID0ge30pKTtcclxuXHRcdHZhciBEaXNwbGF5T3B0aW9uO1xyXG5cdFx0KGZ1bmN0aW9uIChEaXNwbGF5T3B0aW9uKSB7XHJcblx0XHQgICAgRGlzcGxheU9wdGlvbltEaXNwbGF5T3B0aW9uW1wiRml0VG9QYWdlXCJdID0gMF0gPSBcIkZpdFRvUGFnZVwiO1xyXG5cdFx0ICAgIERpc3BsYXlPcHRpb25bRGlzcGxheU9wdGlvbltcIkZpdFRvV2lkdGhcIl0gPSAxXSA9IFwiRml0VG9XaWR0aFwiO1xyXG5cdFx0ICAgIERpc3BsYXlPcHRpb25bRGlzcGxheU9wdGlvbltcIkFjdHVhbFNpemVcIl0gPSAyXSA9IFwiQWN0dWFsU2l6ZVwiO1xyXG5cdFx0fSkoRGlzcGxheU9wdGlvbiA9IGV4cG9ydHMuRGlzcGxheU9wdGlvbiB8fCAoZXhwb3J0cy5EaXNwbGF5T3B0aW9uID0ge30pKTtcclxuXHRcdHZhciBCYWNrZ3JvdW5kVHlwZTtcclxuXHRcdChmdW5jdGlvbiAoQmFja2dyb3VuZFR5cGUpIHtcclxuXHRcdCAgICBCYWNrZ3JvdW5kVHlwZVtCYWNrZ3JvdW5kVHlwZVtcIkRlZmF1bHRcIl0gPSAwXSA9IFwiRGVmYXVsdFwiO1xyXG5cdFx0ICAgIEJhY2tncm91bmRUeXBlW0JhY2tncm91bmRUeXBlW1wiVHJhbnNwYXJlbnRcIl0gPSAxXSA9IFwiVHJhbnNwYXJlbnRcIjtcclxuXHRcdH0pKEJhY2tncm91bmRUeXBlID0gZXhwb3J0cy5CYWNrZ3JvdW5kVHlwZSB8fCAoZXhwb3J0cy5CYWNrZ3JvdW5kVHlwZSA9IHt9KSk7XHJcblx0XHR2YXIgVmlzdWFsQ29udGFpbmVyRGlzcGxheU1vZGU7XHJcblx0XHQoZnVuY3Rpb24gKFZpc3VhbENvbnRhaW5lckRpc3BsYXlNb2RlKSB7XHJcblx0XHQgICAgVmlzdWFsQ29udGFpbmVyRGlzcGxheU1vZGVbVmlzdWFsQ29udGFpbmVyRGlzcGxheU1vZGVbXCJWaXNpYmxlXCJdID0gMF0gPSBcIlZpc2libGVcIjtcclxuXHRcdCAgICBWaXN1YWxDb250YWluZXJEaXNwbGF5TW9kZVtWaXN1YWxDb250YWluZXJEaXNwbGF5TW9kZVtcIkhpZGRlblwiXSA9IDFdID0gXCJIaWRkZW5cIjtcclxuXHRcdH0pKFZpc3VhbENvbnRhaW5lckRpc3BsYXlNb2RlID0gZXhwb3J0cy5WaXN1YWxDb250YWluZXJEaXNwbGF5TW9kZSB8fCAoZXhwb3J0cy5WaXN1YWxDb250YWluZXJEaXNwbGF5TW9kZSA9IHt9KSk7XHJcblx0XHR2YXIgTGF5b3V0VHlwZTtcclxuXHRcdChmdW5jdGlvbiAoTGF5b3V0VHlwZSkge1xyXG5cdFx0ICAgIExheW91dFR5cGVbTGF5b3V0VHlwZVtcIk1hc3RlclwiXSA9IDBdID0gXCJNYXN0ZXJcIjtcclxuXHRcdCAgICBMYXlvdXRUeXBlW0xheW91dFR5cGVbXCJDdXN0b21cIl0gPSAxXSA9IFwiQ3VzdG9tXCI7XHJcblx0XHQgICAgTGF5b3V0VHlwZVtMYXlvdXRUeXBlW1wiTW9iaWxlUG9ydHJhaXRcIl0gPSAyXSA9IFwiTW9iaWxlUG9ydHJhaXRcIjtcclxuXHRcdCAgICBMYXlvdXRUeXBlW0xheW91dFR5cGVbXCJNb2JpbGVMYW5kc2NhcGVcIl0gPSAzXSA9IFwiTW9iaWxlTGFuZHNjYXBlXCI7XHJcblx0XHR9KShMYXlvdXRUeXBlID0gZXhwb3J0cy5MYXlvdXRUeXBlIHx8IChleHBvcnRzLkxheW91dFR5cGUgPSB7fSkpO1xyXG5cdFx0dmFyIFNlY3Rpb25WaXNpYmlsaXR5O1xyXG5cdFx0KGZ1bmN0aW9uIChTZWN0aW9uVmlzaWJpbGl0eSkge1xyXG5cdFx0ICAgIFNlY3Rpb25WaXNpYmlsaXR5W1NlY3Rpb25WaXNpYmlsaXR5W1wiQWx3YXlzVmlzaWJsZVwiXSA9IDBdID0gXCJBbHdheXNWaXNpYmxlXCI7XHJcblx0XHQgICAgU2VjdGlvblZpc2liaWxpdHlbU2VjdGlvblZpc2liaWxpdHlbXCJIaWRkZW5JblZpZXdNb2RlXCJdID0gMV0gPSBcIkhpZGRlbkluVmlld01vZGVcIjtcclxuXHRcdH0pKFNlY3Rpb25WaXNpYmlsaXR5ID0gZXhwb3J0cy5TZWN0aW9uVmlzaWJpbGl0eSB8fCAoZXhwb3J0cy5TZWN0aW9uVmlzaWJpbGl0eSA9IHt9KSk7XHJcblx0XHR2YXIgUGVybWlzc2lvbnM7XHJcblx0XHQoZnVuY3Rpb24gKFBlcm1pc3Npb25zKSB7XHJcblx0XHQgICAgUGVybWlzc2lvbnNbUGVybWlzc2lvbnNbXCJSZWFkXCJdID0gMF0gPSBcIlJlYWRcIjtcclxuXHRcdCAgICBQZXJtaXNzaW9uc1tQZXJtaXNzaW9uc1tcIlJlYWRXcml0ZVwiXSA9IDFdID0gXCJSZWFkV3JpdGVcIjtcclxuXHRcdCAgICBQZXJtaXNzaW9uc1tQZXJtaXNzaW9uc1tcIkNvcHlcIl0gPSAyXSA9IFwiQ29weVwiO1xyXG5cdFx0ICAgIFBlcm1pc3Npb25zW1Blcm1pc3Npb25zW1wiQ3JlYXRlXCJdID0gNF0gPSBcIkNyZWF0ZVwiO1xyXG5cdFx0ICAgIFBlcm1pc3Npb25zW1Blcm1pc3Npb25zW1wiQWxsXCJdID0gN10gPSBcIkFsbFwiO1xyXG5cdFx0fSkoUGVybWlzc2lvbnMgPSBleHBvcnRzLlBlcm1pc3Npb25zIHx8IChleHBvcnRzLlBlcm1pc3Npb25zID0ge30pKTtcclxuXHRcdHZhciBWaWV3TW9kZTtcclxuXHRcdChmdW5jdGlvbiAoVmlld01vZGUpIHtcclxuXHRcdCAgICBWaWV3TW9kZVtWaWV3TW9kZVtcIlZpZXdcIl0gPSAwXSA9IFwiVmlld1wiO1xyXG5cdFx0ICAgIFZpZXdNb2RlW1ZpZXdNb2RlW1wiRWRpdFwiXSA9IDFdID0gXCJFZGl0XCI7XHJcblx0XHR9KShWaWV3TW9kZSA9IGV4cG9ydHMuVmlld01vZGUgfHwgKGV4cG9ydHMuVmlld01vZGUgPSB7fSkpO1xyXG5cdFx0dmFyIFRva2VuVHlwZTtcclxuXHRcdChmdW5jdGlvbiAoVG9rZW5UeXBlKSB7XHJcblx0XHQgICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIkFhZFwiXSA9IDBdID0gXCJBYWRcIjtcclxuXHRcdCAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiRW1iZWRcIl0gPSAxXSA9IFwiRW1iZWRcIjtcclxuXHRcdH0pKFRva2VuVHlwZSA9IGV4cG9ydHMuVG9rZW5UeXBlIHx8IChleHBvcnRzLlRva2VuVHlwZSA9IHt9KSk7XHJcblx0XHR2YXIgTWVudUxvY2F0aW9uO1xyXG5cdFx0KGZ1bmN0aW9uIChNZW51TG9jYXRpb24pIHtcclxuXHRcdCAgICBNZW51TG9jYXRpb25bTWVudUxvY2F0aW9uW1wiQm90dG9tXCJdID0gMF0gPSBcIkJvdHRvbVwiO1xyXG5cdFx0ICAgIE1lbnVMb2NhdGlvbltNZW51TG9jYXRpb25bXCJUb3BcIl0gPSAxXSA9IFwiVG9wXCI7XHJcblx0XHR9KShNZW51TG9jYXRpb24gPSBleHBvcnRzLk1lbnVMb2NhdGlvbiB8fCAoZXhwb3J0cy5NZW51TG9jYXRpb24gPSB7fSkpO1xyXG5cdFx0dmFyIEZpbHRlcnNMZXZlbDtcclxuXHRcdChmdW5jdGlvbiAoRmlsdGVyc0xldmVsKSB7XHJcblx0XHQgICAgRmlsdGVyc0xldmVsW0ZpbHRlcnNMZXZlbFtcIlJlcG9ydFwiXSA9IDBdID0gXCJSZXBvcnRcIjtcclxuXHRcdCAgICBGaWx0ZXJzTGV2ZWxbRmlsdGVyc0xldmVsW1wiUGFnZVwiXSA9IDFdID0gXCJQYWdlXCI7XHJcblx0XHQgICAgRmlsdGVyc0xldmVsW0ZpbHRlcnNMZXZlbFtcIlZpc3VhbFwiXSA9IDJdID0gXCJWaXN1YWxcIjtcclxuXHRcdH0pKEZpbHRlcnNMZXZlbCA9IGV4cG9ydHMuRmlsdGVyc0xldmVsIHx8IChleHBvcnRzLkZpbHRlcnNMZXZlbCA9IHt9KSk7XHJcblx0XHR2YXIgRmlsdGVyVHlwZTtcclxuXHRcdChmdW5jdGlvbiAoRmlsdGVyVHlwZSkge1xyXG5cdFx0ICAgIEZpbHRlclR5cGVbRmlsdGVyVHlwZVtcIkFkdmFuY2VkXCJdID0gMF0gPSBcIkFkdmFuY2VkXCI7XHJcblx0XHQgICAgRmlsdGVyVHlwZVtGaWx0ZXJUeXBlW1wiQmFzaWNcIl0gPSAxXSA9IFwiQmFzaWNcIjtcclxuXHRcdCAgICBGaWx0ZXJUeXBlW0ZpbHRlclR5cGVbXCJVbmtub3duXCJdID0gMl0gPSBcIlVua25vd25cIjtcclxuXHRcdCAgICBGaWx0ZXJUeXBlW0ZpbHRlclR5cGVbXCJJbmNsdWRlRXhjbHVkZVwiXSA9IDNdID0gXCJJbmNsdWRlRXhjbHVkZVwiO1xyXG5cdFx0ICAgIEZpbHRlclR5cGVbRmlsdGVyVHlwZVtcIlJlbGF0aXZlRGF0ZVwiXSA9IDRdID0gXCJSZWxhdGl2ZURhdGVcIjtcclxuXHRcdCAgICBGaWx0ZXJUeXBlW0ZpbHRlclR5cGVbXCJUb3BOXCJdID0gNV0gPSBcIlRvcE5cIjtcclxuXHRcdCAgICBGaWx0ZXJUeXBlW0ZpbHRlclR5cGVbXCJUdXBsZVwiXSA9IDZdID0gXCJUdXBsZVwiO1xyXG5cdFx0fSkoRmlsdGVyVHlwZSA9IGV4cG9ydHMuRmlsdGVyVHlwZSB8fCAoZXhwb3J0cy5GaWx0ZXJUeXBlID0ge30pKTtcclxuXHRcdHZhciBSZWxhdGl2ZURhdGVGaWx0ZXJUaW1lVW5pdDtcclxuXHRcdChmdW5jdGlvbiAoUmVsYXRpdmVEYXRlRmlsdGVyVGltZVVuaXQpIHtcclxuXHRcdCAgICBSZWxhdGl2ZURhdGVGaWx0ZXJUaW1lVW5pdFtSZWxhdGl2ZURhdGVGaWx0ZXJUaW1lVW5pdFtcIkRheXNcIl0gPSAwXSA9IFwiRGF5c1wiO1xyXG5cdFx0ICAgIFJlbGF0aXZlRGF0ZUZpbHRlclRpbWVVbml0W1JlbGF0aXZlRGF0ZUZpbHRlclRpbWVVbml0W1wiV2Vla3NcIl0gPSAxXSA9IFwiV2Vla3NcIjtcclxuXHRcdCAgICBSZWxhdGl2ZURhdGVGaWx0ZXJUaW1lVW5pdFtSZWxhdGl2ZURhdGVGaWx0ZXJUaW1lVW5pdFtcIkNhbGVuZGFyV2Vla3NcIl0gPSAyXSA9IFwiQ2FsZW5kYXJXZWVrc1wiO1xyXG5cdFx0ICAgIFJlbGF0aXZlRGF0ZUZpbHRlclRpbWVVbml0W1JlbGF0aXZlRGF0ZUZpbHRlclRpbWVVbml0W1wiTW9udGhzXCJdID0gM10gPSBcIk1vbnRoc1wiO1xyXG5cdFx0ICAgIFJlbGF0aXZlRGF0ZUZpbHRlclRpbWVVbml0W1JlbGF0aXZlRGF0ZUZpbHRlclRpbWVVbml0W1wiQ2FsZW5kYXJNb250aHNcIl0gPSA0XSA9IFwiQ2FsZW5kYXJNb250aHNcIjtcclxuXHRcdCAgICBSZWxhdGl2ZURhdGVGaWx0ZXJUaW1lVW5pdFtSZWxhdGl2ZURhdGVGaWx0ZXJUaW1lVW5pdFtcIlllYXJzXCJdID0gNV0gPSBcIlllYXJzXCI7XHJcblx0XHQgICAgUmVsYXRpdmVEYXRlRmlsdGVyVGltZVVuaXRbUmVsYXRpdmVEYXRlRmlsdGVyVGltZVVuaXRbXCJDYWxlbmRhclllYXJzXCJdID0gNl0gPSBcIkNhbGVuZGFyWWVhcnNcIjtcclxuXHRcdH0pKFJlbGF0aXZlRGF0ZUZpbHRlclRpbWVVbml0ID0gZXhwb3J0cy5SZWxhdGl2ZURhdGVGaWx0ZXJUaW1lVW5pdCB8fCAoZXhwb3J0cy5SZWxhdGl2ZURhdGVGaWx0ZXJUaW1lVW5pdCA9IHt9KSk7XHJcblx0XHR2YXIgUmVsYXRpdmVEYXRlT3BlcmF0b3JzO1xyXG5cdFx0KGZ1bmN0aW9uIChSZWxhdGl2ZURhdGVPcGVyYXRvcnMpIHtcclxuXHRcdCAgICBSZWxhdGl2ZURhdGVPcGVyYXRvcnNbUmVsYXRpdmVEYXRlT3BlcmF0b3JzW1wiSW5MYXN0XCJdID0gMF0gPSBcIkluTGFzdFwiO1xyXG5cdFx0ICAgIFJlbGF0aXZlRGF0ZU9wZXJhdG9yc1tSZWxhdGl2ZURhdGVPcGVyYXRvcnNbXCJJblRoaXNcIl0gPSAxXSA9IFwiSW5UaGlzXCI7XHJcblx0XHQgICAgUmVsYXRpdmVEYXRlT3BlcmF0b3JzW1JlbGF0aXZlRGF0ZU9wZXJhdG9yc1tcIkluTmV4dFwiXSA9IDJdID0gXCJJbk5leHRcIjtcclxuXHRcdH0pKFJlbGF0aXZlRGF0ZU9wZXJhdG9ycyA9IGV4cG9ydHMuUmVsYXRpdmVEYXRlT3BlcmF0b3JzIHx8IChleHBvcnRzLlJlbGF0aXZlRGF0ZU9wZXJhdG9ycyA9IHt9KSk7XHJcblx0XHR2YXIgRmlsdGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEZpbHRlcih0YXJnZXQsIGZpbHRlclR5cGUpIHtcclxuXHRcdCAgICAgICAgdGhpcy50YXJnZXQgPSB0YXJnZXQ7XHJcblx0XHQgICAgICAgIHRoaXMuZmlsdGVyVHlwZSA9IGZpbHRlclR5cGU7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIEZpbHRlci5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgICAgICB2YXIgZmlsdGVyID0ge1xyXG5cdFx0ICAgICAgICAgICAgJHNjaGVtYTogdGhpcy5zY2hlbWFVcmwsXHJcblx0XHQgICAgICAgICAgICB0YXJnZXQ6IHRoaXMudGFyZ2V0LFxyXG5cdFx0ICAgICAgICAgICAgZmlsdGVyVHlwZTogdGhpcy5maWx0ZXJUeXBlXHJcblx0XHQgICAgICAgIH07XHJcblx0XHQgICAgICAgIC8vIEFkZCBkaXNwbGF5U2V0dGluZ3Mgb25seSB3aGVuIGRlZmluZWRcclxuXHRcdCAgICAgICAgaWYgKHRoaXMuZGlzcGxheVNldHRpbmdzICE9PSB1bmRlZmluZWQpIHtcclxuXHRcdCAgICAgICAgICAgIGZpbHRlci5kaXNwbGF5U2V0dGluZ3MgPSB0aGlzLmRpc3BsYXlTZXR0aW5ncztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICByZXR1cm4gZmlsdGVyO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgO1xyXG5cdFx0ICAgIHJldHVybiBGaWx0ZXI7XHJcblx0XHR9KCkpO1xyXG5cdFx0ZXhwb3J0cy5GaWx0ZXIgPSBGaWx0ZXI7XHJcblx0XHR2YXIgTm90U3VwcG9ydGVkRmlsdGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhOb3RTdXBwb3J0ZWRGaWx0ZXIsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gTm90U3VwcG9ydGVkRmlsdGVyKHRhcmdldCwgbWVzc2FnZSwgbm90U3VwcG9ydGVkVHlwZU5hbWUpIHtcclxuXHRcdCAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgdGFyZ2V0LCBGaWx0ZXJUeXBlLlVua25vd24pIHx8IHRoaXM7XHJcblx0XHQgICAgICAgIF90aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xyXG5cdFx0ICAgICAgICBfdGhpcy5ub3RTdXBwb3J0ZWRUeXBlTmFtZSA9IG5vdFN1cHBvcnRlZFR5cGVOYW1lO1xyXG5cdFx0ICAgICAgICBfdGhpcy5zY2hlbWFVcmwgPSBOb3RTdXBwb3J0ZWRGaWx0ZXIuc2NoZW1hVXJsO1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3RoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIE5vdFN1cHBvcnRlZEZpbHRlci5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgICAgICB2YXIgZmlsdGVyID0gX3N1cGVyLnByb3RvdHlwZS50b0pTT04uY2FsbCh0aGlzKTtcclxuXHRcdCAgICAgICAgZmlsdGVyLm1lc3NhZ2UgPSB0aGlzLm1lc3NhZ2U7XHJcblx0XHQgICAgICAgIGZpbHRlci5ub3RTdXBwb3J0ZWRUeXBlTmFtZSA9IHRoaXMubm90U3VwcG9ydGVkVHlwZU5hbWU7XHJcblx0XHQgICAgICAgIHJldHVybiBmaWx0ZXI7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICBOb3RTdXBwb3J0ZWRGaWx0ZXIuc2NoZW1hVXJsID0gXCJodHRwOi8vcG93ZXJiaS5jb20vcHJvZHVjdC9zY2hlbWEjbm90U3VwcG9ydGVkXCI7XHJcblx0XHQgICAgcmV0dXJuIE5vdFN1cHBvcnRlZEZpbHRlcjtcclxuXHRcdH0oRmlsdGVyKSk7XHJcblx0XHRleHBvcnRzLk5vdFN1cHBvcnRlZEZpbHRlciA9IE5vdFN1cHBvcnRlZEZpbHRlcjtcclxuXHRcdHZhciBJbmNsdWRlRXhjbHVkZUZpbHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoSW5jbHVkZUV4Y2x1ZGVGaWx0ZXIsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gSW5jbHVkZUV4Y2x1ZGVGaWx0ZXIodGFyZ2V0LCBpc0V4Y2x1ZGUsIHZhbHVlcykge1xyXG5cdFx0ICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB0YXJnZXQsIEZpbHRlclR5cGUuSW5jbHVkZUV4Y2x1ZGUpIHx8IHRoaXM7XHJcblx0XHQgICAgICAgIF90aGlzLnZhbHVlcyA9IHZhbHVlcztcclxuXHRcdCAgICAgICAgX3RoaXMuaXNFeGNsdWRlID0gaXNFeGNsdWRlO1xyXG5cdFx0ICAgICAgICBfdGhpcy5zY2hlbWFVcmwgPSBJbmNsdWRlRXhjbHVkZUZpbHRlci5zY2hlbWFVcmw7XHJcblx0XHQgICAgICAgIHJldHVybiBfdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgSW5jbHVkZUV4Y2x1ZGVGaWx0ZXIucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICAgICAgdmFyIGZpbHRlciA9IF9zdXBlci5wcm90b3R5cGUudG9KU09OLmNhbGwodGhpcyk7XHJcblx0XHQgICAgICAgIGZpbHRlci5pc0V4Y2x1ZGUgPSB0aGlzLmlzRXhjbHVkZTtcclxuXHRcdCAgICAgICAgZmlsdGVyLnZhbHVlcyA9IHRoaXMudmFsdWVzO1xyXG5cdFx0ICAgICAgICByZXR1cm4gZmlsdGVyO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgSW5jbHVkZUV4Y2x1ZGVGaWx0ZXIuc2NoZW1hVXJsID0gXCJodHRwOi8vcG93ZXJiaS5jb20vcHJvZHVjdC9zY2hlbWEjaW5jbHVkZUV4Y2x1ZGVcIjtcclxuXHRcdCAgICByZXR1cm4gSW5jbHVkZUV4Y2x1ZGVGaWx0ZXI7XHJcblx0XHR9KEZpbHRlcikpO1xyXG5cdFx0ZXhwb3J0cy5JbmNsdWRlRXhjbHVkZUZpbHRlciA9IEluY2x1ZGVFeGNsdWRlRmlsdGVyO1xyXG5cdFx0dmFyIFRvcE5GaWx0ZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFRvcE5GaWx0ZXIsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gVG9wTkZpbHRlcih0YXJnZXQsIG9wZXJhdG9yLCBpdGVtQ291bnQsIG9yZGVyQnkpIHtcclxuXHRcdCAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgdGFyZ2V0LCBGaWx0ZXJUeXBlLlRvcE4pIHx8IHRoaXM7XHJcblx0XHQgICAgICAgIF90aGlzLm9wZXJhdG9yID0gb3BlcmF0b3I7XHJcblx0XHQgICAgICAgIF90aGlzLml0ZW1Db3VudCA9IGl0ZW1Db3VudDtcclxuXHRcdCAgICAgICAgX3RoaXMuc2NoZW1hVXJsID0gVG9wTkZpbHRlci5zY2hlbWFVcmw7XHJcblx0XHQgICAgICAgIF90aGlzLm9yZGVyQnkgPSBvcmRlckJ5O1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3RoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFRvcE5GaWx0ZXIucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICAgICAgdmFyIGZpbHRlciA9IF9zdXBlci5wcm90b3R5cGUudG9KU09OLmNhbGwodGhpcyk7XHJcblx0XHQgICAgICAgIGZpbHRlci5vcGVyYXRvciA9IHRoaXMub3BlcmF0b3I7XHJcblx0XHQgICAgICAgIGZpbHRlci5pdGVtQ291bnQgPSB0aGlzLml0ZW1Db3VudDtcclxuXHRcdCAgICAgICAgZmlsdGVyLm9yZGVyQnkgPSB0aGlzLm9yZGVyQnk7XHJcblx0XHQgICAgICAgIHJldHVybiBmaWx0ZXI7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICBUb3BORmlsdGVyLnNjaGVtYVVybCA9IFwiaHR0cDovL3Bvd2VyYmkuY29tL3Byb2R1Y3Qvc2NoZW1hI3RvcE5cIjtcclxuXHRcdCAgICByZXR1cm4gVG9wTkZpbHRlcjtcclxuXHRcdH0oRmlsdGVyKSk7XHJcblx0XHRleHBvcnRzLlRvcE5GaWx0ZXIgPSBUb3BORmlsdGVyO1xyXG5cdFx0dmFyIFJlbGF0aXZlRGF0ZUZpbHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoUmVsYXRpdmVEYXRlRmlsdGVyLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFJlbGF0aXZlRGF0ZUZpbHRlcih0YXJnZXQsIG9wZXJhdG9yLCB0aW1lVW5pdHNDb3VudCwgdGltZVVuaXRUeXBlLCBpbmNsdWRlVG9kYXkpIHtcclxuXHRcdCAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgdGFyZ2V0LCBGaWx0ZXJUeXBlLlJlbGF0aXZlRGF0ZSkgfHwgdGhpcztcclxuXHRcdCAgICAgICAgX3RoaXMub3BlcmF0b3IgPSBvcGVyYXRvcjtcclxuXHRcdCAgICAgICAgX3RoaXMudGltZVVuaXRzQ291bnQgPSB0aW1lVW5pdHNDb3VudDtcclxuXHRcdCAgICAgICAgX3RoaXMudGltZVVuaXRUeXBlID0gdGltZVVuaXRUeXBlO1xyXG5cdFx0ICAgICAgICBfdGhpcy5pbmNsdWRlVG9kYXkgPSBpbmNsdWRlVG9kYXk7XHJcblx0XHQgICAgICAgIF90aGlzLnNjaGVtYVVybCA9IFJlbGF0aXZlRGF0ZUZpbHRlci5zY2hlbWFVcmw7XHJcblx0XHQgICAgICAgIHJldHVybiBfdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgUmVsYXRpdmVEYXRlRmlsdGVyLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgICAgIHZhciBmaWx0ZXIgPSBfc3VwZXIucHJvdG90eXBlLnRvSlNPTi5jYWxsKHRoaXMpO1xyXG5cdFx0ICAgICAgICBmaWx0ZXIub3BlcmF0b3IgPSB0aGlzLm9wZXJhdG9yO1xyXG5cdFx0ICAgICAgICBmaWx0ZXIudGltZVVuaXRzQ291bnQgPSB0aGlzLnRpbWVVbml0c0NvdW50O1xyXG5cdFx0ICAgICAgICBmaWx0ZXIudGltZVVuaXRUeXBlID0gdGhpcy50aW1lVW5pdFR5cGU7XHJcblx0XHQgICAgICAgIGZpbHRlci5pbmNsdWRlVG9kYXkgPSB0aGlzLmluY2x1ZGVUb2RheTtcclxuXHRcdCAgICAgICAgcmV0dXJuIGZpbHRlcjtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIFJlbGF0aXZlRGF0ZUZpbHRlci5zY2hlbWFVcmwgPSBcImh0dHA6Ly9wb3dlcmJpLmNvbS9wcm9kdWN0L3NjaGVtYSNyZWxhdGl2ZURhdGVcIjtcclxuXHRcdCAgICByZXR1cm4gUmVsYXRpdmVEYXRlRmlsdGVyO1xyXG5cdFx0fShGaWx0ZXIpKTtcclxuXHRcdGV4cG9ydHMuUmVsYXRpdmVEYXRlRmlsdGVyID0gUmVsYXRpdmVEYXRlRmlsdGVyO1xyXG5cdFx0dmFyIEJhc2ljRmlsdGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhCYXNpY0ZpbHRlciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBCYXNpY0ZpbHRlcih0YXJnZXQsIG9wZXJhdG9yKSB7XHJcblx0XHQgICAgICAgIHZhciB2YWx1ZXMgPSBbXTtcclxuXHRcdCAgICAgICAgZm9yICh2YXIgX2kgPSAyOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuXHRcdCAgICAgICAgICAgIHZhbHVlc1tfaSAtIDJdID0gYXJndW1lbnRzW19pXTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB0YXJnZXQsIEZpbHRlclR5cGUuQmFzaWMpIHx8IHRoaXM7XHJcblx0XHQgICAgICAgIF90aGlzLm9wZXJhdG9yID0gb3BlcmF0b3I7XHJcblx0XHQgICAgICAgIF90aGlzLnNjaGVtYVVybCA9IEJhc2ljRmlsdGVyLnNjaGVtYVVybDtcclxuXHRcdCAgICAgICAgaWYgKHZhbHVlcy5sZW5ndGggPT09IDAgJiYgb3BlcmF0b3IgIT09IFwiQWxsXCIpIHtcclxuXHRcdCAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInZhbHVlcyBtdXN0IGJlIGEgbm9uLWVtcHR5IGFycmF5IHVubGVzcyB5b3VyIG9wZXJhdG9yIGlzIFxcXCJBbGxcXFwiLlwiKTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICAvKipcclxuXHRcdCAgICAgICAgICogQWNjZXB0IHZhbHVlcyBhcyBhcnJheSBpbnN0ZWFkIG9mIGFzIGluZGl2aWR1YWwgYXJndW1lbnRzXHJcblx0XHQgICAgICAgICAqIG5ldyBCYXNpY0ZpbHRlcignYScsICdiJywgMSwgMik7XHJcblx0XHQgICAgICAgICAqIG5ldyBCYXNpY0ZpbHRlcignYScsICdiJywgWzEsMl0pO1xyXG5cdFx0ICAgICAgICAgKi9cclxuXHRcdCAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzWzBdKSkge1xyXG5cdFx0ICAgICAgICAgICAgX3RoaXMudmFsdWVzID0gdmFsdWVzWzBdO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIGVsc2Uge1xyXG5cdFx0ICAgICAgICAgICAgX3RoaXMudmFsdWVzID0gdmFsdWVzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHJldHVybiBfdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgQmFzaWNGaWx0ZXIucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICAgICAgdmFyIGZpbHRlciA9IF9zdXBlci5wcm90b3R5cGUudG9KU09OLmNhbGwodGhpcyk7XHJcblx0XHQgICAgICAgIGZpbHRlci5vcGVyYXRvciA9IHRoaXMub3BlcmF0b3I7XHJcblx0XHQgICAgICAgIGZpbHRlci52YWx1ZXMgPSB0aGlzLnZhbHVlcztcclxuXHRcdCAgICAgICAgcmV0dXJuIGZpbHRlcjtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIEJhc2ljRmlsdGVyLnNjaGVtYVVybCA9IFwiaHR0cDovL3Bvd2VyYmkuY29tL3Byb2R1Y3Qvc2NoZW1hI2Jhc2ljXCI7XHJcblx0XHQgICAgcmV0dXJuIEJhc2ljRmlsdGVyO1xyXG5cdFx0fShGaWx0ZXIpKTtcclxuXHRcdGV4cG9ydHMuQmFzaWNGaWx0ZXIgPSBCYXNpY0ZpbHRlcjtcclxuXHRcdHZhciBCYXNpY0ZpbHRlcldpdGhLZXlzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhCYXNpY0ZpbHRlcldpdGhLZXlzLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEJhc2ljRmlsdGVyV2l0aEtleXModGFyZ2V0LCBvcGVyYXRvciwgdmFsdWVzLCBrZXlWYWx1ZXMpIHtcclxuXHRcdCAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgdGFyZ2V0LCBvcGVyYXRvciwgdmFsdWVzKSB8fCB0aGlzO1xyXG5cdFx0ICAgICAgICBfdGhpcy5rZXlWYWx1ZXMgPSBrZXlWYWx1ZXM7XHJcblx0XHQgICAgICAgIF90aGlzLnRhcmdldCA9IHRhcmdldDtcclxuXHRcdCAgICAgICAgdmFyIG51bWJlck9mS2V5cyA9IHRhcmdldC5rZXlzID8gdGFyZ2V0LmtleXMubGVuZ3RoIDogMDtcclxuXHRcdCAgICAgICAgaWYgKG51bWJlck9mS2V5cyA+IDAgJiYgIWtleVZhbHVlcykge1xyXG5cdFx0ICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IHNob3VsZCBwYXNzIHRoZSB2YWx1ZXMgdG8gYmUgZmlsdGVyZWQgZm9yIGVhY2gga2V5LiBZb3UgcGFzc2VkOiBubyB2YWx1ZXMgYW5kIFwiICsgbnVtYmVyT2ZLZXlzICsgXCIga2V5c1wiKTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICBpZiAobnVtYmVyT2ZLZXlzID09PSAwICYmIGtleVZhbHVlcyAmJiBrZXlWYWx1ZXMubGVuZ3RoID4gMCkge1xyXG5cdFx0ICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IHBhc3NlZCBrZXkgdmFsdWVzIGJ1dCB5b3VyIHRhcmdldCBvYmplY3QgZG9lc24ndCBjb250YWluIHRoZSBrZXlzIHRvIGJlIGZpbHRlcmVkXCIpO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3RoaXMua2V5VmFsdWVzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHQgICAgICAgICAgICBpZiAoX3RoaXMua2V5VmFsdWVzW2ldKSB7XHJcblx0XHQgICAgICAgICAgICAgICAgdmFyIGxlbmd0aE9mQXJyYXkgPSBfdGhpcy5rZXlWYWx1ZXNbaV0ubGVuZ3RoO1xyXG5cdFx0ICAgICAgICAgICAgICAgIGlmIChsZW5ndGhPZkFycmF5ICE9PSBudW1iZXJPZktleXMpIHtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRWFjaCB0dXBsZSBvZiBrZXkgdmFsdWVzIHNob3VsZCBjb250YWluIGEgdmFsdWUgZm9yIGVhY2ggb2YgdGhlIGtleXMuIFlvdSBwYXNzZWQ6IFwiICsgbGVuZ3RoT2ZBcnJheSArIFwiIHZhbHVlcyBhbmQgXCIgKyBudW1iZXJPZktleXMgKyBcIiBrZXlzXCIpO1xyXG5cdFx0ICAgICAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICByZXR1cm4gX3RoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIEJhc2ljRmlsdGVyV2l0aEtleXMucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICAgICAgdmFyIGZpbHRlciA9IF9zdXBlci5wcm90b3R5cGUudG9KU09OLmNhbGwodGhpcyk7XHJcblx0XHQgICAgICAgIGZpbHRlci5rZXlWYWx1ZXMgPSB0aGlzLmtleVZhbHVlcztcclxuXHRcdCAgICAgICAgcmV0dXJuIGZpbHRlcjtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBCYXNpY0ZpbHRlcldpdGhLZXlzO1xyXG5cdFx0fShCYXNpY0ZpbHRlcikpO1xyXG5cdFx0ZXhwb3J0cy5CYXNpY0ZpbHRlcldpdGhLZXlzID0gQmFzaWNGaWx0ZXJXaXRoS2V5cztcclxuXHRcdHZhciBUdXBsZUZpbHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoVHVwbGVGaWx0ZXIsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gVHVwbGVGaWx0ZXIodGFyZ2V0LCBvcGVyYXRvciwgdmFsdWVzKSB7XHJcblx0XHQgICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHRhcmdldCwgRmlsdGVyVHlwZS5UdXBsZSkgfHwgdGhpcztcclxuXHRcdCAgICAgICAgX3RoaXMub3BlcmF0b3IgPSBvcGVyYXRvcjtcclxuXHRcdCAgICAgICAgX3RoaXMuc2NoZW1hVXJsID0gVHVwbGVGaWx0ZXIuc2NoZW1hVXJsO1xyXG5cdFx0ICAgICAgICBfdGhpcy52YWx1ZXMgPSB2YWx1ZXM7XHJcblx0XHQgICAgICAgIHJldHVybiBfdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgVHVwbGVGaWx0ZXIucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICAgICAgdmFyIGZpbHRlciA9IF9zdXBlci5wcm90b3R5cGUudG9KU09OLmNhbGwodGhpcyk7XHJcblx0XHQgICAgICAgIGZpbHRlci5vcGVyYXRvciA9IHRoaXMub3BlcmF0b3I7XHJcblx0XHQgICAgICAgIGZpbHRlci52YWx1ZXMgPSB0aGlzLnZhbHVlcztcclxuXHRcdCAgICAgICAgZmlsdGVyLnRhcmdldCA9IHRoaXMudGFyZ2V0O1xyXG5cdFx0ICAgICAgICByZXR1cm4gZmlsdGVyO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgVHVwbGVGaWx0ZXIuc2NoZW1hVXJsID0gXCJodHRwOi8vcG93ZXJiaS5jb20vcHJvZHVjdC9zY2hlbWEjdHVwbGVcIjtcclxuXHRcdCAgICByZXR1cm4gVHVwbGVGaWx0ZXI7XHJcblx0XHR9KEZpbHRlcikpO1xyXG5cdFx0ZXhwb3J0cy5UdXBsZUZpbHRlciA9IFR1cGxlRmlsdGVyO1xyXG5cdFx0dmFyIEFkdmFuY2VkRmlsdGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhBZHZhbmNlZEZpbHRlciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBBZHZhbmNlZEZpbHRlcih0YXJnZXQsIGxvZ2ljYWxPcGVyYXRvcikge1xyXG5cdFx0ICAgICAgICB2YXIgY29uZGl0aW9ucyA9IFtdO1xyXG5cdFx0ICAgICAgICBmb3IgKHZhciBfaSA9IDI7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG5cdFx0ICAgICAgICAgICAgY29uZGl0aW9uc1tfaSAtIDJdID0gYXJndW1lbnRzW19pXTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB0YXJnZXQsIEZpbHRlclR5cGUuQWR2YW5jZWQpIHx8IHRoaXM7XHJcblx0XHQgICAgICAgIF90aGlzLnNjaGVtYVVybCA9IEFkdmFuY2VkRmlsdGVyLnNjaGVtYVVybDtcclxuXHRcdCAgICAgICAgLy8gR3VhcmQgc3RhdGVtZW50c1xyXG5cdFx0ICAgICAgICBpZiAodHlwZW9mIGxvZ2ljYWxPcGVyYXRvciAhPT0gXCJzdHJpbmdcIiB8fCBsb2dpY2FsT3BlcmF0b3IubGVuZ3RoID09PSAwKSB7XHJcblx0XHQgICAgICAgICAgICAvLyBUT0RPOiBJdCB3b3VsZCBiZSBuaWNlciB0byBsaXN0IG91dCB0aGUgcG9zc2libGUgbG9naWNhbCBvcGVyYXRvcnMuXHJcblx0XHQgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJsb2dpY2FsT3BlcmF0b3IgbXVzdCBiZSBhIHZhbGlkIG9wZXJhdG9yLCBZb3UgcGFzc2VkOiBcIiArIGxvZ2ljYWxPcGVyYXRvcik7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgX3RoaXMubG9naWNhbE9wZXJhdG9yID0gbG9naWNhbE9wZXJhdG9yO1xyXG5cdFx0ICAgICAgICB2YXIgZXh0cmFjdGVkQ29uZGl0aW9ucztcclxuXHRcdCAgICAgICAgLyoqXHJcblx0XHQgICAgICAgICAqIEFjY2VwdCBjb25kaXRpb25zIGFzIGFycmF5IGluc3RlYWQgb2YgYXMgaW5kaXZpZHVhbCBhcmd1bWVudHNcclxuXHRcdCAgICAgICAgICogbmV3IEFkdmFuY2VkRmlsdGVyKCdhJywgJ2InLCBcIkFuZFwiLCB7IHZhbHVlOiAxLCBvcGVyYXRvcjogXCJFcXVhbHNcIiB9LCB7IHZhbHVlOiAyLCBvcGVyYXRvcjogXCJJc0dyZWF0ZXJUaGFuXCIgfSk7XHJcblx0XHQgICAgICAgICAqIG5ldyBBZHZhbmNlZEZpbHRlcignYScsICdiJywgXCJBbmRcIiwgW3sgdmFsdWU6IDEsIG9wZXJhdG9yOiBcIkVxdWFsc1wiIH0sIHsgdmFsdWU6IDIsIG9wZXJhdG9yOiBcIklzR3JlYXRlclRoYW5cIiB9XSk7XHJcblx0XHQgICAgICAgICAqL1xyXG5cdFx0ICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjb25kaXRpb25zWzBdKSkge1xyXG5cdFx0ICAgICAgICAgICAgZXh0cmFjdGVkQ29uZGl0aW9ucyA9IGNvbmRpdGlvbnNbMF07XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgZWxzZSB7XHJcblx0XHQgICAgICAgICAgICBleHRyYWN0ZWRDb25kaXRpb25zID0gY29uZGl0aW9ucztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICBpZiAoZXh0cmFjdGVkQ29uZGl0aW9ucy5sZW5ndGggPT09IDApIHtcclxuXHRcdCAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImNvbmRpdGlvbnMgbXVzdCBiZSBhIG5vbi1lbXB0eSBhcnJheS4gWW91IHBhc3NlZDogXCIgKyBjb25kaXRpb25zKTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICBpZiAoZXh0cmFjdGVkQ29uZGl0aW9ucy5sZW5ndGggPiAyKSB7XHJcblx0XHQgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBZHZhbmNlZEZpbHRlcnMgbWF5IG5vdCBoYXZlIG1vcmUgdGhhbiB0d28gY29uZGl0aW9ucy4gWW91IHBhc3NlZDogXCIgKyBjb25kaXRpb25zLmxlbmd0aCk7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgaWYgKGV4dHJhY3RlZENvbmRpdGlvbnMubGVuZ3RoID09PSAxICYmIGxvZ2ljYWxPcGVyYXRvciAhPT0gXCJBbmRcIikge1xyXG5cdFx0ICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTG9naWNhbCBPcGVyYXRvciBtdXN0IGJlIFxcXCJBbmRcXFwiIHdoZW4gdGhlcmUgaXMgb25seSBvbmUgY29uZGl0aW9uIHByb3ZpZGVkXCIpO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIF90aGlzLmNvbmRpdGlvbnMgPSBleHRyYWN0ZWRDb25kaXRpb25zO1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3RoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIEFkdmFuY2VkRmlsdGVyLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgICAgIHZhciBmaWx0ZXIgPSBfc3VwZXIucHJvdG90eXBlLnRvSlNPTi5jYWxsKHRoaXMpO1xyXG5cdFx0ICAgICAgICBmaWx0ZXIubG9naWNhbE9wZXJhdG9yID0gdGhpcy5sb2dpY2FsT3BlcmF0b3I7XHJcblx0XHQgICAgICAgIGZpbHRlci5jb25kaXRpb25zID0gdGhpcy5jb25kaXRpb25zO1xyXG5cdFx0ICAgICAgICByZXR1cm4gZmlsdGVyO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgQWR2YW5jZWRGaWx0ZXIuc2NoZW1hVXJsID0gXCJodHRwOi8vcG93ZXJiaS5jb20vcHJvZHVjdC9zY2hlbWEjYWR2YW5jZWRcIjtcclxuXHRcdCAgICByZXR1cm4gQWR2YW5jZWRGaWx0ZXI7XHJcblx0XHR9KEZpbHRlcikpO1xyXG5cdFx0ZXhwb3J0cy5BZHZhbmNlZEZpbHRlciA9IEFkdmFuY2VkRmlsdGVyO1xyXG5cdFx0ZnVuY3Rpb24gaXNGaWx0ZXJLZXlDb2x1bW5zVGFyZ2V0KHRhcmdldCkge1xyXG5cdFx0ICAgIHJldHVybiBpc0NvbHVtbih0YXJnZXQpICYmICEhdGFyZ2V0LmtleXM7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLmlzRmlsdGVyS2V5Q29sdW1uc1RhcmdldCA9IGlzRmlsdGVyS2V5Q29sdW1uc1RhcmdldDtcclxuXHRcdGZ1bmN0aW9uIGlzQmFzaWNGaWx0ZXJXaXRoS2V5cyhmaWx0ZXIpIHtcclxuXHRcdCAgICByZXR1cm4gZ2V0RmlsdGVyVHlwZShmaWx0ZXIpID09PSBGaWx0ZXJUeXBlLkJhc2ljICYmICEhZmlsdGVyLmtleVZhbHVlcztcclxuXHRcdH1cclxuXHRcdGV4cG9ydHMuaXNCYXNpY0ZpbHRlcldpdGhLZXlzID0gaXNCYXNpY0ZpbHRlcldpdGhLZXlzO1xyXG5cdFx0ZnVuY3Rpb24gZ2V0RmlsdGVyVHlwZShmaWx0ZXIpIHtcclxuXHRcdCAgICBpZiAoZmlsdGVyLmZpbHRlclR5cGUpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIGZpbHRlci5maWx0ZXJUeXBlO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICB2YXIgYmFzaWNGaWx0ZXIgPSBmaWx0ZXI7XHJcblx0XHQgICAgdmFyIGFkdmFuY2VkRmlsdGVyID0gZmlsdGVyO1xyXG5cdFx0ICAgIGlmICgodHlwZW9mIGJhc2ljRmlsdGVyLm9wZXJhdG9yID09PSBcInN0cmluZ1wiKVxyXG5cdFx0ICAgICAgICAmJiAoQXJyYXkuaXNBcnJheShiYXNpY0ZpbHRlci52YWx1ZXMpKSkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gRmlsdGVyVHlwZS5CYXNpYztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgZWxzZSBpZiAoKHR5cGVvZiBhZHZhbmNlZEZpbHRlci5sb2dpY2FsT3BlcmF0b3IgPT09IFwic3RyaW5nXCIpXHJcblx0XHQgICAgICAgICYmIChBcnJheS5pc0FycmF5KGFkdmFuY2VkRmlsdGVyLmNvbmRpdGlvbnMpKSkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gRmlsdGVyVHlwZS5BZHZhbmNlZDtcclxuXHRcdCAgICB9XHJcblx0XHQgICAgZWxzZSB7XHJcblx0XHQgICAgICAgIHJldHVybiBGaWx0ZXJUeXBlLlVua25vd247XHJcblx0XHQgICAgfVxyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy5nZXRGaWx0ZXJUeXBlID0gZ2V0RmlsdGVyVHlwZTtcclxuXHRcdGZ1bmN0aW9uIGlzTWVhc3VyZShhcmcpIHtcclxuXHRcdCAgICByZXR1cm4gYXJnLnRhYmxlICE9PSB1bmRlZmluZWQgJiYgYXJnLm1lYXN1cmUgIT09IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHRcdGV4cG9ydHMuaXNNZWFzdXJlID0gaXNNZWFzdXJlO1xyXG5cdFx0ZnVuY3Rpb24gaXNDb2x1bW4oYXJnKSB7XHJcblx0XHQgICAgcmV0dXJuICEhKGFyZy50YWJsZSAmJiBhcmcuY29sdW1uICYmICFhcmcuYWdncmVnYXRpb25GdW5jdGlvbik7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLmlzQ29sdW1uID0gaXNDb2x1bW47XHJcblx0XHRmdW5jdGlvbiBpc0hpZXJhcmNoeUxldmVsKGFyZykge1xyXG5cdFx0ICAgIHJldHVybiAhIShhcmcudGFibGUgJiYgYXJnLmhpZXJhcmNoeSAmJiBhcmcuaGllcmFyY2h5TGV2ZWwgJiYgIWFyZy5hZ2dyZWdhdGlvbkZ1bmN0aW9uKTtcclxuXHRcdH1cclxuXHRcdGV4cG9ydHMuaXNIaWVyYXJjaHlMZXZlbCA9IGlzSGllcmFyY2h5TGV2ZWw7XHJcblx0XHRmdW5jdGlvbiBpc0hpZXJhcmNoeUxldmVsQWdncihhcmcpIHtcclxuXHRcdCAgICByZXR1cm4gISEoYXJnLnRhYmxlICYmIGFyZy5oaWVyYXJjaHkgJiYgYXJnLmhpZXJhcmNoeUxldmVsICYmIGFyZy5hZ2dyZWdhdGlvbkZ1bmN0aW9uKTtcclxuXHRcdH1cclxuXHRcdGV4cG9ydHMuaXNIaWVyYXJjaHlMZXZlbEFnZ3IgPSBpc0hpZXJhcmNoeUxldmVsQWdncjtcclxuXHRcdGZ1bmN0aW9uIGlzQ29sdW1uQWdncihhcmcpIHtcclxuXHRcdCAgICByZXR1cm4gISEoYXJnLnRhYmxlICYmIGFyZy5jb2x1bW4gJiYgYXJnLmFnZ3JlZ2F0aW9uRnVuY3Rpb24pO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy5pc0NvbHVtbkFnZ3IgPSBpc0NvbHVtbkFnZ3I7XHJcblx0XHR2YXIgUW5hTW9kZTtcclxuXHRcdChmdW5jdGlvbiAoUW5hTW9kZSkge1xyXG5cdFx0ICAgIFFuYU1vZGVbUW5hTW9kZVtcIkludGVyYWN0aXZlXCJdID0gMF0gPSBcIkludGVyYWN0aXZlXCI7XHJcblx0XHQgICAgUW5hTW9kZVtRbmFNb2RlW1wiUmVzdWx0T25seVwiXSA9IDFdID0gXCJSZXN1bHRPbmx5XCI7XHJcblx0XHR9KShRbmFNb2RlID0gZXhwb3J0cy5RbmFNb2RlIHx8IChleHBvcnRzLlFuYU1vZGUgPSB7fSkpO1xyXG5cdFx0dmFyIEV4cG9ydERhdGFUeXBlO1xyXG5cdFx0KGZ1bmN0aW9uIChFeHBvcnREYXRhVHlwZSkge1xyXG5cdFx0ICAgIEV4cG9ydERhdGFUeXBlW0V4cG9ydERhdGFUeXBlW1wiU3VtbWFyaXplZFwiXSA9IDBdID0gXCJTdW1tYXJpemVkXCI7XHJcblx0XHQgICAgRXhwb3J0RGF0YVR5cGVbRXhwb3J0RGF0YVR5cGVbXCJVbmRlcmx5aW5nXCJdID0gMV0gPSBcIlVuZGVybHlpbmdcIjtcclxuXHRcdH0pKEV4cG9ydERhdGFUeXBlID0gZXhwb3J0cy5FeHBvcnREYXRhVHlwZSB8fCAoZXhwb3J0cy5FeHBvcnREYXRhVHlwZSA9IHt9KSk7XHJcblx0XHR2YXIgQm9va21hcmtzUGxheU1vZGU7XHJcblx0XHQoZnVuY3Rpb24gKEJvb2ttYXJrc1BsYXlNb2RlKSB7XHJcblx0XHQgICAgQm9va21hcmtzUGxheU1vZGVbQm9va21hcmtzUGxheU1vZGVbXCJPZmZcIl0gPSAwXSA9IFwiT2ZmXCI7XHJcblx0XHQgICAgQm9va21hcmtzUGxheU1vZGVbQm9va21hcmtzUGxheU1vZGVbXCJQcmVzZW50YXRpb25cIl0gPSAxXSA9IFwiUHJlc2VudGF0aW9uXCI7XHJcblx0XHR9KShCb29rbWFya3NQbGF5TW9kZSA9IGV4cG9ydHMuQm9va21hcmtzUGxheU1vZGUgfHwgKGV4cG9ydHMuQm9va21hcmtzUGxheU1vZGUgPSB7fSkpO1xyXG5cdFx0Ly8gVGhpcyBpcyBub3QgYW4gZW51bSBiZWNhdXNlIGVudW0gc3RyaW5ncyByZXF1aXJlXHJcblx0XHQvLyB1cyB0byB1cGdyYWRlIHR5cGVTY3JpcHQgdmVyc2lvbiBhbmQgY2hhbmdlIFNESyBidWlsZCBkZWZpbml0aW9uXHJcblx0XHRleHBvcnRzLkNvbW1vbkVycm9yQ29kZXMgPSB7XHJcblx0XHQgICAgVG9rZW5FeHBpcmVkOiAnVG9rZW5FeHBpcmVkJyxcclxuXHRcdCAgICBOb3RGb3VuZDogJ1Bvd2VyQklFbnRpdHlOb3RGb3VuZCcsXHJcblx0XHQgICAgSW52YWxpZFBhcmFtZXRlcnM6ICdJbnZhbGlkIHBhcmFtZXRlcnMnLFxyXG5cdFx0ICAgIExvYWRSZXBvcnRGYWlsZWQ6ICdMb2FkUmVwb3J0RmFpbGVkJyxcclxuXHRcdCAgICBOb3RBdXRob3JpemVkOiAnUG93ZXJCSU5vdEF1dGhvcml6ZWRFeGNlcHRpb24nLFxyXG5cdFx0ICAgIEZhaWxlZFRvTG9hZE1vZGVsOiAnRXhwbG9yYXRpb25Db250YWluZXJfRmFpbGVkVG9Mb2FkTW9kZWxfRGVmYXVsdERldGFpbHMnLFxyXG5cdFx0fTtcclxuXHRcdGV4cG9ydHMuVGV4dEFsaWdubWVudCA9IHtcclxuXHRcdCAgICBMZWZ0OiAnbGVmdCcsXHJcblx0XHQgICAgQ2VudGVyOiAnY2VudGVyJyxcclxuXHRcdCAgICBSaWdodDogJ3JpZ2h0JyxcclxuXHRcdH07XHJcblx0XHRleHBvcnRzLkxlZ2VuZFBvc2l0aW9uID0ge1xyXG5cdFx0ICAgIFRvcDogJ1RvcCcsXHJcblx0XHQgICAgQm90dG9tOiAnQm90dG9tJyxcclxuXHRcdCAgICBSaWdodDogJ1JpZ2h0JyxcclxuXHRcdCAgICBMZWZ0OiAnTGVmdCcsXHJcblx0XHQgICAgVG9wQ2VudGVyOiAnVG9wQ2VudGVyJyxcclxuXHRcdCAgICBCb3R0b21DZW50ZXI6ICdCb3R0b21DZW50ZXInLFxyXG5cdFx0ICAgIFJpZ2h0Q2VudGVyOiAnUmlnaHRDZW50ZXInLFxyXG5cdFx0ICAgIExlZnRDZW50ZXI6ICdMZWZ0Q2VudGVyJyxcclxuXHRcdH07XHJcblx0XHR2YXIgU29ydERpcmVjdGlvbjtcclxuXHRcdChmdW5jdGlvbiAoU29ydERpcmVjdGlvbikge1xyXG5cdFx0ICAgIFNvcnREaXJlY3Rpb25bU29ydERpcmVjdGlvbltcIkFzY2VuZGluZ1wiXSA9IDFdID0gXCJBc2NlbmRpbmdcIjtcclxuXHRcdCAgICBTb3J0RGlyZWN0aW9uW1NvcnREaXJlY3Rpb25bXCJEZXNjZW5kaW5nXCJdID0gMl0gPSBcIkRlc2NlbmRpbmdcIjtcclxuXHRcdH0pKFNvcnREaXJlY3Rpb24gPSBleHBvcnRzLlNvcnREaXJlY3Rpb24gfHwgKGV4cG9ydHMuU29ydERpcmVjdGlvbiA9IHt9KSk7XHJcblx0XHR2YXIgU2VsZWN0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgZnVuY3Rpb24gU2VsZWN0b3Ioc2NoZW1hKSB7XHJcblx0XHQgICAgICAgIHRoaXMuJHNjaGVtYSA9IHNjaGVtYTtcclxuXHRcdCAgICB9XHJcblx0XHQgICAgU2VsZWN0b3IucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIHtcclxuXHRcdCAgICAgICAgICAgICRzY2hlbWE6IHRoaXMuJHNjaGVtYVxyXG5cdFx0ICAgICAgICB9O1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgO1xyXG5cdFx0ICAgIHJldHVybiBTZWxlY3RvcjtcclxuXHRcdH0oKSk7XHJcblx0XHRleHBvcnRzLlNlbGVjdG9yID0gU2VsZWN0b3I7XHJcblx0XHR2YXIgUGFnZVNlbGVjdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhQYWdlU2VsZWN0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gUGFnZVNlbGVjdG9yKHBhZ2VOYW1lKSB7XHJcblx0XHQgICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIFBhZ2VTZWxlY3Rvci5zY2hlbWFVcmwpIHx8IHRoaXM7XHJcblx0XHQgICAgICAgIF90aGlzLnBhZ2VOYW1lID0gcGFnZU5hbWU7XHJcblx0XHQgICAgICAgIHJldHVybiBfdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgUGFnZVNlbGVjdG9yLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgICAgIHZhciBzZWxlY3RvciA9IF9zdXBlci5wcm90b3R5cGUudG9KU09OLmNhbGwodGhpcyk7XHJcblx0XHQgICAgICAgIHNlbGVjdG9yLnBhZ2VOYW1lID0gdGhpcy5wYWdlTmFtZTtcclxuXHRcdCAgICAgICAgcmV0dXJuIHNlbGVjdG9yO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgUGFnZVNlbGVjdG9yLnNjaGVtYVVybCA9IFwiaHR0cDovL3Bvd2VyYmkuY29tL3Byb2R1Y3Qvc2NoZW1hI3BhZ2VTZWxlY3RvclwiO1xyXG5cdFx0ICAgIHJldHVybiBQYWdlU2VsZWN0b3I7XHJcblx0XHR9KFNlbGVjdG9yKSk7XHJcblx0XHRleHBvcnRzLlBhZ2VTZWxlY3RvciA9IFBhZ2VTZWxlY3RvcjtcclxuXHRcdHZhciBWaXN1YWxTZWxlY3RvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoVmlzdWFsU2VsZWN0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gVmlzdWFsU2VsZWN0b3IodmlzdWFsTmFtZSkge1xyXG5cdFx0ICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBWaXN1YWxTZWxlY3Rvci5zY2hlbWFVcmwpIHx8IHRoaXM7XHJcblx0XHQgICAgICAgIF90aGlzLnZpc3VhbE5hbWUgPSB2aXN1YWxOYW1lO1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3RoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFZpc3VhbFNlbGVjdG9yLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgICAgIHZhciBzZWxlY3RvciA9IF9zdXBlci5wcm90b3R5cGUudG9KU09OLmNhbGwodGhpcyk7XHJcblx0XHQgICAgICAgIHNlbGVjdG9yLnZpc3VhbE5hbWUgPSB0aGlzLnZpc3VhbE5hbWU7XHJcblx0XHQgICAgICAgIHJldHVybiBzZWxlY3RvcjtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIFZpc3VhbFNlbGVjdG9yLnNjaGVtYVVybCA9IFwiaHR0cDovL3Bvd2VyYmkuY29tL3Byb2R1Y3Qvc2NoZW1hI3Zpc3VhbFNlbGVjdG9yXCI7XHJcblx0XHQgICAgcmV0dXJuIFZpc3VhbFNlbGVjdG9yO1xyXG5cdFx0fShTZWxlY3RvcikpO1xyXG5cdFx0ZXhwb3J0cy5WaXN1YWxTZWxlY3RvciA9IFZpc3VhbFNlbGVjdG9yO1xyXG5cdFx0dmFyIFZpc3VhbFR5cGVTZWxlY3RvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoVmlzdWFsVHlwZVNlbGVjdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFZpc3VhbFR5cGVTZWxlY3Rvcih2aXN1YWxUeXBlKSB7XHJcblx0XHQgICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIFZpc3VhbFNlbGVjdG9yLnNjaGVtYVVybCkgfHwgdGhpcztcclxuXHRcdCAgICAgICAgX3RoaXMudmlzdWFsVHlwZSA9IHZpc3VhbFR5cGU7XHJcblx0XHQgICAgICAgIHJldHVybiBfdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgVmlzdWFsVHlwZVNlbGVjdG9yLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgICAgIHZhciBzZWxlY3RvciA9IF9zdXBlci5wcm90b3R5cGUudG9KU09OLmNhbGwodGhpcyk7XHJcblx0XHQgICAgICAgIHNlbGVjdG9yLnZpc3VhbFR5cGUgPSB0aGlzLnZpc3VhbFR5cGU7XHJcblx0XHQgICAgICAgIHJldHVybiBzZWxlY3RvcjtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIFZpc3VhbFR5cGVTZWxlY3Rvci5zY2hlbWFVcmwgPSBcImh0dHA6Ly9wb3dlcmJpLmNvbS9wcm9kdWN0L3NjaGVtYSN2aXN1YWxUeXBlU2VsZWN0b3JcIjtcclxuXHRcdCAgICByZXR1cm4gVmlzdWFsVHlwZVNlbGVjdG9yO1xyXG5cdFx0fShTZWxlY3RvcikpO1xyXG5cdFx0ZXhwb3J0cy5WaXN1YWxUeXBlU2VsZWN0b3IgPSBWaXN1YWxUeXBlU2VsZWN0b3I7XHJcblx0XHR2YXIgU2xpY2VyVGFyZ2V0U2VsZWN0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFNsaWNlclRhcmdldFNlbGVjdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFNsaWNlclRhcmdldFNlbGVjdG9yKHRhcmdldCkge1xyXG5cdFx0ICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBWaXN1YWxTZWxlY3Rvci5zY2hlbWFVcmwpIHx8IHRoaXM7XHJcblx0XHQgICAgICAgIF90aGlzLnRhcmdldCA9IHRhcmdldDtcclxuXHRcdCAgICAgICAgcmV0dXJuIF90aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBTbGljZXJUYXJnZXRTZWxlY3Rvci5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgICAgICB2YXIgc2VsZWN0b3IgPSBfc3VwZXIucHJvdG90eXBlLnRvSlNPTi5jYWxsKHRoaXMpO1xyXG5cdFx0ICAgICAgICBzZWxlY3Rvci50YXJnZXQgPSB0aGlzLnRhcmdldDtcclxuXHRcdCAgICAgICAgcmV0dXJuIHNlbGVjdG9yO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgU2xpY2VyVGFyZ2V0U2VsZWN0b3Iuc2NoZW1hVXJsID0gXCJodHRwOi8vcG93ZXJiaS5jb20vcHJvZHVjdC9zY2hlbWEjc2xpY2VyVGFyZ2V0U2VsZWN0b3JcIjtcclxuXHRcdCAgICByZXR1cm4gU2xpY2VyVGFyZ2V0U2VsZWN0b3I7XHJcblx0XHR9KFNlbGVjdG9yKSk7XHJcblx0XHRleHBvcnRzLlNsaWNlclRhcmdldFNlbGVjdG9yID0gU2xpY2VyVGFyZ2V0U2VsZWN0b3I7XHJcblx0XHR2YXIgQ29tbWFuZERpc3BsYXlPcHRpb247XHJcblx0XHQoZnVuY3Rpb24gKENvbW1hbmREaXNwbGF5T3B0aW9uKSB7XHJcblx0XHQgICAgQ29tbWFuZERpc3BsYXlPcHRpb25bQ29tbWFuZERpc3BsYXlPcHRpb25bXCJFbmFibGVkXCJdID0gMF0gPSBcIkVuYWJsZWRcIjtcclxuXHRcdCAgICBDb21tYW5kRGlzcGxheU9wdGlvbltDb21tYW5kRGlzcGxheU9wdGlvbltcIkRpc2FibGVkXCJdID0gMV0gPSBcIkRpc2FibGVkXCI7XHJcblx0XHQgICAgQ29tbWFuZERpc3BsYXlPcHRpb25bQ29tbWFuZERpc3BsYXlPcHRpb25bXCJIaWRkZW5cIl0gPSAyXSA9IFwiSGlkZGVuXCI7XHJcblx0XHR9KShDb21tYW5kRGlzcGxheU9wdGlvbiA9IGV4cG9ydHMuQ29tbWFuZERpc3BsYXlPcHRpb24gfHwgKGV4cG9ydHMuQ29tbWFuZERpc3BsYXlPcHRpb24gPSB7fSkpO1xyXG5cdFx0LypcclxuXHRcdCAqIFZpc3VhbCBDUlVEXHJcblx0XHQgKi9cclxuXHRcdHZhciBWaXN1YWxEYXRhUm9sZUtpbmQ7XHJcblx0XHQoZnVuY3Rpb24gKFZpc3VhbERhdGFSb2xlS2luZCkge1xyXG5cdFx0ICAgIC8vIEluZGljYXRlcyB0aGF0IHRoZSByb2xlIHNob3VsZCBiZSBib3VuZCB0byBzb21ldGhpbmcgdGhhdCBldmFsdWF0ZXMgdG8gYSBncm91cGluZyBvZiB2YWx1ZXMuXHJcblx0XHQgICAgVmlzdWFsRGF0YVJvbGVLaW5kW1Zpc3VhbERhdGFSb2xlS2luZFtcIkdyb3VwaW5nXCJdID0gMF0gPSBcIkdyb3VwaW5nXCI7XHJcblx0XHQgICAgLy8gSW5kaWNhdGVzIHRoYXQgdGhlIHJvbGUgc2hvdWxkIGJlIGJvdW5kIHRvIHNvbWV0aGluZyB0aGF0IGV2YWx1YXRlcyB0byBhIHNpbmdsZSB2YWx1ZSBpbiBhIHNjb3BlLlxyXG5cdFx0ICAgIFZpc3VhbERhdGFSb2xlS2luZFtWaXN1YWxEYXRhUm9sZUtpbmRbXCJNZWFzdXJlXCJdID0gMV0gPSBcIk1lYXN1cmVcIjtcclxuXHRcdCAgICAvLyBJbmRpY2F0ZXMgdGhhdCB0aGUgcm9sZSBjYW4gYmUgYm91bmQgdG8gZWl0aGVyIEdyb3VwaW5nIG9yIE1lYXN1cmUuXHJcblx0XHQgICAgVmlzdWFsRGF0YVJvbGVLaW5kW1Zpc3VhbERhdGFSb2xlS2luZFtcIkdyb3VwaW5nT3JNZWFzdXJlXCJdID0gMl0gPSBcIkdyb3VwaW5nT3JNZWFzdXJlXCI7XHJcblx0XHR9KShWaXN1YWxEYXRhUm9sZUtpbmQgPSBleHBvcnRzLlZpc3VhbERhdGFSb2xlS2luZCB8fCAoZXhwb3J0cy5WaXN1YWxEYXRhUm9sZUtpbmQgPSB7fSkpO1xyXG5cdFx0Ly8gSW5kaWNhdGVzIHRoZSB2aXN1YWwgcHJlZmVyZW5jZSBvbiBHcm91cGluZyBvciBNZWFzdXJlLiBPbmx5IGFwcGxpY2FibGUgaWYga2luZCBpcyBHcm91cGluZ09yTWVhc3VyZS5cclxuXHRcdHZhciBWaXN1YWxEYXRhUm9sZUtpbmRQcmVmZXJlbmNlO1xyXG5cdFx0KGZ1bmN0aW9uIChWaXN1YWxEYXRhUm9sZUtpbmRQcmVmZXJlbmNlKSB7XHJcblx0XHQgICAgVmlzdWFsRGF0YVJvbGVLaW5kUHJlZmVyZW5jZVtWaXN1YWxEYXRhUm9sZUtpbmRQcmVmZXJlbmNlW1wiTWVhc3VyZVwiXSA9IDBdID0gXCJNZWFzdXJlXCI7XHJcblx0XHQgICAgVmlzdWFsRGF0YVJvbGVLaW5kUHJlZmVyZW5jZVtWaXN1YWxEYXRhUm9sZUtpbmRQcmVmZXJlbmNlW1wiR3JvdXBpbmdcIl0gPSAxXSA9IFwiR3JvdXBpbmdcIjtcclxuXHRcdH0pKFZpc3VhbERhdGFSb2xlS2luZFByZWZlcmVuY2UgPSBleHBvcnRzLlZpc3VhbERhdGFSb2xlS2luZFByZWZlcmVuY2UgfHwgKGV4cG9ydHMuVmlzdWFsRGF0YVJvbGVLaW5kUHJlZmVyZW5jZSA9IHt9KSk7XHJcblx0XHRmdW5jdGlvbiBub3JtYWxpemVFcnJvcihlcnJvcikge1xyXG5cdFx0ICAgIHZhciBtZXNzYWdlID0gZXJyb3IubWVzc2FnZTtcclxuXHRcdCAgICBpZiAoIW1lc3NhZ2UpIHtcclxuXHRcdCAgICAgICAgbWVzc2FnZSA9IGVycm9yLnBhdGggKyBcIiBpcyBpbnZhbGlkLiBOb3QgbWVldGluZyBcIiArIGVycm9yLmtleXdvcmQgKyBcIiBjb25zdHJhaW50XCI7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIHJldHVybiB7XHJcblx0XHQgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcclxuXHRcdCAgICB9O1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gdmFsaWRhdGVWaXN1YWxTZWxlY3RvcihpbnB1dCkge1xyXG5cdFx0ICAgIHZhciBlcnJvcnMgPSBleHBvcnRzLlZhbGlkYXRvcnMudmlzdWFsU2VsZWN0b3JWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQpO1xyXG5cdFx0ICAgIHJldHVybiBlcnJvcnMgPyBlcnJvcnMubWFwKG5vcm1hbGl6ZUVycm9yKSA6IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHRcdGV4cG9ydHMudmFsaWRhdGVWaXN1YWxTZWxlY3RvciA9IHZhbGlkYXRlVmlzdWFsU2VsZWN0b3I7XHJcblx0XHRmdW5jdGlvbiB2YWxpZGF0ZVNsaWNlcihpbnB1dCkge1xyXG5cdFx0ICAgIHZhciBlcnJvcnMgPSBleHBvcnRzLlZhbGlkYXRvcnMuc2xpY2VyVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0KTtcclxuXHRcdCAgICByZXR1cm4gZXJyb3JzID8gZXJyb3JzLm1hcChub3JtYWxpemVFcnJvcikgOiB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLnZhbGlkYXRlU2xpY2VyID0gdmFsaWRhdGVTbGljZXI7XHJcblx0XHRmdW5jdGlvbiB2YWxpZGF0ZVNsaWNlclN0YXRlKGlucHV0KSB7XHJcblx0XHQgICAgdmFyIGVycm9ycyA9IGV4cG9ydHMuVmFsaWRhdG9ycy5zbGljZXJTdGF0ZVZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZVNsaWNlclN0YXRlID0gdmFsaWRhdGVTbGljZXJTdGF0ZTtcclxuXHRcdGZ1bmN0aW9uIHZhbGlkYXRlUGxheUJvb2ttYXJrUmVxdWVzdChpbnB1dCkge1xyXG5cdFx0ICAgIHZhciBlcnJvcnMgPSBleHBvcnRzLlZhbGlkYXRvcnMucGxheUJvb2ttYXJrUmVxdWVzdFZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZVBsYXlCb29rbWFya1JlcXVlc3QgPSB2YWxpZGF0ZVBsYXlCb29rbWFya1JlcXVlc3Q7XHJcblx0XHRmdW5jdGlvbiB2YWxpZGF0ZUFkZEJvb2ttYXJrUmVxdWVzdChpbnB1dCkge1xyXG5cdFx0ICAgIHZhciBlcnJvcnMgPSBleHBvcnRzLlZhbGlkYXRvcnMuYWRkQm9va21hcmtSZXF1ZXN0VmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0KTtcclxuXHRcdCAgICByZXR1cm4gZXJyb3JzID8gZXJyb3JzLm1hcChub3JtYWxpemVFcnJvcikgOiB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLnZhbGlkYXRlQWRkQm9va21hcmtSZXF1ZXN0ID0gdmFsaWRhdGVBZGRCb29rbWFya1JlcXVlc3Q7XHJcblx0XHRmdW5jdGlvbiB2YWxpZGF0ZUFwcGx5Qm9va21hcmtCeU5hbWVSZXF1ZXN0KGlucHV0KSB7XHJcblx0XHQgICAgdmFyIGVycm9ycyA9IGV4cG9ydHMuVmFsaWRhdG9ycy5hcHBseUJvb2ttYXJrQnlOYW1lUmVxdWVzdFZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZUFwcGx5Qm9va21hcmtCeU5hbWVSZXF1ZXN0ID0gdmFsaWRhdGVBcHBseUJvb2ttYXJrQnlOYW1lUmVxdWVzdDtcclxuXHRcdGZ1bmN0aW9uIHZhbGlkYXRlQXBwbHlCb29rbWFya1N0YXRlUmVxdWVzdChpbnB1dCkge1xyXG5cdFx0ICAgIHZhciBlcnJvcnMgPSBleHBvcnRzLlZhbGlkYXRvcnMuYXBwbHlCb29rbWFya1N0YXRlUmVxdWVzdFZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZUFwcGx5Qm9va21hcmtTdGF0ZVJlcXVlc3QgPSB2YWxpZGF0ZUFwcGx5Qm9va21hcmtTdGF0ZVJlcXVlc3Q7XHJcblx0XHRmdW5jdGlvbiB2YWxpZGF0ZVNldHRpbmdzKGlucHV0KSB7XHJcblx0XHQgICAgdmFyIGVycm9ycyA9IGV4cG9ydHMuVmFsaWRhdG9ycy5zZXR0aW5nc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZVNldHRpbmdzID0gdmFsaWRhdGVTZXR0aW5ncztcclxuXHRcdGZ1bmN0aW9uIHZhbGlkYXRlQ3VzdG9tUGFnZVNpemUoaW5wdXQpIHtcclxuXHRcdCAgICB2YXIgZXJyb3JzID0gZXhwb3J0cy5WYWxpZGF0b3JzLmN1c3RvbVBhZ2VTaXplVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0KTtcclxuXHRcdCAgICByZXR1cm4gZXJyb3JzID8gZXJyb3JzLm1hcChub3JtYWxpemVFcnJvcikgOiB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLnZhbGlkYXRlQ3VzdG9tUGFnZVNpemUgPSB2YWxpZGF0ZUN1c3RvbVBhZ2VTaXplO1xyXG5cdFx0ZnVuY3Rpb24gdmFsaWRhdGVFeHRlbnNpb24oaW5wdXQpIHtcclxuXHRcdCAgICB2YXIgZXJyb3JzID0gZXhwb3J0cy5WYWxpZGF0b3JzLmV4dGVuc2lvblZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZUV4dGVuc2lvbiA9IHZhbGlkYXRlRXh0ZW5zaW9uO1xyXG5cdFx0ZnVuY3Rpb24gdmFsaWRhdGVSZXBvcnRMb2FkKGlucHV0KSB7XHJcblx0XHQgICAgdmFyIGVycm9ycyA9IGV4cG9ydHMuVmFsaWRhdG9ycy5yZXBvcnRMb2FkVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0KTtcclxuXHRcdCAgICByZXR1cm4gZXJyb3JzID8gZXJyb3JzLm1hcChub3JtYWxpemVFcnJvcikgOiB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLnZhbGlkYXRlUmVwb3J0TG9hZCA9IHZhbGlkYXRlUmVwb3J0TG9hZDtcclxuXHRcdGZ1bmN0aW9uIHZhbGlkYXRlQ3JlYXRlUmVwb3J0KGlucHV0KSB7XHJcblx0XHQgICAgdmFyIGVycm9ycyA9IGV4cG9ydHMuVmFsaWRhdG9ycy5yZXBvcnRDcmVhdGVWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQpO1xyXG5cdFx0ICAgIHJldHVybiBlcnJvcnMgPyBlcnJvcnMubWFwKG5vcm1hbGl6ZUVycm9yKSA6IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHRcdGV4cG9ydHMudmFsaWRhdGVDcmVhdGVSZXBvcnQgPSB2YWxpZGF0ZUNyZWF0ZVJlcG9ydDtcclxuXHRcdGZ1bmN0aW9uIHZhbGlkYXRlRGFzaGJvYXJkTG9hZChpbnB1dCkge1xyXG5cdFx0ICAgIHZhciBlcnJvcnMgPSBleHBvcnRzLlZhbGlkYXRvcnMuZGFzaGJvYXJkTG9hZFZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZURhc2hib2FyZExvYWQgPSB2YWxpZGF0ZURhc2hib2FyZExvYWQ7XHJcblx0XHRmdW5jdGlvbiB2YWxpZGF0ZVRpbGVMb2FkKGlucHV0KSB7XHJcblx0XHQgICAgdmFyIGVycm9ycyA9IGV4cG9ydHMuVmFsaWRhdG9ycy50aWxlTG9hZFZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZVRpbGVMb2FkID0gdmFsaWRhdGVUaWxlTG9hZDtcclxuXHRcdGZ1bmN0aW9uIHZhbGlkYXRlUGFnZShpbnB1dCkge1xyXG5cdFx0ICAgIHZhciBlcnJvcnMgPSBleHBvcnRzLlZhbGlkYXRvcnMucGFnZVZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZVBhZ2UgPSB2YWxpZGF0ZVBhZ2U7XHJcblx0XHRmdW5jdGlvbiB2YWxpZGF0ZUZpbHRlcihpbnB1dCkge1xyXG5cdFx0ICAgIHZhciBlcnJvcnMgPSBleHBvcnRzLlZhbGlkYXRvcnMuZmlsdGVyc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZUZpbHRlciA9IHZhbGlkYXRlRmlsdGVyO1xyXG5cdFx0ZnVuY3Rpb24gdmFsaWRhdGVTYXZlQXNQYXJhbWV0ZXJzKGlucHV0KSB7XHJcblx0XHQgICAgdmFyIGVycm9ycyA9IGV4cG9ydHMuVmFsaWRhdG9ycy5zYXZlQXNQYXJhbWV0ZXJzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0KTtcclxuXHRcdCAgICByZXR1cm4gZXJyb3JzID8gZXJyb3JzLm1hcChub3JtYWxpemVFcnJvcikgOiB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLnZhbGlkYXRlU2F2ZUFzUGFyYW1ldGVycyA9IHZhbGlkYXRlU2F2ZUFzUGFyYW1ldGVycztcclxuXHRcdGZ1bmN0aW9uIHZhbGlkYXRlTG9hZFFuYUNvbmZpZ3VyYXRpb24oaW5wdXQpIHtcclxuXHRcdCAgICB2YXIgZXJyb3JzID0gZXhwb3J0cy5WYWxpZGF0b3JzLmxvYWRRbmFWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQpO1xyXG5cdFx0ICAgIHJldHVybiBlcnJvcnMgPyBlcnJvcnMubWFwKG5vcm1hbGl6ZUVycm9yKSA6IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHRcdGV4cG9ydHMudmFsaWRhdGVMb2FkUW5hQ29uZmlndXJhdGlvbiA9IHZhbGlkYXRlTG9hZFFuYUNvbmZpZ3VyYXRpb247XHJcblx0XHRmdW5jdGlvbiB2YWxpZGF0ZVFuYUludGVycHJldElucHV0RGF0YShpbnB1dCkge1xyXG5cdFx0ICAgIHZhciBlcnJvcnMgPSBleHBvcnRzLlZhbGlkYXRvcnMucW5hSW50ZXJwcmV0SW5wdXREYXRhVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0KTtcclxuXHRcdCAgICByZXR1cm4gZXJyb3JzID8gZXJyb3JzLm1hcChub3JtYWxpemVFcnJvcikgOiB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLnZhbGlkYXRlUW5hSW50ZXJwcmV0SW5wdXREYXRhID0gdmFsaWRhdGVRbmFJbnRlcnByZXRJbnB1dERhdGE7XHJcblx0XHRmdW5jdGlvbiB2YWxpZGF0ZUV4cG9ydERhdGFSZXF1ZXN0KGlucHV0KSB7XHJcblx0XHQgICAgdmFyIGVycm9ycyA9IGV4cG9ydHMuVmFsaWRhdG9ycy5leHBvcnREYXRhUmVxdWVzdFZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCk7XHJcblx0XHQgICAgcmV0dXJuIGVycm9ycyA/IGVycm9ycy5tYXAobm9ybWFsaXplRXJyb3IpIDogdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0ZXhwb3J0cy52YWxpZGF0ZUV4cG9ydERhdGFSZXF1ZXN0ID0gdmFsaWRhdGVFeHBvcnREYXRhUmVxdWVzdDtcclxuXHRcdGZ1bmN0aW9uIHZhbGlkYXRlVmlzdWFsSGVhZGVyKGlucHV0KSB7XHJcblx0XHQgICAgdmFyIGVycm9ycyA9IGV4cG9ydHMuVmFsaWRhdG9ycy52aXN1YWxIZWFkZXJWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQpO1xyXG5cdFx0ICAgIHJldHVybiBlcnJvcnMgPyBlcnJvcnMubWFwKG5vcm1hbGl6ZUVycm9yKSA6IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHRcdGV4cG9ydHMudmFsaWRhdGVWaXN1YWxIZWFkZXIgPSB2YWxpZGF0ZVZpc3VhbEhlYWRlcjtcclxuXHRcdGZ1bmN0aW9uIHZhbGlkYXRlVmlzdWFsU2V0dGluZ3MoaW5wdXQpIHtcclxuXHRcdCAgICB2YXIgZXJyb3JzID0gZXhwb3J0cy5WYWxpZGF0b3JzLnZpc3VhbFNldHRpbmdzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0KTtcclxuXHRcdCAgICByZXR1cm4gZXJyb3JzID8gZXJyb3JzLm1hcChub3JtYWxpemVFcnJvcikgOiB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLnZhbGlkYXRlVmlzdWFsU2V0dGluZ3MgPSB2YWxpZGF0ZVZpc3VhbFNldHRpbmdzO1xyXG5cdFx0ZnVuY3Rpb24gdmFsaWRhdGVDb21tYW5kc1NldHRpbmdzKGlucHV0KSB7XHJcblx0XHQgICAgdmFyIGVycm9ycyA9IGV4cG9ydHMuVmFsaWRhdG9ycy5jb21tYW5kc1NldHRpbmdzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0KTtcclxuXHRcdCAgICByZXR1cm4gZXJyb3JzID8gZXJyb3JzLm1hcChub3JtYWxpemVFcnJvcikgOiB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLnZhbGlkYXRlQ29tbWFuZHNTZXR0aW5ncyA9IHZhbGlkYXRlQ29tbWFuZHNTZXR0aW5ncztcclxuXHRcdGZ1bmN0aW9uIHZhbGlkYXRlQ3VzdG9tVGhlbWUoaW5wdXQpIHtcclxuXHRcdCAgICB2YXIgZXJyb3JzID0gZXhwb3J0cy5WYWxpZGF0b3JzLmN1c3RvbVRoZW1lVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0KTtcclxuXHRcdCAgICByZXR1cm4gZXJyb3JzID8gZXJyb3JzLm1hcChub3JtYWxpemVFcnJvcikgOiB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblx0XHRleHBvcnRzLnZhbGlkYXRlQ3VzdG9tVGhlbWUgPSB2YWxpZGF0ZUN1c3RvbVRoZW1lO1xyXG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDEgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0XHR2YXIgdHlwZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRcdHZhciBleHRlbnNpb25zVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xyXG5cdFx0dmFyIHNldHRpbmdzVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xyXG5cdFx0dmFyIGJvb2ttYXJrVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYpO1xyXG5cdFx0dmFyIGZpbHRlcnNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNyk7XHJcblx0XHR2YXIgZmllbGRSZXF1aXJlZFZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcclxuXHRcdHZhciBhbnlPZlZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KTtcclxuXHRcdHZhciByZXBvcnRMb2FkVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKTtcclxuXHRcdHZhciByZXBvcnRDcmVhdGVWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTEpO1xyXG5cdFx0dmFyIGRhc2hib2FyZExvYWRWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTIpO1xyXG5cdFx0dmFyIHRpbGVMb2FkVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKTtcclxuXHRcdHZhciBwYWdlVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE0KTtcclxuXHRcdHZhciBxbmFWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTUpO1xyXG5cdFx0dmFyIHNhdmVBc1BhcmFtZXRlcnNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTYpO1xyXG5cdFx0dmFyIG1hcFZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNyk7XHJcblx0XHR2YXIgbGF5b3V0VmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE4KTtcclxuXHRcdHZhciBleHBvcnREYXRhVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE5KTtcclxuXHRcdHZhciBzZWxlY3RvcnNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMjApO1xyXG5cdFx0dmFyIHNsaWNlcnNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMjEpO1xyXG5cdFx0dmFyIHZpc3VhbFNldHRpbmdzVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIyKTtcclxuXHRcdHZhciBjb21tYW5kc1NldHRpbmdzVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIzKTtcclxuXHRcdHZhciBjdXN0b21UaGVtZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNCk7XHJcblx0XHRleHBvcnRzLlZhbGlkYXRvcnMgPSB7XHJcblx0XHQgICAgYWRkQm9va21hcmtSZXF1ZXN0VmFsaWRhdG9yOiBuZXcgYm9va21hcmtWYWxpZGF0b3JfMS5BZGRCb29rbWFya1JlcXVlc3RWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBhZHZhbmNlZEZpbHRlclR5cGVWYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuRW51bVZhbGlkYXRvcihbMF0pLFxyXG5cdFx0ICAgIGFkdmFuY2VkRmlsdGVyVmFsaWRhdG9yOiBuZXcgZmlsdGVyc1ZhbGlkYXRvcl8xLkFkdmFuY2VkRmlsdGVyVmFsaWRhdG9yKCksXHJcblx0XHQgICAgYW55QXJyYXlWYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuQXJyYXlWYWxpZGF0b3IoW25ldyBhbnlPZlZhbGlkYXRvcl8xLkFueU9mVmFsaWRhdG9yKFtuZXcgdHlwZVZhbGlkYXRvcl8xLlN0cmluZ1ZhbGlkYXRvcigpLCBuZXcgdHlwZVZhbGlkYXRvcl8xLk51bWJlclZhbGlkYXRvcigpLCBuZXcgdHlwZVZhbGlkYXRvcl8xLkJvb2xlYW5WYWxpZGF0b3IoKV0pXSksXHJcblx0XHQgICAgYW55RmlsdGVyVmFsaWRhdG9yOiBuZXcgYW55T2ZWYWxpZGF0b3JfMS5BbnlPZlZhbGlkYXRvcihbbmV3IGZpbHRlcnNWYWxpZGF0b3JfMS5CYXNpY0ZpbHRlclZhbGlkYXRvcigpLCBuZXcgZmlsdGVyc1ZhbGlkYXRvcl8xLkFkdmFuY2VkRmlsdGVyVmFsaWRhdG9yKCksIG5ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuSW5jbHVkZUV4Y2x1ZGVGaWx0ZXJWYWxpZGF0b3IoKSwgbmV3IGZpbHRlcnNWYWxpZGF0b3JfMS5Ob3RTdXBwb3J0ZWRGaWx0ZXJWYWxpZGF0b3IoKSwgbmV3IGZpbHRlcnNWYWxpZGF0b3JfMS5SZWxhdGl2ZURhdGVGaWx0ZXJWYWxpZGF0b3IoKSwgbmV3IGZpbHRlcnNWYWxpZGF0b3JfMS5Ub3BORmlsdGVyVmFsaWRhdG9yKCldKSxcclxuXHRcdCAgICBhbnlWYWx1ZVZhbGlkYXRvcjogbmV3IGFueU9mVmFsaWRhdG9yXzEuQW55T2ZWYWxpZGF0b3IoW25ldyB0eXBlVmFsaWRhdG9yXzEuU3RyaW5nVmFsaWRhdG9yKCksIG5ldyB0eXBlVmFsaWRhdG9yXzEuTnVtYmVyVmFsaWRhdG9yKCksIG5ldyB0eXBlVmFsaWRhdG9yXzEuQm9vbGVhblZhbGlkYXRvcigpXSksXHJcblx0XHQgICAgYXBwbHlCb29rbWFya0J5TmFtZVJlcXVlc3RWYWxpZGF0b3I6IG5ldyBib29rbWFya1ZhbGlkYXRvcl8xLkFwcGx5Qm9va21hcmtCeU5hbWVSZXF1ZXN0VmFsaWRhdG9yKCksXHJcblx0XHQgICAgYXBwbHlCb29rbWFya1N0YXRlUmVxdWVzdFZhbGlkYXRvcjogbmV3IGJvb2ttYXJrVmFsaWRhdG9yXzEuQXBwbHlCb29rbWFya1N0YXRlUmVxdWVzdFZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIGFwcGx5Qm9va21hcmtWYWxpZGF0b3I6IG5ldyBhbnlPZlZhbGlkYXRvcl8xLkFueU9mVmFsaWRhdG9yKFtuZXcgYm9va21hcmtWYWxpZGF0b3JfMS5BcHBseUJvb2ttYXJrQnlOYW1lUmVxdWVzdFZhbGlkYXRvcigpLCBuZXcgYm9va21hcmtWYWxpZGF0b3JfMS5BcHBseUJvb2ttYXJrU3RhdGVSZXF1ZXN0VmFsaWRhdG9yKCldKSxcclxuXHRcdCAgICBiYWNrZ3JvdW5kVmFsaWRhdG9yOiBuZXcgdHlwZVZhbGlkYXRvcl8xLkVudW1WYWxpZGF0b3IoWzAsIDFdKSxcclxuXHRcdCAgICBiYXNpY0ZpbHRlclR5cGVWYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuRW51bVZhbGlkYXRvcihbMV0pLFxyXG5cdFx0ICAgIGJhc2ljRmlsdGVyVmFsaWRhdG9yOiBuZXcgZmlsdGVyc1ZhbGlkYXRvcl8xLkJhc2ljRmlsdGVyVmFsaWRhdG9yKCksXHJcblx0XHQgICAgYm9vbGVhbkFycmF5VmFsaWRhdG9yOiBuZXcgdHlwZVZhbGlkYXRvcl8xLkJvb2xlYW5BcnJheVZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIGJvb2xlYW5WYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuQm9vbGVhblZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIGNvbW1hbmREaXNwbGF5T3B0aW9uVmFsaWRhdG9yOiBuZXcgdHlwZVZhbGlkYXRvcl8xLkVudW1WYWxpZGF0b3IoWzAsIDEsIDJdKSxcclxuXHRcdCAgICBjb21tYW5kRXh0ZW5zaW9uU2VsZWN0b3JWYWxpZGF0b3I6IG5ldyBhbnlPZlZhbGlkYXRvcl8xLkFueU9mVmFsaWRhdG9yKFtuZXcgc2VsZWN0b3JzVmFsaWRhdG9yXzEuVmlzdWFsU2VsZWN0b3JWYWxpZGF0b3IoKSwgbmV3IHNlbGVjdG9yc1ZhbGlkYXRvcl8xLlZpc3VhbFR5cGVTZWxlY3RvclZhbGlkYXRvcigpXSksXHJcblx0XHQgICAgY29tbWFuZEV4dGVuc2lvblZhbGlkYXRvcjogbmV3IGV4dGVuc2lvbnNWYWxpZGF0b3JfMS5Db21tYW5kRXh0ZW5zaW9uVmFsaWRhdG9yKCksXHJcblx0XHQgICAgY29tbWFuZHNTZXR0aW5nc0FycmF5VmFsaWRhdG9yOiBuZXcgdHlwZVZhbGlkYXRvcl8xLkFycmF5VmFsaWRhdG9yKFtuZXcgY29tbWFuZHNTZXR0aW5nc1ZhbGlkYXRvcl8xLkNvbW1hbmRzU2V0dGluZ3NWYWxpZGF0b3IoKV0pLFxyXG5cdFx0ICAgIGNvbW1hbmRzU2V0dGluZ3NWYWxpZGF0b3I6IG5ldyBjb21tYW5kc1NldHRpbmdzVmFsaWRhdG9yXzEuQ29tbWFuZHNTZXR0aW5nc1ZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIGNvbmRpdGlvbkl0ZW1WYWxpZGF0b3I6IG5ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuQ29uZGl0aW9uSXRlbVZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIGN1c3RvbUxheW91dERpc3BsYXlPcHRpb25WYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuRW51bVZhbGlkYXRvcihbMCwgMSwgMl0pLFxyXG5cdFx0ICAgIGN1c3RvbUxheW91dFZhbGlkYXRvcjogbmV3IGxheW91dFZhbGlkYXRvcl8xLkN1c3RvbUxheW91dFZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIGN1c3RvbVBhZ2VTaXplVmFsaWRhdG9yOiBuZXcgcGFnZVZhbGlkYXRvcl8xLkN1c3RvbVBhZ2VTaXplVmFsaWRhdG9yKCksXHJcblx0XHQgICAgY3VzdG9tVGhlbWVWYWxpZGF0b3I6IG5ldyBjdXN0b21UaGVtZVZhbGlkYXRvcl8xLkN1c3RvbVRoZW1lVmFsaWRhdG9yKCksXHJcblx0XHQgICAgZGFzaGJvYXJkTG9hZFZhbGlkYXRvcjogbmV3IGRhc2hib2FyZExvYWRWYWxpZGF0b3JfMS5EYXNoYm9hcmRMb2FkVmFsaWRhdG9yKCksXHJcblx0XHQgICAgZGlzcGxheVN0YXRlTW9kZVZhbGlkYXRvcjogbmV3IHR5cGVWYWxpZGF0b3JfMS5FbnVtVmFsaWRhdG9yKFswLCAxXSksXHJcblx0XHQgICAgZGlzcGxheVN0YXRlVmFsaWRhdG9yOiBuZXcgbGF5b3V0VmFsaWRhdG9yXzEuRGlzcGxheVN0YXRlVmFsaWRhdG9yKCksXHJcblx0XHQgICAgZXhwb3J0RGF0YVJlcXVlc3RWYWxpZGF0b3I6IG5ldyBleHBvcnREYXRhVmFsaWRhdG9yXzEuRXhwb3J0RGF0YVJlcXVlc3RWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBleHRlbnNpb25BcnJheVZhbGlkYXRvcjogbmV3IHR5cGVWYWxpZGF0b3JfMS5BcnJheVZhbGlkYXRvcihbbmV3IGV4dGVuc2lvbnNWYWxpZGF0b3JfMS5FeHRlbnNpb25WYWxpZGF0b3IoKV0pLFxyXG5cdFx0ICAgIGV4dGVuc2lvblBvaW50c1ZhbGlkYXRvcjogbmV3IGV4dGVuc2lvbnNWYWxpZGF0b3JfMS5FeHRlbnNpb25Qb2ludHNWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBleHRlbnNpb25WYWxpZGF0b3I6IG5ldyBleHRlbnNpb25zVmFsaWRhdG9yXzEuRXh0ZW5zaW9uVmFsaWRhdG9yKCksXHJcblx0XHQgICAgZmllbGRSZXF1aXJlZFZhbGlkYXRvcjogbmV3IGZpZWxkUmVxdWlyZWRWYWxpZGF0b3JfMS5GaWVsZFJlcXVpcmVkVmFsaWRhdG9yKCksXHJcblx0XHQgICAgZmlsdGVyQ29sdW1uVGFyZ2V0VmFsaWRhdG9yOiBuZXcgZmlsdGVyc1ZhbGlkYXRvcl8xLkZpbHRlckNvbHVtblRhcmdldFZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIGZpbHRlckNvbmRpdGlvbnNWYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuQXJyYXlWYWxpZGF0b3IoW25ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuQ29uZGl0aW9uSXRlbVZhbGlkYXRvcigpXSksXHJcblx0XHQgICAgZmlsdGVySGllcmFyY2h5VGFyZ2V0VmFsaWRhdG9yOiBuZXcgZmlsdGVyc1ZhbGlkYXRvcl8xLkZpbHRlckhpZXJhcmNoeVRhcmdldFZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIGZpbHRlck1lYXN1cmVUYXJnZXRWYWxpZGF0b3I6IG5ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuRmlsdGVyTWVhc3VyZVRhcmdldFZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIGZpbHRlclRhcmdldFZhbGlkYXRvcjogbmV3IGFueU9mVmFsaWRhdG9yXzEuQW55T2ZWYWxpZGF0b3IoW25ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuRmlsdGVyQ29sdW1uVGFyZ2V0VmFsaWRhdG9yKCksIG5ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuRmlsdGVySGllcmFyY2h5VGFyZ2V0VmFsaWRhdG9yKCksIG5ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuRmlsdGVyTWVhc3VyZVRhcmdldFZhbGlkYXRvcigpXSksXHJcblx0XHQgICAgZmlsdGVyc0FycmF5VmFsaWRhdG9yOiBuZXcgdHlwZVZhbGlkYXRvcl8xLkFycmF5VmFsaWRhdG9yKFtuZXcgYW55T2ZWYWxpZGF0b3JfMS5BbnlPZlZhbGlkYXRvcihbbmV3IGZpbHRlcnNWYWxpZGF0b3JfMS5CYXNpY0ZpbHRlclZhbGlkYXRvcigpLCBuZXcgZmlsdGVyc1ZhbGlkYXRvcl8xLkFkdmFuY2VkRmlsdGVyVmFsaWRhdG9yKCksIG5ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuUmVsYXRpdmVEYXRlRmlsdGVyVmFsaWRhdG9yKCldKV0pLFxyXG5cdFx0ICAgIGZpbHRlcnNWYWxpZGF0b3I6IG5ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuRmlsdGVyVmFsaWRhdG9yKCksXHJcblx0XHQgICAgaW5jbHVkZUV4Y2x1ZGVGaWx0ZXJWYWxpZGF0b3I6IG5ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuSW5jbHVkZUV4Y2x1ZGVGaWx0ZXJWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBpbmNsdWRlRXhsdWRlRmlsdGVyVHlwZVZhbGlkYXRvcjogbmV3IHR5cGVWYWxpZGF0b3JfMS5FbnVtVmFsaWRhdG9yKFszXSksXHJcblx0XHQgICAgbGF5b3V0VHlwZVZhbGlkYXRvcjogbmV3IHR5cGVWYWxpZGF0b3JfMS5FbnVtVmFsaWRhdG9yKFswLCAxLCAyLCAzXSksXHJcblx0XHQgICAgbG9hZFFuYVZhbGlkYXRvcjogbmV3IHFuYVZhbGlkYXRvcl8xLkxvYWRRbmFWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBtZW51RXh0ZW5zaW9uVmFsaWRhdG9yOiBuZXcgZXh0ZW5zaW9uc1ZhbGlkYXRvcl8xLk1lbnVFeHRlbnNpb25WYWxpZGF0b3IoKSxcclxuXHRcdCAgICBtZW51TG9jYXRpb25WYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuRW51bVZhbGlkYXRvcihbMCwgMV0pLFxyXG5cdFx0ICAgIG5vdFN1cHBvcnRlZEZpbHRlclR5cGVWYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuRW51bVZhbGlkYXRvcihbMl0pLFxyXG5cdFx0ICAgIG5vdFN1cHBvcnRlZEZpbHRlclZhbGlkYXRvcjogbmV3IGZpbHRlcnNWYWxpZGF0b3JfMS5Ob3RTdXBwb3J0ZWRGaWx0ZXJWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBudW1iZXJBcnJheVZhbGlkYXRvcjogbmV3IHR5cGVWYWxpZGF0b3JfMS5OdW1iZXJBcnJheVZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIG51bWJlclZhbGlkYXRvcjogbmV3IHR5cGVWYWxpZGF0b3JfMS5OdW1iZXJWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBwYWdlTGF5b3V0VmFsaWRhdG9yOiBuZXcgbWFwVmFsaWRhdG9yXzEuTWFwVmFsaWRhdG9yKFtuZXcgdHlwZVZhbGlkYXRvcl8xLlN0cmluZ1ZhbGlkYXRvcigpXSwgW25ldyBsYXlvdXRWYWxpZGF0b3JfMS5WaXN1YWxMYXlvdXRWYWxpZGF0b3IoKV0pLFxyXG5cdFx0ICAgIHBhZ2VTaXplVHlwZVZhbGlkYXRvcjogbmV3IHR5cGVWYWxpZGF0b3JfMS5FbnVtVmFsaWRhdG9yKFswLCAxLCAyLCAzLCA0LCA1XSksXHJcblx0XHQgICAgcGFnZVNpemVWYWxpZGF0b3I6IG5ldyBwYWdlVmFsaWRhdG9yXzEuUGFnZVNpemVWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBwYWdlVmFsaWRhdG9yOiBuZXcgcGFnZVZhbGlkYXRvcl8xLlBhZ2VWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBwYWdlVmlld0ZpZWxkVmFsaWRhdG9yOiBuZXcgcGFnZVZhbGlkYXRvcl8xLlBhZ2VWaWV3RmllbGRWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBwYWdlc0xheW91dFZhbGlkYXRvcjogbmV3IG1hcFZhbGlkYXRvcl8xLk1hcFZhbGlkYXRvcihbbmV3IHR5cGVWYWxpZGF0b3JfMS5TdHJpbmdWYWxpZGF0b3IoKV0sIFtuZXcgbGF5b3V0VmFsaWRhdG9yXzEuUGFnZUxheW91dFZhbGlkYXRvcigpXSksXHJcblx0XHQgICAgcGVybWlzc2lvbnNWYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuRW51bVZhbGlkYXRvcihbMCwgMSwgMiwgNCwgN10pLFxyXG5cdFx0ICAgIHBsYXlCb29rbWFya1JlcXVlc3RWYWxpZGF0b3I6IG5ldyBib29rbWFya1ZhbGlkYXRvcl8xLlBsYXlCb29rbWFya1JlcXVlc3RWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBxbmFJbnRlcnByZXRJbnB1dERhdGFWYWxpZGF0b3I6IG5ldyBxbmFWYWxpZGF0b3JfMS5RbmFJbnRlcnByZXRJbnB1dERhdGFWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBxbmFTZXR0aW5nVmFsaWRhdG9yOiBuZXcgcW5hVmFsaWRhdG9yXzEuUW5hU2V0dGluZ3NWYWxpZGF0b3IoKSxcclxuXHRcdCAgICByZWxhdGl2ZURhdGVGaWx0ZXJPcGVyYXRvclZhbGlkYXRvcjogbmV3IHR5cGVWYWxpZGF0b3JfMS5FbnVtVmFsaWRhdG9yKFswLCAxLCAyXSksXHJcblx0XHQgICAgcmVsYXRpdmVEYXRlRmlsdGVyVGltZVVuaXRUeXBlVmFsaWRhdG9yOiBuZXcgdHlwZVZhbGlkYXRvcl8xLkVudW1WYWxpZGF0b3IoWzAsIDEsIDIsIDMsIDQsIDUsIDZdKSxcclxuXHRcdCAgICByZWxhdGl2ZURhdGVGaWx0ZXJUeXBlVmFsaWRhdG9yOiBuZXcgdHlwZVZhbGlkYXRvcl8xLkVudW1WYWxpZGF0b3IoWzRdKSxcclxuXHRcdCAgICByZWxhdGl2ZURhdGVGaWx0ZXJWYWxpZGF0b3I6IG5ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuUmVsYXRpdmVEYXRlRmlsdGVyVmFsaWRhdG9yKCksXHJcblx0XHQgICAgcmVwb3J0Q3JlYXRlVmFsaWRhdG9yOiBuZXcgcmVwb3J0Q3JlYXRlVmFsaWRhdG9yXzEuUmVwb3J0Q3JlYXRlVmFsaWRhdG9yKCksXHJcblx0XHQgICAgcmVwb3J0TG9hZFZhbGlkYXRvcjogbmV3IHJlcG9ydExvYWRWYWxpZGF0b3JfMS5SZXBvcnRMb2FkVmFsaWRhdG9yKCksXHJcblx0XHQgICAgc2F2ZUFzUGFyYW1ldGVyc1ZhbGlkYXRvcjogbmV3IHNhdmVBc1BhcmFtZXRlcnNWYWxpZGF0b3JfMS5TYXZlQXNQYXJhbWV0ZXJzVmFsaWRhdG9yKCksXHJcblx0XHQgICAgc2V0dGluZ3NWYWxpZGF0b3I6IG5ldyBzZXR0aW5nc1ZhbGlkYXRvcl8xLlNldHRpbmdzVmFsaWRhdG9yKCksXHJcblx0XHQgICAgc2luZ2xlQ29tbWFuZFNldHRpbmdzVmFsaWRhdG9yOiBuZXcgY29tbWFuZHNTZXR0aW5nc1ZhbGlkYXRvcl8xLlNpbmdsZUNvbW1hbmRTZXR0aW5nc1ZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIHNsaWNlclNlbGVjdG9yVmFsaWRhdG9yOiBuZXcgYW55T2ZWYWxpZGF0b3JfMS5BbnlPZlZhbGlkYXRvcihbbmV3IHNlbGVjdG9yc1ZhbGlkYXRvcl8xLlZpc3VhbFNlbGVjdG9yVmFsaWRhdG9yKCksIG5ldyBzZWxlY3RvcnNWYWxpZGF0b3JfMS5TbGljZXJUYXJnZXRTZWxlY3RvclZhbGlkYXRvcigpXSksXHJcblx0XHQgICAgc2xpY2VyU3RhdGVWYWxpZGF0b3I6IG5ldyBzbGljZXJzVmFsaWRhdG9yXzEuU2xpY2VyU3RhdGVWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBzbGljZXJUYXJnZXRWYWxpZGF0b3I6IG5ldyBhbnlPZlZhbGlkYXRvcl8xLkFueU9mVmFsaWRhdG9yKFtuZXcgZmlsdGVyc1ZhbGlkYXRvcl8xLkZpbHRlckNvbHVtblRhcmdldFZhbGlkYXRvcigpLCBuZXcgZmlsdGVyc1ZhbGlkYXRvcl8xLkZpbHRlckhpZXJhcmNoeVRhcmdldFZhbGlkYXRvcigpLCBuZXcgZmlsdGVyc1ZhbGlkYXRvcl8xLkZpbHRlck1lYXN1cmVUYXJnZXRWYWxpZGF0b3IoKSwgbmV3IGZpbHRlcnNWYWxpZGF0b3JfMS5GaWx0ZXJLZXlDb2x1bW5zVGFyZ2V0VmFsaWRhdG9yKCksIG5ldyBmaWx0ZXJzVmFsaWRhdG9yXzEuRmlsdGVyS2V5SGllcmFyY2h5VGFyZ2V0VmFsaWRhdG9yKCldKSxcclxuXHRcdCAgICBzbGljZXJWYWxpZGF0b3I6IG5ldyBzbGljZXJzVmFsaWRhdG9yXzEuU2xpY2VyVmFsaWRhdG9yKCksXHJcblx0XHQgICAgc3RyaW5nQXJyYXlWYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuU3RyaW5nQXJyYXlWYWxpZGF0b3IoKSxcclxuXHRcdCAgICBzdHJpbmdWYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuU3RyaW5nVmFsaWRhdG9yKCksXHJcblx0XHQgICAgdGlsZUxvYWRWYWxpZGF0b3I6IG5ldyB0aWxlTG9hZFZhbGlkYXRvcl8xLlRpbGVMb2FkVmFsaWRhdG9yKCksXHJcblx0XHQgICAgdG9rZW5UeXBlVmFsaWRhdG9yOiBuZXcgdHlwZVZhbGlkYXRvcl8xLkVudW1WYWxpZGF0b3IoWzAsIDFdKSxcclxuXHRcdCAgICB0b3BORmlsdGVyVHlwZVZhbGlkYXRvcjogbmV3IHR5cGVWYWxpZGF0b3JfMS5FbnVtVmFsaWRhdG9yKFs1XSksXHJcblx0XHQgICAgdG9wTkZpbHRlclZhbGlkYXRvcjogbmV3IGZpbHRlcnNWYWxpZGF0b3JfMS5Ub3BORmlsdGVyVmFsaWRhdG9yKCksXHJcblx0XHQgICAgdmlld01vZGVWYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuRW51bVZhbGlkYXRvcihbMCwgMV0pLFxyXG5cdFx0ICAgIHZpc3VhbENvbW1hbmRTZWxlY3RvclZhbGlkYXRvcjogbmV3IGFueU9mVmFsaWRhdG9yXzEuQW55T2ZWYWxpZGF0b3IoW25ldyBzZWxlY3RvcnNWYWxpZGF0b3JfMS5WaXN1YWxTZWxlY3RvclZhbGlkYXRvcigpLCBuZXcgc2VsZWN0b3JzVmFsaWRhdG9yXzEuVmlzdWFsVHlwZVNlbGVjdG9yVmFsaWRhdG9yKCldKSxcclxuXHRcdCAgICB2aXN1YWxIZWFkZXJTZWxlY3RvclZhbGlkYXRvcjogbmV3IGFueU9mVmFsaWRhdG9yXzEuQW55T2ZWYWxpZGF0b3IoW25ldyBzZWxlY3RvcnNWYWxpZGF0b3JfMS5WaXN1YWxTZWxlY3RvclZhbGlkYXRvcigpLCBuZXcgc2VsZWN0b3JzVmFsaWRhdG9yXzEuVmlzdWFsVHlwZVNlbGVjdG9yVmFsaWRhdG9yKCldKSxcclxuXHRcdCAgICB2aXN1YWxIZWFkZXJTZXR0aW5nc1ZhbGlkYXRvcjogbmV3IHZpc3VhbFNldHRpbmdzVmFsaWRhdG9yXzEuVmlzdWFsSGVhZGVyU2V0dGluZ3NWYWxpZGF0b3IoKSxcclxuXHRcdCAgICB2aXN1YWxIZWFkZXJWYWxpZGF0b3I6IG5ldyB2aXN1YWxTZXR0aW5nc1ZhbGlkYXRvcl8xLlZpc3VhbEhlYWRlclZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIHZpc3VhbEhlYWRlcnNWYWxpZGF0b3I6IG5ldyB0eXBlVmFsaWRhdG9yXzEuQXJyYXlWYWxpZGF0b3IoW25ldyB2aXN1YWxTZXR0aW5nc1ZhbGlkYXRvcl8xLlZpc3VhbEhlYWRlclZhbGlkYXRvcigpXSksXHJcblx0XHQgICAgdmlzdWFsTGF5b3V0VmFsaWRhdG9yOiBuZXcgbGF5b3V0VmFsaWRhdG9yXzEuVmlzdWFsTGF5b3V0VmFsaWRhdG9yKCksXHJcblx0XHQgICAgdmlzdWFsU2VsZWN0b3JWYWxpZGF0b3I6IG5ldyBzZWxlY3RvcnNWYWxpZGF0b3JfMS5WaXN1YWxTZWxlY3RvclZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIHZpc3VhbFNldHRpbmdzVmFsaWRhdG9yOiBuZXcgdmlzdWFsU2V0dGluZ3NWYWxpZGF0b3JfMS5WaXN1YWxTZXR0aW5nc1ZhbGlkYXRvcigpLFxyXG5cdFx0ICAgIHZpc3VhbFR5cGVTZWxlY3RvclZhbGlkYXRvcjogbmV3IHNlbGVjdG9yc1ZhbGlkYXRvcl8xLlZpc3VhbFR5cGVTZWxlY3RvclZhbGlkYXRvcigpLFxyXG5cdFx0fTtcclxuXHRcblx0XG5cdC8qKiovIH0pLFxuXHQvKiAyICovXG5cdC8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblx0XG5cdFx0dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcblx0XHQgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcblx0XHQgICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcblx0XHQgICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG5cdFx0ICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcblx0XHQgICAgfTtcclxuXHRcdH0pKCk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0XHR2YXIgT2JqZWN0VmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgIGZ1bmN0aW9uIE9iamVjdFZhbGlkYXRvcigpIHtcclxuXHRcdCAgICB9XHJcblx0XHQgICAgT2JqZWN0VmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIGlmICh0eXBlb2YgaW5wdXQgIT09IFwib2JqZWN0XCIgfHwgQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBbe1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBmaWVsZCAhPT0gdW5kZWZpbmVkID8gZmllbGQgKyBcIiBtdXN0IGJlIGFuIG9iamVjdFwiIDogXCJpbnB1dCBtdXN0IGJlIGFuIG9iamVjdFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBwYXRoOiBwYXRoLFxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBrZXl3b3JkOiBcInR5cGVcIlxyXG5cdFx0ICAgICAgICAgICAgICAgIH1dO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIE9iamVjdFZhbGlkYXRvcjtcclxuXHRcdH0oKSk7XHJcblx0XHRleHBvcnRzLk9iamVjdFZhbGlkYXRvciA9IE9iamVjdFZhbGlkYXRvcjtcclxuXHRcdHZhciBBcnJheVZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICBmdW5jdGlvbiBBcnJheVZhbGlkYXRvcihpdGVtVmFsaWRhdG9ycykge1xyXG5cdFx0ICAgICAgICB0aGlzLml0ZW1WYWxpZGF0b3JzID0gaXRlbVZhbGlkYXRvcnM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIEFycmF5VmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIGlmICghKEFycmF5LmlzQXJyYXkoaW5wdXQpKSkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIFt7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGZpZWxkICsgXCIgcHJvcGVydHkgaXMgaW52YWxpZFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBwYXRoOiAocGF0aCA/IHBhdGggKyBcIi5cIiA6IFwiXCIpICsgZmllbGQsXHJcblx0XHQgICAgICAgICAgICAgICAgICAgIGtleXdvcmQ6IFwidHlwZVwiXHJcblx0XHQgICAgICAgICAgICAgICAgfV07XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykge1xyXG5cdFx0ICAgICAgICAgICAgdmFyIGZpZWxkc1BhdGggPSAocGF0aCA/IHBhdGggKyBcIi5cIiA6IFwiXCIpICsgZmllbGQgKyBcIi5cIiArIGk7XHJcblx0XHQgICAgICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gdGhpcy5pdGVtVmFsaWRhdG9yczsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcclxuXHRcdCAgICAgICAgICAgICAgICB2YXIgdmFsaWRhdG9yID0gX2FbX2ldO1xyXG5cdFx0ICAgICAgICAgICAgICAgIHZhciBlcnJvcnMgPSB2YWxpZGF0b3IudmFsaWRhdGUoaW5wdXRbaV0sIGZpZWxkc1BhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgIHJldHVybiBbe1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGZpZWxkICsgXCIgcHJvcGVydHkgaXMgaW52YWxpZFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IChwYXRoID8gcGF0aCArIFwiLlwiIDogXCJcIikgKyBmaWVsZCxcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXl3b3JkOiBcInR5cGVcIlxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgfV07XHJcblx0XHQgICAgICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIEFycmF5VmFsaWRhdG9yO1xyXG5cdFx0fSgpKTtcclxuXHRcdGV4cG9ydHMuQXJyYXlWYWxpZGF0b3IgPSBBcnJheVZhbGlkYXRvcjtcclxuXHRcdHZhciBUeXBlVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFR5cGVWYWxpZGF0b3IoZXhwZWN0ZWRUeXBlKSB7XHJcblx0XHQgICAgICAgIHRoaXMuZXhwZWN0ZWRUeXBlID0gZXhwZWN0ZWRUeXBlO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBUeXBlVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIGlmICghKHR5cGVvZiBpbnB1dCA9PT0gdGhpcy5leHBlY3RlZFR5cGUpKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gW3tcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZmllbGQgKyBcIiBtdXN0IGJlIGEgXCIgKyB0aGlzLmV4cGVjdGVkVHlwZSxcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgcGF0aDogKHBhdGggPyBwYXRoICsgXCIuXCIgOiBcIlwiKSArIGZpZWxkLFxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBrZXl3b3JkOiBcInR5cGVcIlxyXG5cdFx0ICAgICAgICAgICAgICAgIH1dO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFR5cGVWYWxpZGF0b3I7XHJcblx0XHR9KCkpO1xyXG5cdFx0ZXhwb3J0cy5UeXBlVmFsaWRhdG9yID0gVHlwZVZhbGlkYXRvcjtcclxuXHRcdHZhciBTdHJpbmdWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFN0cmluZ1ZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBTdHJpbmdWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBcInN0cmluZ1wiKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICByZXR1cm4gU3RyaW5nVmFsaWRhdG9yO1xyXG5cdFx0fShUeXBlVmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLlN0cmluZ1ZhbGlkYXRvciA9IFN0cmluZ1ZhbGlkYXRvcjtcclxuXHRcdHZhciBCb29sZWFuVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhCb29sZWFuVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEJvb2xlYW5WYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBcImJvb2xlYW5cIikgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgcmV0dXJuIEJvb2xlYW5WYWxpZGF0b3I7XHJcblx0XHR9KFR5cGVWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuQm9vbGVhblZhbGlkYXRvciA9IEJvb2xlYW5WYWxpZGF0b3I7XHJcblx0XHR2YXIgTnVtYmVyVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhOdW1iZXJWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gTnVtYmVyVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgXCJudW1iZXJcIikgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgcmV0dXJuIE51bWJlclZhbGlkYXRvcjtcclxuXHRcdH0oVHlwZVZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5OdW1iZXJWYWxpZGF0b3IgPSBOdW1iZXJWYWxpZGF0b3I7XHJcblx0XHR2YXIgVmFsdWVWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgZnVuY3Rpb24gVmFsdWVWYWxpZGF0b3IocG9zc2libGVWYWx1ZXMpIHtcclxuXHRcdCAgICAgICAgdGhpcy5wb3NzaWJsZVZhbHVlcyA9IHBvc3NpYmxlVmFsdWVzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBWYWx1ZVZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICBpZiAodGhpcy5wb3NzaWJsZVZhbHVlcy5pbmRleE9mKGlucHV0KSA8IDApIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBbe1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBmaWVsZCArIFwiIHByb3BlcnR5IGlzIGludmFsaWRcIixcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgcGF0aDogKHBhdGggPyBwYXRoICsgXCIuXCIgOiBcIlwiKSArIGZpZWxkLFxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBrZXl3b3JkOiBcImludmFsaWRcIlxyXG5cdFx0ICAgICAgICAgICAgICAgIH1dO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFZhbHVlVmFsaWRhdG9yO1xyXG5cdFx0fSgpKTtcclxuXHRcdGV4cG9ydHMuVmFsdWVWYWxpZGF0b3IgPSBWYWx1ZVZhbGlkYXRvcjtcclxuXHRcdHZhciBTY2hlbWFWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFNjaGVtYVZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBTY2hlbWFWYWxpZGF0b3Ioc2NoZW1hVmFsdWUpIHtcclxuXHRcdCAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgW3NjaGVtYVZhbHVlXSkgfHwgdGhpcztcclxuXHRcdCAgICAgICAgX3RoaXMuc2NoZW1hVmFsdWUgPSBzY2hlbWFWYWx1ZTtcclxuXHRcdCAgICAgICAgcmV0dXJuIF90aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBTY2hlbWFWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gU2NoZW1hVmFsaWRhdG9yO1xyXG5cdFx0fShWYWx1ZVZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5TY2hlbWFWYWxpZGF0b3IgPSBTY2hlbWFWYWxpZGF0b3I7XHJcblx0XHR2YXIgRW51bVZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoRW51bVZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBFbnVtVmFsaWRhdG9yKHBvc3NpYmxlVmFsdWVzKSB7XHJcblx0XHQgICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcblx0XHQgICAgICAgIF90aGlzLnBvc3NpYmxlVmFsdWVzID0gcG9zc2libGVWYWx1ZXM7XHJcblx0XHQgICAgICAgIHJldHVybiBfdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgRW51bVZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIHZhbHVlVmFsaWRhdG9yID0gbmV3IFZhbHVlVmFsaWRhdG9yKHRoaXMucG9zc2libGVWYWx1ZXMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gdmFsdWVWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBFbnVtVmFsaWRhdG9yO1xyXG5cdFx0fShOdW1iZXJWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuRW51bVZhbGlkYXRvciA9IEVudW1WYWxpZGF0b3I7XHJcblx0XHR2YXIgU3RyaW5nQXJyYXlWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFN0cmluZ0FycmF5VmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFN0cmluZ0FycmF5VmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgW25ldyBTdHJpbmdWYWxpZGF0b3IoKV0pIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFN0cmluZ0FycmF5VmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gW3tcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZmllbGQgKyBcIiBtdXN0IGJlIGFuIGFycmF5IG9mIHN0cmluZ3NcIixcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgcGF0aDogKHBhdGggPyBwYXRoICsgXCIuXCIgOiBcIlwiKSArIGZpZWxkLFxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBrZXl3b3JkOiBcInR5cGVcIlxyXG5cdFx0ICAgICAgICAgICAgICAgIH1dO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFN0cmluZ0FycmF5VmFsaWRhdG9yO1xyXG5cdFx0fShBcnJheVZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5TdHJpbmdBcnJheVZhbGlkYXRvciA9IFN0cmluZ0FycmF5VmFsaWRhdG9yO1xyXG5cdFx0dmFyIEJvb2xlYW5BcnJheVZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoQm9vbGVhbkFycmF5VmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEJvb2xlYW5BcnJheVZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIFtuZXcgQm9vbGVhblZhbGlkYXRvcigpXSkgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgQm9vbGVhbkFycmF5VmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gW3tcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZmllbGQgKyBcIiBtdXN0IGJlIGFuIGFycmF5IG9mIGJvb2xlYW5zXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgICAgIHBhdGg6IChwYXRoID8gcGF0aCArIFwiLlwiIDogXCJcIikgKyBmaWVsZCxcclxuXHRcdCAgICAgICAgICAgICAgICAgICAga2V5d29yZDogXCJ0eXBlXCJcclxuXHRcdCAgICAgICAgICAgICAgICB9XTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBCb29sZWFuQXJyYXlWYWxpZGF0b3I7XHJcblx0XHR9KEFycmF5VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkJvb2xlYW5BcnJheVZhbGlkYXRvciA9IEJvb2xlYW5BcnJheVZhbGlkYXRvcjtcclxuXHRcdHZhciBOdW1iZXJBcnJheVZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoTnVtYmVyQXJyYXlWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gTnVtYmVyQXJyYXlWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBbbmV3IE51bWJlclZhbGlkYXRvcigpXSkgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgTnVtYmVyQXJyYXlWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBbe1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBmaWVsZCArIFwiIG11c3QgYmUgYW4gYXJyYXkgb2YgbnVtYmVyc1wiLFxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBwYXRoOiAocGF0aCA/IHBhdGggKyBcIi5cIiA6IFwiXCIpICsgZmllbGQsXHJcblx0XHQgICAgICAgICAgICAgICAgICAgIGtleXdvcmQ6IFwidHlwZVwiXHJcblx0XHQgICAgICAgICAgICAgICAgfV07XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gTnVtYmVyQXJyYXlWYWxpZGF0b3I7XHJcblx0XHR9KEFycmF5VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLk51bWJlckFycmF5VmFsaWRhdG9yID0gTnVtYmVyQXJyYXlWYWxpZGF0b3I7XHJcblx0XG5cdFxuXHQvKioqLyB9KSxcblx0LyogMyAqL1xuXHQvKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cdFxuXHRcdHZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG5cdFx0ICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG5cdFx0ICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xyXG5cdFx0ICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG5cdFx0ICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuXHRcdCAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG5cdFx0ICAgIH07XHJcblx0XHR9KSgpO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5cdFx0dmFyIHZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcclxuXHRcdHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcclxuXHRcdHZhciB0eXBlVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xyXG5cdFx0dmFyIE1lbnVFeHRlbnNpb25WYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKE1lbnVFeHRlbnNpb25WYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gTWVudUV4dGVuc2lvblZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBNZW51RXh0ZW5zaW9uVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInRpdGxlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJpY29uXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJtZW51TG9jYXRpb25cIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5tZW51TG9jYXRpb25WYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIE1lbnVFeHRlbnNpb25WYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuTWVudUV4dGVuc2lvblZhbGlkYXRvciA9IE1lbnVFeHRlbnNpb25WYWxpZGF0b3I7XHJcblx0XHR2YXIgRXh0ZW5zaW9uUG9pbnRzVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhFeHRlbnNpb25Qb2ludHNWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gRXh0ZW5zaW9uUG9pbnRzVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIEV4dGVuc2lvblBvaW50c1ZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ2aXN1YWxDb250ZXh0TWVudVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLm1lbnVFeHRlbnNpb25WYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInZpc3VhbE9wdGlvbnNNZW51XCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMubWVudUV4dGVuc2lvblZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gRXh0ZW5zaW9uUG9pbnRzVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkV4dGVuc2lvblBvaW50c1ZhbGlkYXRvciA9IEV4dGVuc2lvblBvaW50c1ZhbGlkYXRvcjtcclxuXHRcdHZhciBFeHRlbnNpb25JdGVtVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhFeHRlbnNpb25JdGVtVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEV4dGVuc2lvbkl0ZW1WYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgRXh0ZW5zaW9uSXRlbVZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJuYW1lXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImV4dGVuZFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZXh0ZW5zaW9uUG9pbnRzVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBFeHRlbnNpb25JdGVtVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkV4dGVuc2lvbkl0ZW1WYWxpZGF0b3IgPSBFeHRlbnNpb25JdGVtVmFsaWRhdG9yO1xyXG5cdFx0dmFyIENvbW1hbmRFeHRlbnNpb25WYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKENvbW1hbmRFeHRlbnNpb25WYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gQ29tbWFuZEV4dGVuc2lvblZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBDb21tYW5kRXh0ZW5zaW9uVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInRpdGxlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImljb25cIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInNlbGVjdG9yXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuY29tbWFuZEV4dGVuc2lvblNlbGVjdG9yVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gQ29tbWFuZEV4dGVuc2lvblZhbGlkYXRvcjtcclxuXHRcdH0oRXh0ZW5zaW9uSXRlbVZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5Db21tYW5kRXh0ZW5zaW9uVmFsaWRhdG9yID0gQ29tbWFuZEV4dGVuc2lvblZhbGlkYXRvcjtcclxuXHRcdHZhciBFeHRlbnNpb25WYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKEV4dGVuc2lvblZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBFeHRlbnNpb25WYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgRXh0ZW5zaW9uVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImNvbW1hbmRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5jb21tYW5kRXh0ZW5zaW9uVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBFeHRlbnNpb25WYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuRXh0ZW5zaW9uVmFsaWRhdG9yID0gRXh0ZW5zaW9uVmFsaWRhdG9yO1xyXG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDQgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXHRcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0XHR2YXIgTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgZnVuY3Rpb24gTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRWYWxpZGF0b3JzUGFpcnMpIHtcclxuXHRcdCAgICAgICAgdGhpcy5maWVsZFZhbGlkYXRvcnNQYWlycyA9IGZpZWxkVmFsaWRhdG9yc1BhaXJzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBNdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmICghdGhpcy5maWVsZFZhbGlkYXRvcnNQYWlycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkc1BhdGggPSBwYXRoID8gcGF0aCArIFwiLlwiICsgZmllbGQgOiBmaWVsZDtcclxuXHRcdCAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IHRoaXMuZmllbGRWYWxpZGF0b3JzUGFpcnM7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XHJcblx0XHQgICAgICAgICAgICB2YXIgZmllbGRWYWxpZGF0b3JzID0gX2FbX2ldO1xyXG5cdFx0ICAgICAgICAgICAgZm9yICh2YXIgX2IgPSAwLCBfYyA9IGZpZWxkVmFsaWRhdG9ycy52YWxpZGF0b3JzOyBfYiA8IF9jLmxlbmd0aDsgX2IrKykge1xyXG5cdFx0ICAgICAgICAgICAgICAgIHZhciB2YWxpZGF0b3IgPSBfY1tfYl07XHJcblx0XHQgICAgICAgICAgICAgICAgdmFyIGVycm9ycyA9IHZhbGlkYXRvci52YWxpZGF0ZShpbnB1dFtmaWVsZFZhbGlkYXRvcnMuZmllbGRdLCBmaWVsZHNQYXRoLCBmaWVsZFZhbGlkYXRvcnMuZmllbGQpO1xyXG5cdFx0ICAgICAgICAgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3I7XHJcblx0XHR9KCkpO1xyXG5cdFx0ZXhwb3J0cy5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IE11bHRpcGxlRmllbGRzVmFsaWRhdG9yO1xyXG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDUgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuXHRcdCAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG5cdFx0ICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuXHRcdCAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuXHRcdCAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcblx0XHQgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0fSkoKTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuXHRcdHZhciB2YWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XHJcblx0XHR2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0XHR2YXIgdHlwZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRcdHZhciBTZXR0aW5nc1ZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoU2V0dGluZ3NWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gU2V0dGluZ3NWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgU2V0dGluZ3NWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZmlsdGVyUGFuZUVuYWJsZWRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5ib29sZWFuVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJuYXZDb250ZW50UGFuZUVuYWJsZWRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5ib29sZWFuVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJib29rbWFya3NQYW5lRW5hYmxlZFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmJvb2xlYW5WYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInVzZUN1c3RvbVNhdmVBc0RpYWxvZ1wiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmJvb2xlYW5WYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImV4dGVuc2lvbnNcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5leHRlbnNpb25BcnJheVZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwibGF5b3V0VHlwZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmxheW91dFR5cGVWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImN1c3RvbUxheW91dFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmN1c3RvbUxheW91dFZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiYmFja2dyb3VuZFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmJhY2tncm91bmRWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInZpc3VhbFNldHRpbmdzXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMudmlzdWFsU2V0dGluZ3NWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImhpZGVFcnJvcnNcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5ib29sZWFuVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJjb21tYW5kc1wiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmNvbW1hbmRzU2V0dGluZ3NBcnJheVZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFNldHRpbmdzVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLlNldHRpbmdzVmFsaWRhdG9yID0gU2V0dGluZ3NWYWxpZGF0b3I7XHJcblx0XG5cdFxuXHQvKioqLyB9KSxcblx0LyogNiAqL1xuXHQvKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cdFxuXHRcdHZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG5cdFx0ICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG5cdFx0ICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xyXG5cdFx0ICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG5cdFx0ICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuXHRcdCAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG5cdFx0ICAgIH07XHJcblx0XHR9KSgpO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5cdFx0dmFyIHZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcclxuXHRcdHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcclxuXHRcdHZhciB0eXBlVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xyXG5cdFx0dmFyIFBsYXlCb29rbWFya1JlcXVlc3RWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFBsYXlCb29rbWFya1JlcXVlc3RWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gUGxheUJvb2ttYXJrUmVxdWVzdFZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBQbGF5Qm9va21hcmtSZXF1ZXN0VmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInBsYXlNb2RlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgbmV3IHR5cGVWYWxpZGF0b3JfMS5FbnVtVmFsaWRhdG9yKFswLCAxXSldXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFBsYXlCb29rbWFya1JlcXVlc3RWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuUGxheUJvb2ttYXJrUmVxdWVzdFZhbGlkYXRvciA9IFBsYXlCb29rbWFya1JlcXVlc3RWYWxpZGF0b3I7XHJcblx0XHR2YXIgQWRkQm9va21hcmtSZXF1ZXN0VmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhBZGRCb29rbWFya1JlcXVlc3RWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gQWRkQm9va21hcmtSZXF1ZXN0VmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIEFkZEJvb2ttYXJrUmVxdWVzdFZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJzdGF0ZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZGlzcGxheU5hbWVcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImFwcGx5XCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuYm9vbGVhblZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIEFkZEJvb2ttYXJrUmVxdWVzdFZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5BZGRCb29rbWFya1JlcXVlc3RWYWxpZGF0b3IgPSBBZGRCb29rbWFya1JlcXVlc3RWYWxpZGF0b3I7XHJcblx0XHR2YXIgQXBwbHlCb29rbWFya0J5TmFtZVJlcXVlc3RWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKEFwcGx5Qm9va21hcmtCeU5hbWVSZXF1ZXN0VmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEFwcGx5Qm9va21hcmtCeU5hbWVSZXF1ZXN0VmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIEFwcGx5Qm9va21hcmtCeU5hbWVSZXF1ZXN0VmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcIm5hbWVcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gQXBwbHlCb29rbWFya0J5TmFtZVJlcXVlc3RWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuQXBwbHlCb29rbWFya0J5TmFtZVJlcXVlc3RWYWxpZGF0b3IgPSBBcHBseUJvb2ttYXJrQnlOYW1lUmVxdWVzdFZhbGlkYXRvcjtcclxuXHRcdHZhciBBcHBseUJvb2ttYXJrU3RhdGVSZXF1ZXN0VmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhBcHBseUJvb2ttYXJrU3RhdGVSZXF1ZXN0VmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEFwcGx5Qm9va21hcmtTdGF0ZVJlcXVlc3RWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgQXBwbHlCb29rbWFya1N0YXRlUmVxdWVzdFZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJzdGF0ZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBBcHBseUJvb2ttYXJrU3RhdGVSZXF1ZXN0VmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkFwcGx5Qm9va21hcmtTdGF0ZVJlcXVlc3RWYWxpZGF0b3IgPSBBcHBseUJvb2ttYXJrU3RhdGVSZXF1ZXN0VmFsaWRhdG9yO1xyXG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDcgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuXHRcdCAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG5cdFx0ICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuXHRcdCAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuXHRcdCAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcblx0XHQgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0fSkoKTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuXHRcdHZhciB2YWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XHJcblx0XHR2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0XHR2YXIgdHlwZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRcdHZhciBGaWx0ZXJDb2x1bW5UYXJnZXRWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKEZpbHRlckNvbHVtblRhcmdldFZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBGaWx0ZXJDb2x1bW5UYXJnZXRWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgRmlsdGVyQ29sdW1uVGFyZ2V0VmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInRhYmxlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImNvbHVtblwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBGaWx0ZXJDb2x1bW5UYXJnZXRWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuRmlsdGVyQ29sdW1uVGFyZ2V0VmFsaWRhdG9yID0gRmlsdGVyQ29sdW1uVGFyZ2V0VmFsaWRhdG9yO1xyXG5cdFx0dmFyIEZpbHRlcktleUNvbHVtbnNUYXJnZXRWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKEZpbHRlcktleUNvbHVtbnNUYXJnZXRWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gRmlsdGVyS2V5Q29sdW1uc1RhcmdldFZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBGaWx0ZXJLZXlDb2x1bW5zVGFyZ2V0VmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImtleXNcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ0FycmF5VmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gRmlsdGVyS2V5Q29sdW1uc1RhcmdldFZhbGlkYXRvcjtcclxuXHRcdH0oRmlsdGVyQ29sdW1uVGFyZ2V0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkZpbHRlcktleUNvbHVtbnNUYXJnZXRWYWxpZGF0b3IgPSBGaWx0ZXJLZXlDb2x1bW5zVGFyZ2V0VmFsaWRhdG9yO1xyXG5cdFx0dmFyIEZpbHRlckhpZXJhcmNoeVRhcmdldFZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoRmlsdGVySGllcmFyY2h5VGFyZ2V0VmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEZpbHRlckhpZXJhcmNoeVRhcmdldFZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBGaWx0ZXJIaWVyYXJjaHlUYXJnZXRWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidGFibGVcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiaGllcmFyY2h5XCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImhpZXJhcmNoeUxldmVsXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIEZpbHRlckhpZXJhcmNoeVRhcmdldFZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5GaWx0ZXJIaWVyYXJjaHlUYXJnZXRWYWxpZGF0b3IgPSBGaWx0ZXJIaWVyYXJjaHlUYXJnZXRWYWxpZGF0b3I7XHJcblx0XHR2YXIgRmlsdGVyS2V5SGllcmFyY2h5VGFyZ2V0VmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhGaWx0ZXJLZXlIaWVyYXJjaHlUYXJnZXRWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gRmlsdGVyS2V5SGllcmFyY2h5VGFyZ2V0VmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIEZpbHRlcktleUhpZXJhcmNoeVRhcmdldFZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJrZXlzXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdBcnJheVZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIEZpbHRlcktleUhpZXJhcmNoeVRhcmdldFZhbGlkYXRvcjtcclxuXHRcdH0oRmlsdGVySGllcmFyY2h5VGFyZ2V0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkZpbHRlcktleUhpZXJhcmNoeVRhcmdldFZhbGlkYXRvciA9IEZpbHRlcktleUhpZXJhcmNoeVRhcmdldFZhbGlkYXRvcjtcclxuXHRcdHZhciBGaWx0ZXJNZWFzdXJlVGFyZ2V0VmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhGaWx0ZXJNZWFzdXJlVGFyZ2V0VmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEZpbHRlck1lYXN1cmVUYXJnZXRWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgRmlsdGVyTWVhc3VyZVRhcmdldFZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ0YWJsZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJtZWFzdXJlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIEZpbHRlck1lYXN1cmVUYXJnZXRWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuRmlsdGVyTWVhc3VyZVRhcmdldFZhbGlkYXRvciA9IEZpbHRlck1lYXN1cmVUYXJnZXRWYWxpZGF0b3I7XHJcblx0XHR2YXIgQmFzaWNGaWx0ZXJWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKEJhc2ljRmlsdGVyVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEJhc2ljRmlsdGVyVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIEJhc2ljRmlsdGVyVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInRhcmdldFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmlsdGVyVGFyZ2V0VmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJvcGVyYXRvclwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ2YWx1ZXNcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmFueUFycmF5VmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJmaWx0ZXJUeXBlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuYmFzaWNGaWx0ZXJUeXBlVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gQmFzaWNGaWx0ZXJWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuQmFzaWNGaWx0ZXJWYWxpZGF0b3IgPSBCYXNpY0ZpbHRlclZhbGlkYXRvcjtcclxuXHRcdHZhciBBZHZhbmNlZEZpbHRlclZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoQWR2YW5jZWRGaWx0ZXJWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gQWR2YW5jZWRGaWx0ZXJWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgQWR2YW5jZWRGaWx0ZXJWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidGFyZ2V0XCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWx0ZXJUYXJnZXRWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImxvZ2ljYWxPcGVyYXRvclwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJjb25kaXRpb25zXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWx0ZXJDb25kaXRpb25zVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJmaWx0ZXJUeXBlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuYWR2YW5jZWRGaWx0ZXJUeXBlVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBBZHZhbmNlZEZpbHRlclZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5BZHZhbmNlZEZpbHRlclZhbGlkYXRvciA9IEFkdmFuY2VkRmlsdGVyVmFsaWRhdG9yO1xyXG5cdFx0dmFyIFJlbGF0aXZlRGF0ZUZpbHRlclZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoUmVsYXRpdmVEYXRlRmlsdGVyVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFJlbGF0aXZlRGF0ZUZpbHRlclZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBSZWxhdGl2ZURhdGVGaWx0ZXJWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidGFyZ2V0XCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWx0ZXJUYXJnZXRWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcIm9wZXJhdG9yXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5yZWxhdGl2ZURhdGVGaWx0ZXJPcGVyYXRvclZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidGltZVVuaXRzQ291bnRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLm51bWJlclZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidGltZVVuaXRUeXBlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5yZWxhdGl2ZURhdGVGaWx0ZXJUaW1lVW5pdFR5cGVWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImluY2x1ZGVUb2RheVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuYm9vbGVhblZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZmlsdGVyVHlwZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnJlbGF0aXZlRGF0ZUZpbHRlclR5cGVWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBSZWxhdGl2ZURhdGVGaWx0ZXJWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuUmVsYXRpdmVEYXRlRmlsdGVyVmFsaWRhdG9yID0gUmVsYXRpdmVEYXRlRmlsdGVyVmFsaWRhdG9yO1xyXG5cdFx0dmFyIFRvcE5GaWx0ZXJWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFRvcE5GaWx0ZXJWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gVG9wTkZpbHRlclZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBUb3BORmlsdGVyVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInRhcmdldFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmlsdGVyVGFyZ2V0VmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJvcGVyYXRvclwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJpdGVtQ291bnRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLm51bWJlclZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZmlsdGVyVHlwZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnRvcE5GaWx0ZXJUeXBlVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJvcmRlckJ5XCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWx0ZXJUYXJnZXRWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFRvcE5GaWx0ZXJWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuVG9wTkZpbHRlclZhbGlkYXRvciA9IFRvcE5GaWx0ZXJWYWxpZGF0b3I7XHJcblx0XHR2YXIgTm90U3VwcG9ydGVkRmlsdGVyVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhOb3RTdXBwb3J0ZWRGaWx0ZXJWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gTm90U3VwcG9ydGVkRmlsdGVyVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIE5vdFN1cHBvcnRlZEZpbHRlclZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ0YXJnZXRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWx0ZXJUYXJnZXRWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcIm1lc3NhZ2VcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwibm90U3VwcG9ydGVkVHlwZU5hbWVcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZmlsdGVyVHlwZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLm5vdFN1cHBvcnRlZEZpbHRlclR5cGVWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBOb3RTdXBwb3J0ZWRGaWx0ZXJWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuTm90U3VwcG9ydGVkRmlsdGVyVmFsaWRhdG9yID0gTm90U3VwcG9ydGVkRmlsdGVyVmFsaWRhdG9yO1xyXG5cdFx0dmFyIEluY2x1ZGVFeGNsdWRlRmlsdGVyVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhJbmNsdWRlRXhjbHVkZUZpbHRlclZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBJbmNsdWRlRXhjbHVkZUZpbHRlclZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBJbmNsdWRlRXhjbHVkZUZpbHRlclZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ0YXJnZXRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpbHRlclRhcmdldFZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiaXNFeGNsdWRlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5ib29sZWFuVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ2YWx1ZXNcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmFueUFycmF5VmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJmaWx0ZXJUeXBlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuaW5jbHVkZUV4bHVkZUZpbHRlclR5cGVWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBJbmNsdWRlRXhjbHVkZUZpbHRlclZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5JbmNsdWRlRXhjbHVkZUZpbHRlclZhbGlkYXRvciA9IEluY2x1ZGVFeGNsdWRlRmlsdGVyVmFsaWRhdG9yO1xyXG5cdFx0dmFyIEZpbHRlclZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoRmlsdGVyVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEZpbHRlclZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBGaWx0ZXJWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgcmV0dXJuIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuYW55RmlsdGVyVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gRmlsdGVyVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkZpbHRlclZhbGlkYXRvciA9IEZpbHRlclZhbGlkYXRvcjtcclxuXHRcdHZhciBDb25kaXRpb25JdGVtVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhDb25kaXRpb25JdGVtVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIENvbmRpdGlvbkl0ZW1WYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgQ29uZGl0aW9uSXRlbVZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ2YWx1ZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmFueVZhbHVlVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJvcGVyYXRvclwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBDb25kaXRpb25JdGVtVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkNvbmRpdGlvbkl0ZW1WYWxpZGF0b3IgPSBDb25kaXRpb25JdGVtVmFsaWRhdG9yO1xyXG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDggKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXHRcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0XHR2YXIgRmllbGRSZXF1aXJlZFZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICBmdW5jdGlvbiBGaWVsZFJlcXVpcmVkVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBGaWVsZFJlcXVpcmVkVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBbe1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBmaWVsZCArIFwiIGlzIHJlcXVpcmVkXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgICAgIHBhdGg6IChwYXRoID8gcGF0aCArIFwiLlwiIDogXCJcIikgKyBmaWVsZCxcclxuXHRcdCAgICAgICAgICAgICAgICAgICAga2V5d29yZDogXCJyZXF1aXJlZFwiXHJcblx0XHQgICAgICAgICAgICAgICAgfV07XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gRmllbGRSZXF1aXJlZFZhbGlkYXRvcjtcclxuXHRcdH0oKSk7XHJcblx0XHRleHBvcnRzLkZpZWxkUmVxdWlyZWRWYWxpZGF0b3IgPSBGaWVsZFJlcXVpcmVkVmFsaWRhdG9yO1xyXG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDkgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXHRcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0XHR2YXIgQW55T2ZWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgZnVuY3Rpb24gQW55T2ZWYWxpZGF0b3IodmFsaWRhdG9ycykge1xyXG5cdFx0ICAgICAgICB0aGlzLnZhbGlkYXRvcnMgPSB2YWxpZGF0b3JzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBBbnlPZlZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgdmFsaWQgPSBmYWxzZTtcclxuXHRcdCAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IHRoaXMudmFsaWRhdG9yczsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcclxuXHRcdCAgICAgICAgICAgIHZhciB2YWxpZGF0b3IgPSBfYVtfaV07XHJcblx0XHQgICAgICAgICAgICB2YXIgZXJyb3JzID0gdmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgICAgICBpZiAoIWVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkID0gdHJ1ZTtcclxuXHRcdCAgICAgICAgICAgICAgICBicmVhaztcclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICBpZiAoIXZhbGlkKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gW3tcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZmllbGQgKyBcIiBwcm9wZXJ0eSBpcyBpbnZhbGlkXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgICAgIHBhdGg6IChwYXRoID8gcGF0aCArIFwiLlwiIDogXCJcIikgKyBmaWVsZCxcclxuXHRcdCAgICAgICAgICAgICAgICAgICAga2V5d29yZDogXCJpbnZhbGlkXCJcclxuXHRcdCAgICAgICAgICAgICAgICB9XTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBBbnlPZlZhbGlkYXRvcjtcclxuXHRcdH0oKSk7XHJcblx0XHRleHBvcnRzLkFueU9mVmFsaWRhdG9yID0gQW55T2ZWYWxpZGF0b3I7XHJcblx0XG5cdFxuXHQvKioqLyB9KSxcblx0LyogMTAgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuXHRcdCAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG5cdFx0ICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuXHRcdCAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuXHRcdCAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcblx0XHQgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0fSkoKTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuXHRcdHZhciB2YWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XHJcblx0XHR2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0XHR2YXIgdHlwZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRcdHZhciBSZXBvcnRMb2FkVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhSZXBvcnRMb2FkVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFJlcG9ydExvYWRWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgUmVwb3J0TG9hZFZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJhY2Nlc3NUb2tlblwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJpZFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJncm91cElkXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJzZXR0aW5nc1wiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnNldHRpbmdzVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJwYWdlTmFtZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZmlsdGVyc1wiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpbHRlcnNBcnJheVZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwicGVybWlzc2lvbnNcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5wZXJtaXNzaW9uc1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidmlld01vZGVcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy52aWV3TW9kZVZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidG9rZW5UeXBlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMudG9rZW5UeXBlVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJib29rbWFya1wiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmFwcGx5Qm9va21hcmtWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInRoZW1lXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuY3VzdG9tVGhlbWVWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBSZXBvcnRMb2FkVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLlJlcG9ydExvYWRWYWxpZGF0b3IgPSBSZXBvcnRMb2FkVmFsaWRhdG9yO1xyXG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDExICovXG5cdC8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblx0XG5cdFx0dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcblx0XHQgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcblx0XHQgICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcblx0XHQgICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG5cdFx0ICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcblx0XHQgICAgfTtcclxuXHRcdH0pKCk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0XHR2YXIgdmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xyXG5cdFx0dmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xyXG5cdFx0dmFyIHR5cGVWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XHJcblx0XHR2YXIgUmVwb3J0Q3JlYXRlVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhSZXBvcnRDcmVhdGVWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gUmVwb3J0Q3JlYXRlVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFJlcG9ydENyZWF0ZVZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJhY2Nlc3NUb2tlblwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJkYXRhc2V0SWRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZ3JvdXBJZFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidG9rZW5UeXBlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMudG9rZW5UeXBlVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ0aGVtZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmN1c3RvbVRoZW1lVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gUmVwb3J0Q3JlYXRlVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLlJlcG9ydENyZWF0ZVZhbGlkYXRvciA9IFJlcG9ydENyZWF0ZVZhbGlkYXRvcjtcclxuXHRcblx0XG5cdC8qKiovIH0pLFxuXHQvKiAxMiAqL1xuXHQvKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cdFxuXHRcdHZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG5cdFx0ICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG5cdFx0ICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xyXG5cdFx0ICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG5cdFx0ICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuXHRcdCAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG5cdFx0ICAgIH07XHJcblx0XHR9KSgpO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5cdFx0dmFyIHZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcclxuXHRcdHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcclxuXHRcdHZhciB0eXBlVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xyXG5cdFx0dmFyIERhc2hib2FyZExvYWRWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKERhc2hib2FyZExvYWRWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gRGFzaGJvYXJkTG9hZFZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBEYXNoYm9hcmRMb2FkVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImFjY2Vzc1Rva2VuXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImlkXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImdyb3VwSWRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInBhZ2VWaWV3XCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMucGFnZVZpZXdGaWVsZFZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidG9rZW5UeXBlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMudG9rZW5UeXBlVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBEYXNoYm9hcmRMb2FkVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkRhc2hib2FyZExvYWRWYWxpZGF0b3IgPSBEYXNoYm9hcmRMb2FkVmFsaWRhdG9yO1xyXG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDEzICovXG5cdC8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblx0XG5cdFx0dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcblx0XHQgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcblx0XHQgICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcblx0XHQgICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG5cdFx0ICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcblx0XHQgICAgfTtcclxuXHRcdH0pKCk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0XHR2YXIgdmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xyXG5cdFx0dmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xyXG5cdFx0dmFyIHR5cGVWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XHJcblx0XHR2YXIgVGlsZUxvYWRWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFRpbGVMb2FkVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFRpbGVMb2FkVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFRpbGVMb2FkVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImFjY2Vzc1Rva2VuXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImlkXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImRhc2hib2FyZElkXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImdyb3VwSWRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInBhZ2VWaWV3XCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ0b2tlblR5cGVcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy50b2tlblR5cGVWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcIndpZHRoXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMubnVtYmVyVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJoZWlnaHRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5udW1iZXJWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFRpbGVMb2FkVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLlRpbGVMb2FkVmFsaWRhdG9yID0gVGlsZUxvYWRWYWxpZGF0b3I7XHJcblx0XG5cdFxuXHQvKioqLyB9KSxcblx0LyogMTQgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuXHRcdCAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG5cdFx0ICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuXHRcdCAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuXHRcdCAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcblx0XHQgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0fSkoKTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuXHRcdHZhciB2YWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XHJcblx0XHR2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0XHR2YXIgdHlwZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRcdHZhciBQYWdlU2l6ZVZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoUGFnZVNpemVWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gUGFnZVNpemVWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgUGFnZVNpemVWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidHlwZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMucGFnZVNpemVUeXBlVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBQYWdlU2l6ZVZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5QYWdlU2l6ZVZhbGlkYXRvciA9IFBhZ2VTaXplVmFsaWRhdG9yO1xyXG5cdFx0dmFyIEN1c3RvbVBhZ2VTaXplVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhDdXN0b21QYWdlU2l6ZVZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBDdXN0b21QYWdlU2l6ZVZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBDdXN0b21QYWdlU2l6ZVZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ3aWR0aFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLm51bWJlclZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiaGVpZ2h0XCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMubnVtYmVyVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBDdXN0b21QYWdlU2l6ZVZhbGlkYXRvcjtcclxuXHRcdH0oUGFnZVNpemVWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuQ3VzdG9tUGFnZVNpemVWYWxpZGF0b3IgPSBDdXN0b21QYWdlU2l6ZVZhbGlkYXRvcjtcclxuXHRcdHZhciBQYWdlVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhQYWdlVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFBhZ2VWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgUGFnZVZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJuYW1lXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFBhZ2VWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuUGFnZVZhbGlkYXRvciA9IFBhZ2VWYWxpZGF0b3I7XHJcblx0XHR2YXIgUGFnZVZpZXdGaWVsZFZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoUGFnZVZpZXdGaWVsZFZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBQYWdlVmlld0ZpZWxkVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFBhZ2VWaWV3RmllbGRWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBwb3NzaWJsZVZhbHVlcyA9IFtcImFjdHVhbFNpemVcIiwgXCJmaXRUb1dpZHRoXCIsIFwib25lQ29sdW1uXCJdO1xyXG5cdFx0ICAgICAgICBpZiAocG9zc2libGVWYWx1ZXMuaW5kZXhPZihpbnB1dCkgPCAwKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gW3tcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogXCJwYWdlVmlldyBtdXN0IGJlIGEgc3RyaW5nIHdpdGggb25lIG9mIHRoZSBmb2xsb3dpbmcgdmFsdWVzOiBcXFwiYWN0dWFsU2l6ZVxcXCIsIFxcXCJmaXRUb1dpZHRoXFxcIiwgXFxcIm9uZUNvbHVtblxcXCJcIlxyXG5cdFx0ICAgICAgICAgICAgICAgIH1dO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFBhZ2VWaWV3RmllbGRWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5TdHJpbmdWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuUGFnZVZpZXdGaWVsZFZhbGlkYXRvciA9IFBhZ2VWaWV3RmllbGRWYWxpZGF0b3I7XHJcblx0XG5cdFxuXHQvKioqLyB9KSxcblx0LyogMTUgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuXHRcdCAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG5cdFx0ICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuXHRcdCAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuXHRcdCAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcblx0XHQgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0fSkoKTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuXHRcdHZhciB2YWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XHJcblx0XHR2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0XHR2YXIgdHlwZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRcdHZhciBMb2FkUW5hVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhMb2FkUW5hVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIExvYWRRbmFWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgTG9hZFFuYVZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJhY2Nlc3NUb2tlblwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJkYXRhc2V0SWRzXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdBcnJheVZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwicXVlc3Rpb25cIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInZpZXdNb2RlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMudmlld01vZGVWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInNldHRpbmdzXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMucW5hU2V0dGluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidG9rZW5UeXBlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMudG9rZW5UeXBlVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJncm91cElkXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc3RyaW5nVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBMb2FkUW5hVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkxvYWRRbmFWYWxpZGF0b3IgPSBMb2FkUW5hVmFsaWRhdG9yO1xyXG5cdFx0dmFyIFFuYVNldHRpbmdzVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhRbmFTZXR0aW5nc1ZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBRbmFTZXR0aW5nc1ZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBRbmFTZXR0aW5nc1ZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJmaWx0ZXJQYW5lRW5hYmxlZFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmJvb2xlYW5WYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImhpZGVFcnJvcnNcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5ib29sZWFuVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gUW5hU2V0dGluZ3NWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuUW5hU2V0dGluZ3NWYWxpZGF0b3IgPSBRbmFTZXR0aW5nc1ZhbGlkYXRvcjtcclxuXHRcdHZhciBRbmFJbnRlcnByZXRJbnB1dERhdGFWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFFuYUludGVycHJldElucHV0RGF0YVZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBRbmFJbnRlcnByZXRJbnB1dERhdGFWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgUW5hSW50ZXJwcmV0SW5wdXREYXRhVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImRhdGFzZXRJZHNcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdBcnJheVZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwicXVlc3Rpb25cIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFFuYUludGVycHJldElucHV0RGF0YVZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5RbmFJbnRlcnByZXRJbnB1dERhdGFWYWxpZGF0b3IgPSBRbmFJbnRlcnByZXRJbnB1dERhdGFWYWxpZGF0b3I7XHJcblx0XG5cdFxuXHQvKioqLyB9KSxcblx0LyogMTYgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuXHRcdCAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG5cdFx0ICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuXHRcdCAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuXHRcdCAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcblx0XHQgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0fSkoKTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuXHRcdHZhciB2YWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XHJcblx0XHR2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0XHR2YXIgdHlwZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRcdHZhciBTYXZlQXNQYXJhbWV0ZXJzVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhTYXZlQXNQYXJhbWV0ZXJzVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFNhdmVBc1BhcmFtZXRlcnNWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgU2F2ZUFzUGFyYW1ldGVyc1ZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJuYW1lXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFNhdmVBc1BhcmFtZXRlcnNWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuU2F2ZUFzUGFyYW1ldGVyc1ZhbGlkYXRvciA9IFNhdmVBc1BhcmFtZXRlcnNWYWxpZGF0b3I7XHJcblx0XG5cdFxuXHQvKioqLyB9KSxcblx0LyogMTcgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuXHRcdCAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG5cdFx0ICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuXHRcdCAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuXHRcdCAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcblx0XHQgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0fSkoKTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuXHRcdHZhciB0eXBlVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xyXG5cdFx0dmFyIE1hcFZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoTWFwVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIE1hcFZhbGlkYXRvcihrZXlWYWxpZGF0b3JzLCB2YWx1ZVZhbGlkYXRvcnMpIHtcclxuXHRcdCAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuXHRcdCAgICAgICAgX3RoaXMua2V5VmFsaWRhdG9ycyA9IGtleVZhbGlkYXRvcnM7XHJcblx0XHQgICAgICAgIF90aGlzLnZhbHVlVmFsaWRhdG9ycyA9IHZhbHVlVmFsaWRhdG9ycztcclxuXHRcdCAgICAgICAgcmV0dXJuIF90aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBNYXBWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIGZvciAodmFyIGtleSBpbiBpbnB1dCkge1xyXG5cdFx0ICAgICAgICAgICAgaWYgKGlucHV0Lmhhc093blByb3BlcnR5KGtleSkpIHtcclxuXHRcdCAgICAgICAgICAgICAgICB2YXIgZmllbGRzUGF0aCA9IChwYXRoID8gcGF0aCArIFwiLlwiIDogXCJcIikgKyBmaWVsZCArIFwiLlwiICsga2V5O1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSB0aGlzLmtleVZhbGlkYXRvcnM7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgIHZhciBrZXlWYWxpZGF0b3IgPSBfYVtfaV07XHJcblx0XHQgICAgICAgICAgICAgICAgICAgIGVycm9ycyA9IGtleVZhbGlkYXRvci52YWxpZGF0ZShrZXksIGZpZWxkc1BhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgICAgICAgICBmb3IgKHZhciBfYiA9IDAsIF9jID0gdGhpcy52YWx1ZVZhbGlkYXRvcnM7IF9iIDwgX2MubGVuZ3RoOyBfYisrKSB7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZVZhbGlkYXRvciA9IF9jW19iXTtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgZXJyb3JzID0gdmFsdWVWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXRba2V5XSwgZmllbGRzUGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIE1hcFZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5NYXBWYWxpZGF0b3IgPSBNYXBWYWxpZGF0b3I7XHJcblx0XG5cdFxuXHQvKioqLyB9KSxcblx0LyogMTggKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuXHRcdCAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG5cdFx0ICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuXHRcdCAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuXHRcdCAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcblx0XHQgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0fSkoKTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuXHRcdHZhciB2YWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XHJcblx0XHR2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0XHR2YXIgdHlwZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRcdHZhciBDdXN0b21MYXlvdXRWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKEN1c3RvbUxheW91dFZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBDdXN0b21MYXlvdXRWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgQ3VzdG9tTGF5b3V0VmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInBhZ2VTaXplXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMucGFnZVNpemVWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImRpc3BsYXlPcHRpb25cIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5jdXN0b21MYXlvdXREaXNwbGF5T3B0aW9uVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJwYWdlc0xheW91dFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnBhZ2VzTGF5b3V0VmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBDdXN0b21MYXlvdXRWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuQ3VzdG9tTGF5b3V0VmFsaWRhdG9yID0gQ3VzdG9tTGF5b3V0VmFsaWRhdG9yO1xyXG5cdFx0dmFyIFZpc3VhbExheW91dFZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoVmlzdWFsTGF5b3V0VmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFZpc3VhbExheW91dFZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBWaXN1YWxMYXlvdXRWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwieFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLm51bWJlclZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwieVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLm51bWJlclZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwielwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLm51bWJlclZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwid2lkdGhcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5udW1iZXJWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImhlaWdodFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLm51bWJlclZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZGlzcGxheVN0YXRlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZGlzcGxheVN0YXRlVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBWaXN1YWxMYXlvdXRWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuVmlzdWFsTGF5b3V0VmFsaWRhdG9yID0gVmlzdWFsTGF5b3V0VmFsaWRhdG9yO1xyXG5cdFx0dmFyIERpc3BsYXlTdGF0ZVZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoRGlzcGxheVN0YXRlVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIERpc3BsYXlTdGF0ZVZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBEaXNwbGF5U3RhdGVWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwibW9kZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmRpc3BsYXlTdGF0ZU1vZGVWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIERpc3BsYXlTdGF0ZVZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5EaXNwbGF5U3RhdGVWYWxpZGF0b3IgPSBEaXNwbGF5U3RhdGVWYWxpZGF0b3I7XHJcblx0XHR2YXIgUGFnZUxheW91dFZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoUGFnZUxheW91dFZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBQYWdlTGF5b3V0VmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFBhZ2VMYXlvdXRWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidmlzdWFsc0xheW91dFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMucGFnZUxheW91dFZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZGVmYXVsdExheW91dFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnZpc3VhbExheW91dFZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gUGFnZUxheW91dFZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5QYWdlTGF5b3V0VmFsaWRhdG9yID0gUGFnZUxheW91dFZhbGlkYXRvcjtcclxuXHRcblx0XG5cdC8qKiovIH0pLFxuXHQvKiAxOSAqL1xuXHQvKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cdFxuXHRcdHZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG5cdFx0ICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG5cdFx0ICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xyXG5cdFx0ICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG5cdFx0ICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuXHRcdCAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG5cdFx0ICAgIH07XHJcblx0XHR9KSgpO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5cdFx0dmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xyXG5cdFx0dmFyIHR5cGVWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XHJcblx0XHR2YXIgRXhwb3J0RGF0YVJlcXVlc3RWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKEV4cG9ydERhdGFSZXF1ZXN0VmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIEV4cG9ydERhdGFSZXF1ZXN0VmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIEV4cG9ydERhdGFSZXF1ZXN0VmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInJvd3NcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbbmV3IHR5cGVWYWxpZGF0b3JfMS5OdW1iZXJWYWxpZGF0b3IoKV1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZXhwb3J0RGF0YVR5cGVcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbbmV3IHR5cGVWYWxpZGF0b3JfMS5FbnVtVmFsaWRhdG9yKFswLCAxXSldXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIEV4cG9ydERhdGFSZXF1ZXN0VmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkV4cG9ydERhdGFSZXF1ZXN0VmFsaWRhdG9yID0gRXhwb3J0RGF0YVJlcXVlc3RWYWxpZGF0b3I7XHJcblx0XG5cdFxuXHQvKioqLyB9KSxcblx0LyogMjAgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuXHRcdCAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG5cdFx0ICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuXHRcdCAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuXHRcdCAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcblx0XHQgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0fSkoKTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuXHRcdHZhciB2YWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XHJcblx0XHR2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0XHR2YXIgdHlwZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRcdHZhciB0eXBlVmFsaWRhdG9yXzIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xyXG5cdFx0dmFyIFZpc3VhbFNlbGVjdG9yVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhWaXN1YWxTZWxlY3RvclZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBWaXN1YWxTZWxlY3RvclZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBWaXN1YWxTZWxlY3RvclZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICAvLyBOb3QgcmVxdWlyZWQgZm9yIHRoaXMgc2VsZWN0b3Igb25seSAtIEJhY2t3YXJkIGNvbXBhdGliaWxpdHkgXHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiJHNjaGVtYVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvciwgbmV3IHR5cGVWYWxpZGF0b3JfMi5TY2hlbWFWYWxpZGF0b3IoXCJodHRwOi8vcG93ZXJiaS5jb20vcHJvZHVjdC9zY2hlbWEjdmlzdWFsU2VsZWN0b3JcIildXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInZpc3VhbE5hbWVcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gVmlzdWFsU2VsZWN0b3JWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuVmlzdWFsU2VsZWN0b3JWYWxpZGF0b3IgPSBWaXN1YWxTZWxlY3RvclZhbGlkYXRvcjtcclxuXHRcdHZhciBWaXN1YWxUeXBlU2VsZWN0b3JWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFZpc3VhbFR5cGVTZWxlY3RvclZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBWaXN1YWxUeXBlU2VsZWN0b3JWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgVmlzdWFsVHlwZVNlbGVjdG9yVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcIiRzY2hlbWFcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvciwgbmV3IHR5cGVWYWxpZGF0b3JfMi5TY2hlbWFWYWxpZGF0b3IoXCJodHRwOi8vcG93ZXJiaS5jb20vcHJvZHVjdC9zY2hlbWEjdmlzdWFsVHlwZVNlbGVjdG9yXCIpXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ2aXN1YWxUeXBlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zdHJpbmdWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFZpc3VhbFR5cGVTZWxlY3RvclZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5WaXN1YWxUeXBlU2VsZWN0b3JWYWxpZGF0b3IgPSBWaXN1YWxUeXBlU2VsZWN0b3JWYWxpZGF0b3I7XHJcblx0XHR2YXIgU2xpY2VyVGFyZ2V0U2VsZWN0b3JWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFNsaWNlclRhcmdldFNlbGVjdG9yVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFNsaWNlclRhcmdldFNlbGVjdG9yVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFNsaWNlclRhcmdldFNlbGVjdG9yVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcIiRzY2hlbWFcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnN0cmluZ1ZhbGlkYXRvciwgbmV3IHR5cGVWYWxpZGF0b3JfMi5TY2hlbWFWYWxpZGF0b3IoXCJodHRwOi8vcG93ZXJiaS5jb20vcHJvZHVjdC9zY2hlbWEjc2xpY2VyVGFyZ2V0U2VsZWN0b3JcIildXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInRhcmdldFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc2xpY2VyVGFyZ2V0VmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBTbGljZXJUYXJnZXRTZWxlY3RvclZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5TbGljZXJUYXJnZXRTZWxlY3RvclZhbGlkYXRvciA9IFNsaWNlclRhcmdldFNlbGVjdG9yVmFsaWRhdG9yO1xyXG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDIxICovXG5cdC8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblx0XG5cdFx0dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcblx0XHQgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcblx0XHQgICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcblx0XHQgICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG5cdFx0ICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcblx0XHQgICAgfTtcclxuXHRcdH0pKCk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0XHR2YXIgdmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xyXG5cdFx0dmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xyXG5cdFx0dmFyIHR5cGVWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XHJcblx0XHR2YXIgU2xpY2VyVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhTbGljZXJWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gU2xpY2VyVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFNsaWNlclZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJzZWxlY3RvclwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpZWxkUmVxdWlyZWRWYWxpZGF0b3IsIHZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc2xpY2VyU2VsZWN0b3JWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInN0YXRlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zbGljZXJTdGF0ZVZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gU2xpY2VyVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLlNsaWNlclZhbGlkYXRvciA9IFNsaWNlclZhbGlkYXRvcjtcclxuXHRcdHZhciBTbGljZXJTdGF0ZVZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoU2xpY2VyU3RhdGVWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gU2xpY2VyU3RhdGVWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgU2xpY2VyU3RhdGVWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwiZmlsdGVyc1wiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLmZpbHRlcnNBcnJheVZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gU2xpY2VyU3RhdGVWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuU2xpY2VyU3RhdGVWYWxpZGF0b3IgPSBTbGljZXJTdGF0ZVZhbGlkYXRvcjtcclxuXHRcblx0XG5cdC8qKiovIH0pLFxuXHQvKiAyMiAqL1xuXHQvKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cdFxuXHRcdHZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG5cdFx0ICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG5cdFx0ICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xyXG5cdFx0ICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG5cdFx0ICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuXHRcdCAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG5cdFx0ICAgIH07XHJcblx0XHR9KSgpO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5cdFx0dmFyIHZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcclxuXHRcdHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcclxuXHRcdHZhciB0eXBlVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xyXG5cdFx0dmFyIFZpc3VhbFNldHRpbmdzVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhWaXN1YWxTZXR0aW5nc1ZhbGlkYXRvciwgX3N1cGVyKTtcclxuXHRcdCAgICBmdW5jdGlvbiBWaXN1YWxTZXR0aW5nc1ZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBWaXN1YWxTZXR0aW5nc1ZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJ2aXN1YWxIZWFkZXJzXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMudmlzdWFsSGVhZGVyc1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIFZpc3VhbFNldHRpbmdzVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLlZpc3VhbFNldHRpbmdzVmFsaWRhdG9yID0gVmlzdWFsU2V0dGluZ3NWYWxpZGF0b3I7XHJcblx0XHR2YXIgVmlzdWFsSGVhZGVyU2V0dGluZ3NWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKFZpc3VhbEhlYWRlclNldHRpbmdzVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFZpc3VhbEhlYWRlclNldHRpbmdzVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFZpc3VhbEhlYWRlclNldHRpbmdzVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInZpc2libGVcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5ib29sZWFuVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBWaXN1YWxIZWFkZXJTZXR0aW5nc1ZhbGlkYXRvcjtcclxuXHRcdH0odHlwZVZhbGlkYXRvcl8xLk9iamVjdFZhbGlkYXRvcikpO1xyXG5cdFx0ZXhwb3J0cy5WaXN1YWxIZWFkZXJTZXR0aW5nc1ZhbGlkYXRvciA9IFZpc3VhbEhlYWRlclNldHRpbmdzVmFsaWRhdG9yO1xyXG5cdFx0dmFyIFZpc3VhbEhlYWRlclZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoVmlzdWFsSGVhZGVyVmFsaWRhdG9yLCBfc3VwZXIpO1xyXG5cdFx0ICAgIGZ1bmN0aW9uIFZpc3VhbEhlYWRlclZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBWaXN1YWxIZWFkZXJWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwic2V0dGluZ3NcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5maWVsZFJlcXVpcmVkVmFsaWRhdG9yLCB2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnZpc3VhbEhlYWRlclNldHRpbmdzVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJzZWxlY3RvclwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnZpc3VhbEhlYWRlclNlbGVjdG9yVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgXTtcclxuXHRcdCAgICAgICAgdmFyIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yID0gbmV3IG11bHRpcGxlRmllbGRzVmFsaWRhdG9yXzEuTXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IoZmllbGRzKTtcclxuXHRcdCAgICAgICAgcmV0dXJuIG11bHRpcGxlRmllbGRzVmFsaWRhdG9yLnZhbGlkYXRlKGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZXR1cm4gVmlzdWFsSGVhZGVyVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLlZpc3VhbEhlYWRlclZhbGlkYXRvciA9IFZpc3VhbEhlYWRlclZhbGlkYXRvcjtcclxuXHRcblx0XG5cdC8qKiovIH0pLFxuXHQvKiAyMyAqL1xuXHQvKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cdFxuXHRcdHZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG5cdFx0ICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG5cdFx0ICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xyXG5cdFx0ICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG5cdFx0ICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuXHRcdCAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG5cdFx0ICAgIH07XHJcblx0XHR9KSgpO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5cdFx0dmFyIHZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcclxuXHRcdHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcclxuXHRcdHZhciB0eXBlVmFsaWRhdG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xyXG5cdFx0dmFyIENvbW1hbmRzU2V0dGluZ3NWYWxpZGF0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0XHQgICAgX19leHRlbmRzKENvbW1hbmRzU2V0dGluZ3NWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gQ29tbWFuZHNTZXR0aW5nc1ZhbGlkYXRvcigpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICBDb21tYW5kc1NldHRpbmdzVmFsaWRhdG9yLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnB1dCwgcGF0aCwgZmllbGQpIHtcclxuXHRcdCAgICAgICAgaWYgKGlucHV0ID09IG51bGwpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBlcnJvcnMgPSBfc3VwZXIucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcywgaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICAgICAgaWYgKGVycm9ycykge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIGVycm9ycztcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZmllbGRzID0gW1xyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImNvcHlcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zaW5nbGVDb21tYW5kU2V0dGluZ3NWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImRyaWxsXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc2luZ2xlQ29tbWFuZFNldHRpbmdzVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJkcmlsbHRocm91Z2hcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zaW5nbGVDb21tYW5kU2V0dGluZ3NWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcImV4cGFuZENvbGxhcHNlXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc2luZ2xlQ29tbWFuZFNldHRpbmdzVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJleHBvcnREYXRhXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc2luZ2xlQ29tbWFuZFNldHRpbmdzVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJpbmNsdWRlRXhjbHVkZVwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnNpbmdsZUNvbW1hbmRTZXR0aW5nc1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwicmVtb3ZlVmlzdWFsXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuc2luZ2xlQ29tbWFuZFNldHRpbmdzVmFsaWRhdG9yXVxyXG5cdFx0ICAgICAgICAgICAgfSxcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJzZWFyY2hcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zaW5nbGVDb21tYW5kU2V0dGluZ3NWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInNlZURhdGFcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zaW5nbGVDb21tYW5kU2V0dGluZ3NWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInNvcnRcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5zaW5nbGVDb21tYW5kU2V0dGluZ3NWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGZpZWxkOiBcInNwb3RsaWdodFwiLFxyXG5cdFx0ICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IFt2YWxpZGF0b3JfMS5WYWxpZGF0b3JzLnNpbmdsZUNvbW1hbmRTZXR0aW5nc1ZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIENvbW1hbmRzU2V0dGluZ3NWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuQ29tbWFuZHNTZXR0aW5nc1ZhbGlkYXRvciA9IENvbW1hbmRzU2V0dGluZ3NWYWxpZGF0b3I7XHJcblx0XHR2YXIgU2luZ2xlQ29tbWFuZFNldHRpbmdzVmFsaWRhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdFx0ICAgIF9fZXh0ZW5kcyhTaW5nbGVDb21tYW5kU2V0dGluZ3NWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gU2luZ2xlQ29tbWFuZFNldHRpbmdzVmFsaWRhdG9yKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIFNpbmdsZUNvbW1hbmRTZXR0aW5nc1ZhbGlkYXRvci5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoaW5wdXQsIHBhdGgsIGZpZWxkKSB7XHJcblx0XHQgICAgICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgZXJyb3JzID0gX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsIGlucHV0LCBwYXRoLCBmaWVsZCk7XHJcblx0XHQgICAgICAgIGlmIChlcnJvcnMpIHtcclxuXHRcdCAgICAgICAgICAgIHJldHVybiBlcnJvcnM7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGZpZWxkcyA9IFtcclxuXHRcdCAgICAgICAgICAgIHtcclxuXHRcdCAgICAgICAgICAgICAgICBmaWVsZDogXCJkaXNwbGF5T3B0aW9uXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW3ZhbGlkYXRvcl8xLlZhbGlkYXRvcnMuZmllbGRSZXF1aXJlZFZhbGlkYXRvciwgdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy5jb21tYW5kRGlzcGxheU9wdGlvblZhbGlkYXRvcl1cclxuXHRcdCAgICAgICAgICAgIH0sXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwic2VsZWN0b3JcIixcclxuXHRcdCAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiBbdmFsaWRhdG9yXzEuVmFsaWRhdG9ycy52aXN1YWxDb21tYW5kU2VsZWN0b3JWYWxpZGF0b3JdXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICBdO1xyXG5cdFx0ICAgICAgICB2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IgPSBuZXcgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMS5NdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcihmaWVsZHMpO1xyXG5cdFx0ICAgICAgICByZXR1cm4gbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3IudmFsaWRhdGUoaW5wdXQsIHBhdGgsIGZpZWxkKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIHJldHVybiBTaW5nbGVDb21tYW5kU2V0dGluZ3NWYWxpZGF0b3I7XHJcblx0XHR9KHR5cGVWYWxpZGF0b3JfMS5PYmplY3RWYWxpZGF0b3IpKTtcclxuXHRcdGV4cG9ydHMuU2luZ2xlQ29tbWFuZFNldHRpbmdzVmFsaWRhdG9yID0gU2luZ2xlQ29tbWFuZFNldHRpbmdzVmFsaWRhdG9yO1xyXG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDI0ICovXG5cdC8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblx0XG5cdFx0dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcblx0XHQgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuXHRcdCAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcblx0XHQgICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcblx0XHQgICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcblx0XHQgICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG5cdFx0ICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcblx0XHQgICAgfTtcclxuXHRcdH0pKCk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0XHR2YXIgbXVsdGlwbGVGaWVsZHNWYWxpZGF0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0XHR2YXIgdHlwZVZhbGlkYXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHRcdHZhciBDdXN0b21UaGVtZVZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHRcdCAgICBfX2V4dGVuZHMoQ3VzdG9tVGhlbWVWYWxpZGF0b3IsIF9zdXBlcik7XHJcblx0XHQgICAgZnVuY3Rpb24gQ3VzdG9tVGhlbWVWYWxpZGF0b3IoKSB7XHJcblx0XHQgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuXHRcdCAgICB9XHJcblx0XHQgICAgQ3VzdG9tVGhlbWVWYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGlucHV0LCBwYXRoLCBmaWVsZCkge1xyXG5cdFx0ICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xyXG5cdFx0ICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGVycm9ycyA9IF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzLCBpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgICAgICBpZiAoZXJyb3JzKSB7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gZXJyb3JzO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIHZhciBmaWVsZHMgPSBbXHJcblx0XHQgICAgICAgICAgICB7XHJcblx0XHQgICAgICAgICAgICAgICAgZmllbGQ6IFwidGhlbWVKc29uXCIsXHJcblx0XHQgICAgICAgICAgICAgICAgdmFsaWRhdG9yczogW25ldyB0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKCldXHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIF07XHJcblx0XHQgICAgICAgIHZhciBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvciA9IG5ldyBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvcl8xLk11bHRpcGxlRmllbGRzVmFsaWRhdG9yKGZpZWxkcyk7XHJcblx0XHQgICAgICAgIHJldHVybiBtdWx0aXBsZUZpZWxkc1ZhbGlkYXRvci52YWxpZGF0ZShpbnB1dCwgcGF0aCwgZmllbGQpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgcmV0dXJuIEN1c3RvbVRoZW1lVmFsaWRhdG9yO1xyXG5cdFx0fSh0eXBlVmFsaWRhdG9yXzEuT2JqZWN0VmFsaWRhdG9yKSk7XHJcblx0XHRleHBvcnRzLkN1c3RvbVRoZW1lVmFsaWRhdG9yID0gQ3VzdG9tVGhlbWVWYWxpZGF0b3I7XHJcblx0XG5cdFxuXHQvKioqLyB9KVxuXHQvKioqKioqLyBdKVxuXHR9KTtcblx0O1xuXHQvLyMgc291cmNlTWFwcGluZ1VSTD1tb2RlbHMuanMubWFwXG5cbi8qKiovIH0pLFxuLyogNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdHZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgZnVuY3Rpb24gKGQsIGIpIHtcclxuXHQgICAgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07XHJcblx0ICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG5cdCAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcblx0fTtcclxuXHR2YXIgZW1iZWQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xyXG5cdHZhciBtb2RlbHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xyXG5cdHZhciB1dGlscyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XHJcblx0dmFyIGVycm9ycyA9IF9fd2VicGFja19yZXF1aXJlX18oNik7XHJcblx0dmFyIHBhZ2VfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNyk7XHJcblx0dmFyIGRlZmF1bHRzXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xyXG5cdHZhciBib29rbWFya3NNYW5hZ2VyXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKTtcclxuXHQvKipcclxuXHQgKiBUaGUgUG93ZXIgQkkgUmVwb3J0IGVtYmVkIGNvbXBvbmVudFxyXG5cdCAqXHJcblx0ICogQGV4cG9ydFxyXG5cdCAqIEBjbGFzcyBSZXBvcnRcclxuXHQgKiBAZXh0ZW5kcyB7ZW1iZWQuRW1iZWR9XHJcblx0ICogQGltcGxlbWVudHMge0lSZXBvcnROb2RlfVxyXG5cdCAqIEBpbXBsZW1lbnRzIHtJRmlsdGVyYWJsZX1cclxuXHQgKi9cclxuXHR2YXIgUmVwb3J0ID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHQgICAgX19leHRlbmRzKFJlcG9ydCwgX3N1cGVyKTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYSBQb3dlciBCSSBSZXBvcnQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwYXJhbSB7c2VydmljZS5TZXJ2aWNlfSBzZXJ2aWNlXHJcblx0ICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcclxuXHQgICAgICogQHBhcmFtIHtlbWJlZC5JRW1iZWRDb25maWd1cmF0aW9ufSBjb25maWdcclxuXHQgICAgICovXHJcblx0ICAgIGZ1bmN0aW9uIFJlcG9ydChzZXJ2aWNlLCBlbGVtZW50LCBiYXNlQ29uZmlnLCBwaGFzZWRSZW5kZXIsIGlmcmFtZSkge1xyXG5cdCAgICAgICAgdmFyIGNvbmZpZyA9IGJhc2VDb25maWc7XHJcblx0ICAgICAgICB2YXIgZmlsdGVyUGFuZUVuYWJsZWQgPSAoY29uZmlnLnNldHRpbmdzICYmIGNvbmZpZy5zZXR0aW5ncy5maWx0ZXJQYW5lRW5hYmxlZCkgfHwgIShlbGVtZW50LmdldEF0dHJpYnV0ZShSZXBvcnQuZmlsdGVyUGFuZUVuYWJsZWRBdHRyaWJ1dGUpID09PSBcImZhbHNlXCIpO1xyXG5cdCAgICAgICAgdmFyIG5hdkNvbnRlbnRQYW5lRW5hYmxlZCA9IChjb25maWcuc2V0dGluZ3MgJiYgY29uZmlnLnNldHRpbmdzLm5hdkNvbnRlbnRQYW5lRW5hYmxlZCkgfHwgIShlbGVtZW50LmdldEF0dHJpYnV0ZShSZXBvcnQubmF2Q29udGVudFBhbmVFbmFibGVkQXR0cmlidXRlKSA9PT0gXCJmYWxzZVwiKTtcclxuXHQgICAgICAgIHZhciBzZXR0aW5ncyA9IHV0aWxzLmFzc2lnbih7XHJcblx0ICAgICAgICAgICAgZmlsdGVyUGFuZUVuYWJsZWQ6IGZpbHRlclBhbmVFbmFibGVkLFxyXG5cdCAgICAgICAgICAgIG5hdkNvbnRlbnRQYW5lRW5hYmxlZDogbmF2Q29udGVudFBhbmVFbmFibGVkXHJcblx0ICAgICAgICB9LCBjb25maWcuc2V0dGluZ3MpO1xyXG5cdCAgICAgICAgdmFyIGNvbmZpZ0NvcHkgPSB1dGlscy5hc3NpZ24oeyBzZXR0aW5nczogc2V0dGluZ3MgfSwgY29uZmlnKTtcclxuXHQgICAgICAgIF9zdXBlci5jYWxsKHRoaXMsIHNlcnZpY2UsIGVsZW1lbnQsIGNvbmZpZ0NvcHksIGlmcmFtZSwgcGhhc2VkUmVuZGVyKTtcclxuXHQgICAgICAgIHRoaXMubG9hZFBhdGggPSBcIi9yZXBvcnQvbG9hZFwiO1xyXG5cdCAgICAgICAgdGhpcy5waGFzZWRMb2FkUGF0aCA9IFwiL3JlcG9ydC9wcmVwYXJlXCI7XHJcblx0ICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseSh0aGlzLmFsbG93ZWRFdmVudHMsIFJlcG9ydC5hbGxvd2VkRXZlbnRzKTtcclxuXHQgICAgICAgIHRoaXMuYm9va21hcmtzTWFuYWdlciA9IG5ldyBib29rbWFya3NNYW5hZ2VyXzEuQm9va21hcmtzTWFuYWdlcihzZXJ2aWNlLCBjb25maWcsIHRoaXMuaWZyYW1lKTtcclxuXHQgICAgfVxyXG5cdCAgICAvKipcclxuXHQgICAgICogQWRkcyBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBmb3IgdGhlIHByZXZpb3VzIGxvYWQgY29uZmlndXJhdGlvbiwgd2hpY2ggdXNlZCB0aGUgcmVwb3J0SWQgcXVlcnkgcGFyYW1ldGVyIHRvIHNwZWNpZnkgdGhlIHJlcG9ydCBJRFxyXG5cdCAgICAgKiAoZS5nLiBodHRwOi8vZW1iZWRkZWQucG93ZXJiaS5jb20vYXBwVG9rZW5SZXBvcnRFbWJlZD9yZXBvcnRJZD04NTQ4NDZlZC0yMTA2LTRkYzItYmM1OC1lYjc3NTMzYmYyZjEpLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBCeSBleHRyYWN0aW5nIHRoZSBJRCB3ZSBjYW4gZW5zdXJlIHRoYXQgdGhlIElEIGlzIGFsd2F5cyBleHBsaWNpdGx5IHByb3ZpZGVkIGFzIHBhcnQgb2YgdGhlIGxvYWQgY29uZmlndXJhdGlvbi5cclxuXHQgICAgICpcclxuXHQgICAgICogQHN0YXRpY1xyXG5cdCAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsXHJcblx0ICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcblx0ICAgICAqL1xyXG5cdCAgICBSZXBvcnQuZmluZElkRnJvbUVtYmVkVXJsID0gZnVuY3Rpb24gKHVybCkge1xyXG5cdCAgICAgICAgdmFyIHJlcG9ydElkUmVnRXggPSAvcmVwb3J0SWQ9XCI/KFteJl0rKVwiPy87XHJcblx0ICAgICAgICB2YXIgcmVwb3J0SWRNYXRjaCA9IHVybC5tYXRjaChyZXBvcnRJZFJlZ0V4KTtcclxuXHQgICAgICAgIHZhciByZXBvcnRJZDtcclxuXHQgICAgICAgIGlmIChyZXBvcnRJZE1hdGNoKSB7XHJcblx0ICAgICAgICAgICAgcmVwb3J0SWQgPSByZXBvcnRJZE1hdGNoWzFdO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIHJlcG9ydElkO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogUmVuZGVyIGEgcHJlbG9hZGVkIHJlcG9ydCwgdXNpbmcgcGhhc2VkIGVtYmVkZGluZyBBUElcclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiAvLyBMb2FkIHJlcG9ydFxyXG5cdCAgICAgKiB2YXIgcmVwb3J0ID0gcG93ZXJiaS5sb2FkKGVsZW1lbnQsIGNvbmZpZyk7XHJcblx0ICAgICAqXHJcblx0ICAgICAqIC4uLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiAvLyBSZW5kZXIgcmVwb3J0XHJcblx0ICAgICAqIHJlcG9ydC5yZW5kZXIoKVxyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XHJcblx0ICAgICAqL1xyXG5cdCAgICBSZXBvcnQucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIChjb25maWcpIHtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2UuaHBtLnBvc3QoXCIvcmVwb3J0L3JlbmRlclwiLCBjb25maWcsIHsgdWlkOiB0aGlzLmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSlcclxuXHQgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogR2V0cyBmaWx0ZXJzIHRoYXQgYXJlIGFwcGxpZWQgYXQgdGhlIHJlcG9ydCBsZXZlbC5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiAvLyBHZXQgZmlsdGVycyBhcHBsaWVkIGF0IHJlcG9ydCBsZXZlbFxyXG5cdCAgICAgKiByZXBvcnQuZ2V0RmlsdGVycygpXHJcblx0ICAgICAqICAgLnRoZW4oZmlsdGVycyA9PiB7XHJcblx0ICAgICAqICAgICAuLi5cclxuXHQgICAgICogICB9KTtcclxuXHQgICAgICogYGBgXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEByZXR1cm5zIHtQcm9taXNlPG1vZGVscy5JRmlsdGVyW10+fVxyXG5cdCAgICAgKi9cclxuXHQgICAgUmVwb3J0LnByb3RvdHlwZS5nZXRGaWx0ZXJzID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgaWYgKHV0aWxzLmlzUkRMRW1iZWQodGhpcy5jb25maWcuZW1iZWRVcmwpKSB7XHJcblx0ICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9ycy5BUElOb3RTdXBwb3J0ZWRGb3JSRExFcnJvcik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmhwbS5nZXQoXCIvcmVwb3J0L2ZpbHRlcnNcIiwgeyB1aWQ6IHRoaXMuY29uZmlnLnVuaXF1ZUlkIH0sIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpXHJcblx0ICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5ib2R5OyB9LCBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBHZXRzIHRoZSByZXBvcnQgSUQgZnJvbSB0aGUgZmlyc3QgYXZhaWxhYmxlIGxvY2F0aW9uOiBvcHRpb25zLCBhdHRyaWJ1dGUsIGVtYmVkIHVybC5cclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge3N0cmluZ31cclxuXHQgICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUuZ2V0SWQgPSBmdW5jdGlvbiAoKSB7XHJcblx0ICAgICAgICB2YXIgY29uZmlnID0gdGhpcy5jb25maWc7XHJcblx0ICAgICAgICB2YXIgcmVwb3J0SWQgPSBjb25maWcuaWQgfHwgdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZShSZXBvcnQucmVwb3J0SWRBdHRyaWJ1dGUpIHx8IFJlcG9ydC5maW5kSWRGcm9tRW1iZWRVcmwoY29uZmlnLmVtYmVkVXJsKTtcclxuXHQgICAgICAgIGlmICh0eXBlb2YgcmVwb3J0SWQgIT09ICdzdHJpbmcnIHx8IHJlcG9ydElkLmxlbmd0aCA9PT0gMCkge1xyXG5cdCAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlJlcG9ydCBpZCBpcyByZXF1aXJlZCwgYnV0IGl0IHdhcyBub3QgZm91bmQuIFlvdSBtdXN0IHByb3ZpZGUgYW4gaWQgZWl0aGVyIGFzIHBhcnQgb2YgZW1iZWQgY29uZmlndXJhdGlvbiBvciBhcyBhdHRyaWJ1dGUgJ1wiICsgUmVwb3J0LnJlcG9ydElkQXR0cmlidXRlICsgXCInLlwiKTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHJldHVybiByZXBvcnRJZDtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEdldHMgdGhlIGxpc3Qgb2YgcGFnZXMgd2l0aGluIHRoZSByZXBvcnQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogcmVwb3J0LmdldFBhZ2VzKClcclxuXHQgICAgICogIC50aGVuKHBhZ2VzID0+IHtcclxuXHQgICAgICogICAgICAuLi5cclxuXHQgICAgICogIH0pO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8UGFnZVtdPn1cclxuXHQgICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUuZ2V0UGFnZXMgPSBmdW5jdGlvbiAoKSB7XHJcblx0ICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG5cdCAgICAgICAgaWYgKHV0aWxzLmlzUkRMRW1iZWQodGhpcy5jb25maWcuZW1iZWRVcmwpKSB7XHJcblx0ICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9ycy5BUElOb3RTdXBwb3J0ZWRGb3JSRExFcnJvcik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmhwbS5nZXQoJy9yZXBvcnQvcGFnZXMnLCB7IHVpZDogdGhpcy5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuYm9keVxyXG5cdCAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChwYWdlKSB7XHJcblx0ICAgICAgICAgICAgICAgIHJldHVybiBuZXcgcGFnZV8xLlBhZ2UoX3RoaXMsIHBhZ2UubmFtZSwgcGFnZS5kaXNwbGF5TmFtZSwgcGFnZS5pc0FjdGl2ZSwgcGFnZS52aXNpYmlsaXR5LCBwYWdlLmRlZmF1bHRTaXplLCBwYWdlLmRlZmF1bHREaXNwbGF5T3B0aW9uKTtcclxuXHQgICAgICAgICAgICB9KTtcclxuXHQgICAgICAgIH0sIGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYSBQYWdlLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBOb3JtYWxseSB5b3Ugd291bGQgZ2V0IFBhZ2Ugb2JqZWN0cyBieSBjYWxsaW5nIGByZXBvcnQuZ2V0UGFnZXMoKWAsIGJ1dCBpbiB0aGUgY2FzZVxyXG5cdCAgICAgKiB0aGF0IHRoZSBwYWdlIG5hbWUgaXMga25vd24gYW5kIHlvdSB3YW50IHRvIHBlcmZvcm0gYW4gYWN0aW9uIG9uIGEgcGFnZSB3aXRob3V0IGhhdmluZyB0byByZXRyaWV2ZSBpdFxyXG5cdCAgICAgKiB5b3UgY2FuIGNyZWF0ZSBpdCBkaXJlY3RseS5cclxuXHQgICAgICpcclxuXHQgICAgICogTm90ZTogQmVjYXVzZSB5b3UgYXJlIGNyZWF0aW5nIHRoZSBwYWdlIG1hbnVhbGx5IHRoZXJlIGlzIG5vIGd1YXJhbnRlZSB0aGF0IHRoZSBwYWdlIGFjdHVhbGx5IGV4aXN0cyBpbiB0aGUgcmVwb3J0LCBhbmQgc3Vic2VxdWVudCByZXF1ZXN0cyBjb3VsZCBmYWlsLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBgYGBqYXZhc2NyaXB0XHJcblx0ICAgICAqIGNvbnN0IHBhZ2UgPSByZXBvcnQucGFnZSgnUmVwb3J0U2VjdGlvbjEnKTtcclxuXHQgICAgICogcGFnZS5zZXRBY3RpdmUoKTtcclxuXHQgICAgICogYGBgXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbZGlzcGxheU5hbWVdXHJcblx0ICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzQWN0aXZlXVxyXG5cdCAgICAgKiBAcmV0dXJucyB7UGFnZX1cclxuXHQgICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUucGFnZSA9IGZ1bmN0aW9uIChuYW1lLCBkaXNwbGF5TmFtZSwgaXNBY3RpdmUsIHZpc2liaWxpdHkpIHtcclxuXHQgICAgICAgIHJldHVybiBuZXcgcGFnZV8xLlBhZ2UodGhpcywgbmFtZSwgZGlzcGxheU5hbWUsIGlzQWN0aXZlLCB2aXNpYmlsaXR5KTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFByaW50cyB0aGUgYWN0aXZlIHBhZ2Ugb2YgdGhlIHJlcG9ydCBieSBpbnZva2luZyBgd2luZG93LnByaW50KClgIG9uIHRoZSBlbWJlZCBpZnJhbWUgY29tcG9uZW50LlxyXG5cdCAgICAgKi9cclxuXHQgICAgUmVwb3J0LnByb3RvdHlwZS5wcmludCA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIGlmICh1dGlscy5pc1JETEVtYmVkKHRoaXMuY29uZmlnLmVtYmVkVXJsKSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcnMuQVBJTm90U3VwcG9ydGVkRm9yUkRMRXJyb3IpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5ocG0ucG9zdCgnL3JlcG9ydC9wcmludCcsIG51bGwsIHsgdWlkOiB0aGlzLmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSlcclxuXHQgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogUmVtb3ZlcyBhbGwgZmlsdGVycyBhdCB0aGUgcmVwb3J0IGxldmVsLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBgYGBqYXZhc2NyaXB0XHJcblx0ICAgICAqIHJlcG9ydC5yZW1vdmVGaWx0ZXJzKCk7XHJcblx0ICAgICAqIGBgYFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cclxuXHQgICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUucmVtb3ZlRmlsdGVycyA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIGlmICh1dGlscy5pc1JETEVtYmVkKHRoaXMuY29uZmlnLmVtYmVkVXJsKSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcnMuQVBJTm90U3VwcG9ydGVkRm9yUkRMRXJyb3IpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuc2V0RmlsdGVycyhbXSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBTZXRzIHRoZSBhY3RpdmUgcGFnZSBvZiB0aGUgcmVwb3J0LlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBgYGBqYXZhc2NyaXB0XHJcblx0ICAgICAqIHJlcG9ydC5zZXRQYWdlKFwicGFnZTJcIilcclxuXHQgICAgICogIC5jYXRjaChlcnJvciA9PiB7IC4uLiB9KTtcclxuXHQgICAgICogYGBgXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYWdlTmFtZVxyXG5cdCAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cclxuXHQgICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUuc2V0UGFnZSA9IGZ1bmN0aW9uIChwYWdlTmFtZSkge1xyXG5cdCAgICAgICAgaWYgKHV0aWxzLmlzUkRMRW1iZWQodGhpcy5jb25maWcuZW1iZWRVcmwpKSB7XHJcblx0ICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9ycy5BUElOb3RTdXBwb3J0ZWRGb3JSRExFcnJvcik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICB2YXIgcGFnZSA9IHtcclxuXHQgICAgICAgICAgICBuYW1lOiBwYWdlTmFtZSxcclxuXHQgICAgICAgICAgICBkaXNwbGF5TmFtZTogbnVsbCxcclxuXHQgICAgICAgICAgICBpc0FjdGl2ZTogdHJ1ZVxyXG5cdCAgICAgICAgfTtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2UuaHBtLnB1dCgnL3JlcG9ydC9wYWdlcy9hY3RpdmUnLCBwYWdlLCB7IHVpZDogdGhpcy5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogU2V0cyBmaWx0ZXJzIGF0IHRoZSByZXBvcnQgbGV2ZWwuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogY29uc3QgZmlsdGVyczogW1xyXG5cdCAgICAgKiAgICAuLi5cclxuXHQgICAgICogXTtcclxuXHQgICAgICpcclxuXHQgICAgICogcmVwb3J0LnNldEZpbHRlcnMoZmlsdGVycylcclxuXHQgICAgICogIC5jYXRjaChlcnJvcnMgPT4ge1xyXG5cdCAgICAgKiAgICAuLi5cclxuXHQgICAgICogIH0pO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHBhcmFtIHsobW9kZWxzLklGaWx0ZXJbXSl9IGZpbHRlcnNcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XHJcblx0ICAgICAqL1xyXG5cdCAgICBSZXBvcnQucHJvdG90eXBlLnNldEZpbHRlcnMgPSBmdW5jdGlvbiAoZmlsdGVycykge1xyXG5cdCAgICAgICAgaWYgKHV0aWxzLmlzUkRMRW1iZWQodGhpcy5jb25maWcuZW1iZWRVcmwpKSB7XHJcblx0ICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9ycy5BUElOb3RTdXBwb3J0ZWRGb3JSRExFcnJvcik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmhwbS5wdXQoXCIvcmVwb3J0L2ZpbHRlcnNcIiwgZmlsdGVycywgeyB1aWQ6IHRoaXMuY29uZmlnLnVuaXF1ZUlkIH0sIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpXHJcblx0ICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFVwZGF0ZXMgdmlzaWJpbGl0eSBzZXR0aW5ncyBmb3IgdGhlIGZpbHRlciBwYW5lIGFuZCB0aGUgcGFnZSBuYXZpZ2F0aW9uIHBhbmUuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogY29uc3QgbmV3U2V0dGluZ3MgPSB7XHJcblx0ICAgICAqICAgbmF2Q29udGVudFBhbmVFbmFibGVkOiB0cnVlLFxyXG5cdCAgICAgKiAgIGZpbHRlclBhbmVFbmFibGVkOiBmYWxzZVxyXG5cdCAgICAgKiB9O1xyXG5cdCAgICAgKlxyXG5cdCAgICAgKiByZXBvcnQudXBkYXRlU2V0dGluZ3MobmV3U2V0dGluZ3MpXHJcblx0ICAgICAqICAgLmNhdGNoKGVycm9yID0+IHsgLi4uIH0pO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHBhcmFtIHttb2RlbHMuSVNldHRpbmdzfSBzZXR0aW5nc1xyXG5cdCAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cclxuXHQgICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUudXBkYXRlU2V0dGluZ3MgPSBmdW5jdGlvbiAoc2V0dGluZ3MpIHtcclxuXHQgICAgICAgIGlmICh1dGlscy5pc1JETEVtYmVkKHRoaXMuY29uZmlnLmVtYmVkVXJsKSAmJiBzZXR0aW5ncy5jdXN0b21MYXlvdXQgIT0gbnVsbCkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcnMuQVBJTm90U3VwcG9ydGVkRm9yUkRMRXJyb3IpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5ocG0ucGF0Y2goJy9yZXBvcnQvc2V0dGluZ3MnLCBzZXR0aW5ncywgeyB1aWQ6IHRoaXMuY29uZmlnLnVuaXF1ZUlkIH0sIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpXHJcblx0ICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFZhbGlkYXRlIGxvYWQgY29uZmlndXJhdGlvbi5cclxuXHQgICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoY29uZmlnKSB7XHJcblx0ICAgICAgICByZXR1cm4gbW9kZWxzLnZhbGlkYXRlUmVwb3J0TG9hZChjb25maWcpO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogUG9wdWxhdGUgY29uZmlnIGZvciBsb2FkIGNvbmZpZ1xyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0ge0lFbWJlZENvbmZpZ3VyYXRpb25CYXNlfVxyXG5cdCAgICAgKiBAcmV0dXJucyB7dm9pZH1cclxuXHQgICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUucG9wdWxhdGVDb25maWcgPSBmdW5jdGlvbiAoYmFzZUNvbmZpZykge1xyXG5cdCAgICAgICAgdmFyIGNvbmZpZyA9IGJhc2VDb25maWc7XHJcblx0ICAgICAgICBpZiAoY29uZmlnLnNldHRpbmdzICYmIChjb25maWcuc2V0dGluZ3MubGF5b3V0VHlwZSA9PT0gbW9kZWxzLkxheW91dFR5cGUuTW9iaWxlTGFuZHNjYXBlIHx8IGNvbmZpZy5zZXR0aW5ncy5sYXlvdXRUeXBlID09PSBtb2RlbHMuTGF5b3V0VHlwZS5Nb2JpbGVQb3J0cmFpdCkpXHJcblx0ICAgICAgICAgICAgY29uZmlnLmVtYmVkVXJsID0gdXRpbHMuYWRkUGFyYW1Ub1VybChjb25maWcuZW1iZWRVcmwsIFwiaXNNb2JpbGVcIiwgXCJ0cnVlXCIpO1xyXG5cdCAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5wb3B1bGF0ZUNvbmZpZy5jYWxsKHRoaXMsIGNvbmZpZyk7XHJcblx0ICAgICAgICAvLyBUT0RPOiBDaGFuZ2Ugd2hlbiBPYmplY3QuYXNzaWduIGlzIGF2YWlsYWJsZS5cclxuXHQgICAgICAgIHZhciBzZXR0aW5ncyA9IHV0aWxzLmFzc2lnbih7fSwgZGVmYXVsdHNfMS5EZWZhdWx0cy5kZWZhdWx0U2V0dGluZ3MsIGNvbmZpZy5zZXR0aW5ncyk7XHJcblx0ICAgICAgICBjb25maWcgPSB1dGlscy5hc3NpZ24oeyBzZXR0aW5nczogc2V0dGluZ3MgfSwgY29uZmlnKTtcclxuXHQgICAgICAgIGNvbmZpZy5pZCA9IHRoaXMuZ2V0SWQoKTtcclxuXHQgICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogU3dpdGNoIFJlcG9ydCB2aWV3IG1vZGUuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxyXG5cdCAgICAgKi9cclxuXHQgICAgUmVwb3J0LnByb3RvdHlwZS5zd2l0Y2hNb2RlID0gZnVuY3Rpb24gKHZpZXdNb2RlKSB7XHJcblx0ICAgICAgICB2YXIgbmV3TW9kZTtcclxuXHQgICAgICAgIGlmICh0eXBlb2Ygdmlld01vZGUgPT09IFwic3RyaW5nXCIpIHtcclxuXHQgICAgICAgICAgICBuZXdNb2RlID0gdmlld01vZGU7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICBlbHNlIHtcclxuXHQgICAgICAgICAgICBuZXdNb2RlID0gdGhpcy52aWV3TW9kZVRvU3RyaW5nKHZpZXdNb2RlKTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHZhciB1cmwgPSAnL3JlcG9ydC9zd2l0Y2hNb2RlLycgKyBuZXdNb2RlO1xyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5ocG0ucG9zdCh1cmwsIG51bGwsIHsgdWlkOiB0aGlzLmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSlcclxuXHQgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgKiBSZWZyZXNoZXMgZGF0YSBzb3VyY2VzIGZvciB0aGUgcmVwb3J0LlxyXG5cdCAgICAqXHJcblx0ICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAqIHJlcG9ydC5yZWZyZXNoKCk7XHJcblx0ICAgICogYGBgXHJcblx0ICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUucmVmcmVzaCA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2UuaHBtLnBvc3QoJy9yZXBvcnQvcmVmcmVzaCcsIG51bGwsIHsgdWlkOiB0aGlzLmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSlcclxuXHQgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogY2hlY2tzIGlmIHRoZSByZXBvcnQgaXMgc2F2ZWQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogcmVwb3J0LmlzU2F2ZWQoKVxyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59XHJcblx0ICAgICAqL1xyXG5cdCAgICBSZXBvcnQucHJvdG90eXBlLmlzU2F2ZWQgPSBmdW5jdGlvbiAoKSB7XHJcblx0ICAgICAgICBpZiAodXRpbHMuaXNSRExFbWJlZCh0aGlzLmNvbmZpZy5lbWJlZFVybCkpIHtcclxuXHQgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3JzLkFQSU5vdFN1cHBvcnRlZEZvclJETEVycm9yKTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHJldHVybiB1dGlscy5pc1NhdmVkSW50ZXJuYWwodGhpcy5zZXJ2aWNlLmhwbSwgdGhpcy5jb25maWcudW5pcXVlSWQsIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogQXBwbHkgYSB0aGVtZSB0byB0aGUgcmVwb3J0XHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogcmVwb3J0LmFwcGx5VGhlbWUodGhlbWUpO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUuYXBwbHlUaGVtZSA9IGZ1bmN0aW9uICh0aGVtZSkge1xyXG5cdCAgICAgICAgaWYgKHV0aWxzLmlzUkRMRW1iZWQodGhpcy5jb25maWcuZW1iZWRVcmwpKSB7XHJcblx0ICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9ycy5BUElOb3RTdXBwb3J0ZWRGb3JSRExFcnJvcik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5hcHBseVRoZW1lSW50ZXJuYWwodGhlbWUpO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgKiBSZXNldCBhbmQgYXBwbHkgdGhlIGRlZmF1bHQgdGhlbWUgb2YgdGhlIHJlcG9ydFxyXG5cdCAgICAqXHJcblx0ICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAqIHJlcG9ydC5yZXNldFRoZW1lKCk7XHJcblx0ICAgICogYGBgXHJcblx0ICAgICovXHJcblx0ICAgIFJlcG9ydC5wcm90b3R5cGUucmVzZXRUaGVtZSA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIGlmICh1dGlscy5pc1JETEVtYmVkKHRoaXMuY29uZmlnLmVtYmVkVXJsKSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcnMuQVBJTm90U3VwcG9ydGVkRm9yUkRMRXJyb3IpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuYXBwbHlUaGVtZUludGVybmFsKHt9KTtcclxuXHQgICAgfTtcclxuXHQgICAgUmVwb3J0LnByb3RvdHlwZS5hcHBseVRoZW1lSW50ZXJuYWwgPSBmdW5jdGlvbiAodGhlbWUpIHtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2UuaHBtLnB1dCgnL3JlcG9ydC90aGVtZScsIHRoZW1lLCB7IHVpZDogdGhpcy5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pXHJcblx0ICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgUmVwb3J0LnByb3RvdHlwZS52aWV3TW9kZVRvU3RyaW5nID0gZnVuY3Rpb24gKHZpZXdNb2RlKSB7XHJcblx0ICAgICAgICB2YXIgbW9kZTtcclxuXHQgICAgICAgIHN3aXRjaCAodmlld01vZGUpIHtcclxuXHQgICAgICAgICAgICBjYXNlIG1vZGVscy5WaWV3TW9kZS5FZGl0OlxyXG5cdCAgICAgICAgICAgICAgICBtb2RlID0gXCJlZGl0XCI7XHJcblx0ICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cdCAgICAgICAgICAgIGNhc2UgbW9kZWxzLlZpZXdNb2RlLlZpZXc6XHJcblx0ICAgICAgICAgICAgICAgIG1vZGUgPSBcInZpZXdcIjtcclxuXHQgICAgICAgICAgICAgICAgYnJlYWs7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gbW9kZTtcclxuXHQgICAgfTtcclxuXHQgICAgUmVwb3J0LmFsbG93ZWRFdmVudHMgPSBbXCJmaWx0ZXJzQXBwbGllZFwiLCBcInBhZ2VDaGFuZ2VkXCIsIFwiY29tbWFuZFRyaWdnZXJlZFwiLCBcInN3aXBlU3RhcnRcIiwgXCJzd2lwZUVuZFwiLCBcImJvb2ttYXJrQXBwbGllZFwiXTtcclxuXHQgICAgUmVwb3J0LnJlcG9ydElkQXR0cmlidXRlID0gJ3Bvd2VyYmktcmVwb3J0LWlkJztcclxuXHQgICAgUmVwb3J0LmZpbHRlclBhbmVFbmFibGVkQXR0cmlidXRlID0gJ3Bvd2VyYmktc2V0dGluZ3MtZmlsdGVyLXBhbmUtZW5hYmxlZCc7XHJcblx0ICAgIFJlcG9ydC5uYXZDb250ZW50UGFuZUVuYWJsZWRBdHRyaWJ1dGUgPSAncG93ZXJiaS1zZXR0aW5ncy1uYXYtY29udGVudC1wYW5lLWVuYWJsZWQnO1xyXG5cdCAgICBSZXBvcnQudHlwZUF0dHJpYnV0ZSA9ICdwb3dlcmJpLXR5cGUnO1xyXG5cdCAgICBSZXBvcnQudHlwZSA9IFwiUmVwb3J0XCI7XHJcblx0ICAgIHJldHVybiBSZXBvcnQ7XHJcblx0fShlbWJlZC5FbWJlZCkpO1xyXG5cdGV4cG9ydHMuUmVwb3J0ID0gUmVwb3J0O1xyXG5cblxuLyoqKi8gfSksXG4vKiA2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cblx0ZXhwb3J0cy5BUElOb3RTdXBwb3J0ZWRGb3JSRExFcnJvciA9IFwiVGhpcyBBUEkgaXMgY3VycmVudGx5IG5vdCBzdXBwb3J0ZWQgZm9yIFJETCByZXBvcnRzXCI7XHJcblxuXG4vKioqLyB9KSxcbi8qIDcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHR2YXIgdmlzdWFsRGVzY3JpcHRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcclxuXHR2YXIgbW9kZWxzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcclxuXHR2YXIgdXRpbHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xyXG5cdHZhciBlcnJvcnMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYpO1xyXG5cdC8qKlxyXG5cdCAqIEEgUG93ZXIgQkkgcmVwb3J0IHBhZ2VcclxuXHQgKlxyXG5cdCAqIEBleHBvcnRcclxuXHQgKiBAY2xhc3MgUGFnZVxyXG5cdCAqIEBpbXBsZW1lbnRzIHtJUGFnZU5vZGV9XHJcblx0ICogQGltcGxlbWVudHMge0lGaWx0ZXJhYmxlfVxyXG5cdCAqL1xyXG5cdHZhciBQYWdlID0gKGZ1bmN0aW9uICgpIHtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYSBQb3dlciBCSSByZXBvcnQgcGFnZS5cclxuXHQgICAgICpcclxuXHQgICAgICogQHBhcmFtIHtJUmVwb3J0Tm9kZX0gcmVwb3J0XHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbZGlzcGxheU5hbWVdXHJcblx0ICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzQWN0aXZlUGFnZV1cclxuXHQgICAgICogQHBhcmFtIHttb2RlbHMuU2VjdGlvblZpc2liaWxpdHl9IFt2aXNpYmlsaXR5XVxyXG5cdCAgICAgKi9cclxuXHQgICAgZnVuY3Rpb24gUGFnZShyZXBvcnQsIG5hbWUsIGRpc3BsYXlOYW1lLCBpc0FjdGl2ZVBhZ2UsIHZpc2liaWxpdHksIGRlZmF1bHRTaXplLCBkZWZhdWx0RGlzcGxheU9wdGlvbikge1xyXG5cdCAgICAgICAgdGhpcy5yZXBvcnQgPSByZXBvcnQ7XHJcblx0ICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG5cdCAgICAgICAgdGhpcy5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xyXG5cdCAgICAgICAgdGhpcy5pc0FjdGl2ZSA9IGlzQWN0aXZlUGFnZTtcclxuXHQgICAgICAgIHRoaXMudmlzaWJpbGl0eSA9IHZpc2liaWxpdHk7XHJcblx0ICAgICAgICB0aGlzLmRlZmF1bHRTaXplID0gZGVmYXVsdFNpemU7XHJcblx0ICAgICAgICB0aGlzLmRlZmF1bHREaXNwbGF5T3B0aW9uID0gZGVmYXVsdERpc3BsYXlPcHRpb247XHJcblx0ICAgIH1cclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEdldHMgYWxsIHBhZ2UgbGV2ZWwgZmlsdGVycyB3aXRoaW4gdGhlIHJlcG9ydC5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiBwYWdlLmdldEZpbHRlcnMoKVxyXG5cdCAgICAgKiAgLnRoZW4oZmlsdGVycyA9PiB7IC4uLiB9KTtcclxuXHQgICAgICogYGBgXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEByZXR1cm5zIHsoUHJvbWlzZTxtb2RlbHMuSUZpbHRlcltdPil9XHJcblx0ICAgICAqL1xyXG5cdCAgICBQYWdlLnByb3RvdHlwZS5nZXRGaWx0ZXJzID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMucmVwb3J0LnNlcnZpY2UuaHBtLmdldChcIi9yZXBvcnQvcGFnZXMvXCIgKyB0aGlzLm5hbWUgKyBcIi9maWx0ZXJzXCIsIHsgdWlkOiB0aGlzLnJlcG9ydC5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5yZXBvcnQuaWZyYW1lLmNvbnRlbnRXaW5kb3cpXHJcblx0ICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5ib2R5OyB9LCBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBSZW1vdmVzIGFsbCBmaWx0ZXJzIGZyb20gdGhpcyBwYWdlIG9mIHRoZSByZXBvcnQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogcGFnZS5yZW1vdmVGaWx0ZXJzKCk7XHJcblx0ICAgICAqIGBgYFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cclxuXHQgICAgICovXHJcblx0ICAgIFBhZ2UucHJvdG90eXBlLnJlbW92ZUZpbHRlcnMgPSBmdW5jdGlvbiAoKSB7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXRGaWx0ZXJzKFtdKTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIE1ha2VzIHRoZSBjdXJyZW50IHBhZ2UgdGhlIGFjdGl2ZSBwYWdlIG9mIHRoZSByZXBvcnQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcG90XHJcblx0ICAgICAqIHBhZ2Uuc2V0QWN0aXZlKCk7XHJcblx0ICAgICAqIGBgYFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cclxuXHQgICAgICovXHJcblx0ICAgIFBhZ2UucHJvdG90eXBlLnNldEFjdGl2ZSA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIHZhciBwYWdlID0ge1xyXG5cdCAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcclxuXHQgICAgICAgICAgICBkaXNwbGF5TmFtZTogbnVsbCxcclxuXHQgICAgICAgICAgICBpc0FjdGl2ZTogdHJ1ZVxyXG5cdCAgICAgICAgfTtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnJlcG9ydC5zZXJ2aWNlLmhwbS5wdXQoJy9yZXBvcnQvcGFnZXMvYWN0aXZlJywgcGFnZSwgeyB1aWQ6IHRoaXMucmVwb3J0LmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLnJlcG9ydC5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogU2V0cyBhbGwgZmlsdGVycyBvbiB0aGUgY3VycmVudCBwYWdlLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBgYGBqYXZhc2NyaXB0XHJcblx0ICAgICAqIHBhZ2Uuc2V0RmlsdGVycyhmaWx0ZXJzKTtcclxuXHQgICAgICogICAuY2F0Y2goZXJyb3JzID0+IHsgLi4uIH0pO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHBhcmFtIHsobW9kZWxzLklGaWx0ZXJbXSl9IGZpbHRlcnNcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XHJcblx0ICAgICAqL1xyXG5cdCAgICBQYWdlLnByb3RvdHlwZS5zZXRGaWx0ZXJzID0gZnVuY3Rpb24gKGZpbHRlcnMpIHtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnJlcG9ydC5zZXJ2aWNlLmhwbS5wdXQoXCIvcmVwb3J0L3BhZ2VzL1wiICsgdGhpcy5uYW1lICsgXCIvZmlsdGVyc1wiLCBmaWx0ZXJzLCB7IHVpZDogdGhpcy5yZXBvcnQuY29uZmlnLnVuaXF1ZUlkIH0sIHRoaXMucmVwb3J0LmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBHZXRzIGFsbCB0aGUgdmlzdWFscyBvbiB0aGUgcGFnZS5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiBwYWdlLmdldFZpc3VhbHMoKVxyXG5cdCAgICAgKiAgIC50aGVuKHZpc3VhbHMgPT4geyAuLi4gfSk7XHJcblx0ICAgICAqIGBgYFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxWaXN1YWxEZXNjcmlwdG9yW10+fVxyXG5cdCAgICAgKi9cclxuXHQgICAgUGFnZS5wcm90b3R5cGUuZ2V0VmlzdWFscyA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcblx0ICAgICAgICBpZiAodXRpbHMuaXNSRExFbWJlZCh0aGlzLnJlcG9ydC5jb25maWcuZW1iZWRVcmwpKSB7XHJcblx0ICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9ycy5BUElOb3RTdXBwb3J0ZWRGb3JSRExFcnJvcik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5yZXBvcnQuc2VydmljZS5ocG0uZ2V0KFwiL3JlcG9ydC9wYWdlcy9cIiArIHRoaXMubmFtZSArIFwiL3Zpc3VhbHNcIiwgeyB1aWQ6IHRoaXMucmVwb3J0LmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLnJlcG9ydC5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuYm9keVxyXG5cdCAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uICh2aXN1YWwpIHtcclxuXHQgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyB2aXN1YWxEZXNjcmlwdG9yXzEuVmlzdWFsRGVzY3JpcHRvcihfdGhpcywgdmlzdWFsLm5hbWUsIHZpc3VhbC50aXRsZSwgdmlzdWFsLnR5cGUsIHZpc3VhbC5sYXlvdXQpO1xyXG5cdCAgICAgICAgICAgIH0pO1xyXG5cdCAgICAgICAgfSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogQ2hlY2tzIGlmIHBhZ2UgaGFzIGxheW91dC5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiBwYWdlLmhhc0xheW91dChsYXlvdXRUeXBlKVxyXG5cdCAgICAgKiAgLnRoZW4oaGFzTGF5b3V0OiBib29sZWFuID0+IHsgLi4uIH0pO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMgeyhQcm9taXNlPGJvb2xlYW4+KX1cclxuXHQgICAgICovXHJcblx0ICAgIFBhZ2UucHJvdG90eXBlLmhhc0xheW91dCA9IGZ1bmN0aW9uIChsYXlvdXRUeXBlKSB7XHJcblx0ICAgICAgICBpZiAodXRpbHMuaXNSRExFbWJlZCh0aGlzLnJlcG9ydC5jb25maWcuZW1iZWRVcmwpKSB7XHJcblx0ICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9ycy5BUElOb3RTdXBwb3J0ZWRGb3JSRExFcnJvcik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICB2YXIgbGF5b3V0VHlwZUVudW0gPSBtb2RlbHMuTGF5b3V0VHlwZVtsYXlvdXRUeXBlXTtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnJlcG9ydC5zZXJ2aWNlLmhwbS5nZXQoXCIvcmVwb3J0L3BhZ2VzL1wiICsgdGhpcy5uYW1lICsgXCIvbGF5b3V0VHlwZXMvXCIgKyBsYXlvdXRUeXBlRW51bSwgeyB1aWQ6IHRoaXMucmVwb3J0LmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLnJlcG9ydC5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmJvZHk7IH0sIGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgcmV0dXJuIFBhZ2U7XHJcblx0fSgpKTtcclxuXHRleHBvcnRzLlBhZ2UgPSBQYWdlO1xyXG5cblxuLyoqKi8gfSksXG4vKiA4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cblx0LyoqXHJcblx0ICogQSBQb3dlciBCSSB2aXN1YWwgd2l0aGluIGEgcGFnZVxyXG5cdCAqXHJcblx0ICogQGV4cG9ydFxyXG5cdCAqIEBjbGFzcyBWaXN1YWxEZXNjcmlwdG9yXHJcblx0ICogQGltcGxlbWVudHMge0lWaXN1YWxOb2RlfVxyXG5cdCAqL1xyXG5cdHZhciBWaXN1YWxEZXNjcmlwdG9yID0gKGZ1bmN0aW9uICgpIHtcclxuXHQgICAgZnVuY3Rpb24gVmlzdWFsRGVzY3JpcHRvcihwYWdlLCBuYW1lLCB0aXRsZSwgdHlwZSwgbGF5b3V0KSB7XHJcblx0ICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG5cdCAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG5cdCAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuXHQgICAgICAgIHRoaXMubGF5b3V0ID0gbGF5b3V0O1xyXG5cdCAgICAgICAgdGhpcy5wYWdlID0gcGFnZTtcclxuXHQgICAgfVxyXG5cdCAgICAvKipcclxuXHQgICAgICogR2V0cyBhbGwgdmlzdWFsIGxldmVsIGZpbHRlcnMgb2YgdGhlIGN1cnJlbnQgdmlzdWFsLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBgYGBqYXZhc2NyaXB0XHJcblx0ICAgICAqIHZpc3VhbC5nZXRGaWx0ZXJzKClcclxuXHQgICAgICogIC50aGVuKGZpbHRlcnMgPT4geyAuLi4gfSk7XHJcblx0ICAgICAqIGBgYFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcmV0dXJucyB7KFByb21pc2U8bW9kZWxzLklGaWx0ZXJbXT4pfVxyXG5cdCAgICAgKi9cclxuXHQgICAgVmlzdWFsRGVzY3JpcHRvci5wcm90b3R5cGUuZ2V0RmlsdGVycyA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnBhZ2UucmVwb3J0LnNlcnZpY2UuaHBtLmdldChcIi9yZXBvcnQvcGFnZXMvXCIgKyB0aGlzLnBhZ2UubmFtZSArIFwiL3Zpc3VhbHMvXCIgKyB0aGlzLm5hbWUgKyBcIi9maWx0ZXJzXCIsIHsgdWlkOiB0aGlzLnBhZ2UucmVwb3J0LmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLnBhZ2UucmVwb3J0LmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuYm9keTsgfSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogUmVtb3ZlcyBhbGwgZmlsdGVycyBmcm9tIHRoZSBjdXJyZW50IHZpc3VhbC5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiB2aXN1YWwucmVtb3ZlRmlsdGVycygpO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XHJcblx0ICAgICAqL1xyXG5cdCAgICBWaXN1YWxEZXNjcmlwdG9yLnByb3RvdHlwZS5yZW1vdmVGaWx0ZXJzID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuc2V0RmlsdGVycyhbXSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBTZXRzIHRoZSBmaWx0ZXJzIG9uIHRoZSBjdXJyZW50IHZpc3VhbCB0byAnZmlsdGVycycuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogdmlzdWFsLnNldEZpbHRlcnMoZmlsdGVycyk7XHJcblx0ICAgICAqICAgLmNhdGNoKGVycm9ycyA9PiB7IC4uLiB9KTtcclxuXHQgICAgICogYGBgXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwYXJhbSB7KG1vZGVscy5JRmlsdGVyW10pfSBmaWx0ZXJzXHJcblx0ICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxyXG5cdCAgICAgKi9cclxuXHQgICAgVmlzdWFsRGVzY3JpcHRvci5wcm90b3R5cGUuc2V0RmlsdGVycyA9IGZ1bmN0aW9uIChmaWx0ZXJzKSB7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5wYWdlLnJlcG9ydC5zZXJ2aWNlLmhwbS5wdXQoXCIvcmVwb3J0L3BhZ2VzL1wiICsgdGhpcy5wYWdlLm5hbWUgKyBcIi92aXN1YWxzL1wiICsgdGhpcy5uYW1lICsgXCIvZmlsdGVyc1wiLCBmaWx0ZXJzLCB7IHVpZDogdGhpcy5wYWdlLnJlcG9ydC5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5wYWdlLnJlcG9ydC5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogRXhwb3J0cyBWaXN1YWwgZGF0YS5cclxuXHQgICAgICogQ2FuIGV4cG9ydCB1cCB0byAzMEsgcm93cy5cclxuXHQgICAgICogQHBhcmFtIHJvd3M6IE9wdGlvbmFsLiBEZWZhdWx0IHZhbHVlIGlzIDMwSywgbWF4aW11bSB2YWx1ZSBpcyAzMEsgYXMgd2VsbC5cclxuXHQgICAgICogQHBhcmFtIGV4cG9ydERhdGFUeXBlOiBPcHRpb25hbC4gRGVmYXVsdCBpcyBtb2RlbHMuRXhwb3J0RGF0YVR5cGUuU3VtbWFyaXplZC5cclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiB2aXN1YWwuZXhwb3J0RGF0YSgpXHJcblx0ICAgICAqICAudGhlbihkYXRhID0+IHsgLi4uIH0pO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMgeyhQcm9taXNlPG1vZGVscy5FeHBvcnREYXRhVHlwZT4pfVxyXG5cdCAgICAgKi9cclxuXHQgICAgVmlzdWFsRGVzY3JpcHRvci5wcm90b3R5cGUuZXhwb3J0RGF0YSA9IGZ1bmN0aW9uIChleHBvcnREYXRhVHlwZSwgcm93cykge1xyXG5cdCAgICAgICAgdmFyIGV4cG9ydERhdGFSZXF1ZXN0Qm9keSA9IHtcclxuXHQgICAgICAgICAgICByb3dzOiByb3dzLFxyXG5cdCAgICAgICAgICAgIGV4cG9ydERhdGFUeXBlOiBleHBvcnREYXRhVHlwZVxyXG5cdCAgICAgICAgfTtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnBhZ2UucmVwb3J0LnNlcnZpY2UuaHBtLnBvc3QoXCIvcmVwb3J0L3BhZ2VzL1wiICsgdGhpcy5wYWdlLm5hbWUgKyBcIi92aXN1YWxzL1wiICsgdGhpcy5uYW1lICsgXCIvZXhwb3J0RGF0YVwiLCBleHBvcnREYXRhUmVxdWVzdEJvZHksIHsgdWlkOiB0aGlzLnBhZ2UucmVwb3J0LmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLnBhZ2UucmVwb3J0LmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuYm9keTsgfSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogU2V0IHNsaWNlciBzdGF0ZS5cclxuXHQgICAgICogV29ya3Mgb25seSBmb3IgdmlzdWFscyBvZiB0eXBlIHNsaWNlci5cclxuXHQgICAgICogQHBhcmFtIHN0YXRlOiBBIG5ldyBzdGF0ZSB3aGljaCBjb250YWlucyB0aGUgc2xpY2VyIGZpbHRlcnMuXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogdmlzdWFsLnNldFNsaWNlclN0YXRlKClcclxuXHQgICAgICogIC50aGVuKCgpID0+IHsgLi4uIH0pO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICovXHJcblx0ICAgIFZpc3VhbERlc2NyaXB0b3IucHJvdG90eXBlLnNldFNsaWNlclN0YXRlID0gZnVuY3Rpb24gKHN0YXRlKSB7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5wYWdlLnJlcG9ydC5zZXJ2aWNlLmhwbS5wdXQoXCIvcmVwb3J0L3BhZ2VzL1wiICsgdGhpcy5wYWdlLm5hbWUgKyBcIi92aXN1YWxzL1wiICsgdGhpcy5uYW1lICsgXCIvc2xpY2VyXCIsIHN0YXRlLCB7IHVpZDogdGhpcy5wYWdlLnJlcG9ydC5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5wYWdlLnJlcG9ydC5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogR2V0IHNsaWNlciBzdGF0ZS5cclxuXHQgICAgICogV29ya3Mgb25seSBmb3IgdmlzdWFscyBvZiB0eXBlIHNsaWNlci5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiB2aXN1YWwuZ2V0U2xpY2VyU3RhdGUoKVxyXG5cdCAgICAgKiAgLnRoZW4oc3RhdGUgPT4geyAuLi4gfSk7XHJcblx0ICAgICAqIGBgYFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcmV0dXJucyB7KFByb21pc2U8bW9kZWxzLklTbGljZXJTdGF0ZT4pfVxyXG5cdCAgICAgKi9cclxuXHQgICAgVmlzdWFsRGVzY3JpcHRvci5wcm90b3R5cGUuZ2V0U2xpY2VyU3RhdGUgPSBmdW5jdGlvbiAoKSB7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5wYWdlLnJlcG9ydC5zZXJ2aWNlLmhwbS5nZXQoXCIvcmVwb3J0L3BhZ2VzL1wiICsgdGhpcy5wYWdlLm5hbWUgKyBcIi92aXN1YWxzL1wiICsgdGhpcy5uYW1lICsgXCIvc2xpY2VyXCIsIHsgdWlkOiB0aGlzLnBhZ2UucmVwb3J0LmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLnBhZ2UucmVwb3J0LmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuYm9keTsgfSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgcmVzcG9uc2UuYm9keTtcclxuXHQgICAgICAgIH0pO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogQ2xvbmUgZXhpc3RpbmcgdmlzdWFsIHRvIGEgbmV3IGluc3RhbmNlLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcmV0dXJucyB7KFByb21pc2U8bW9kZWxzLklDbG9uZVZpc3VhbFJlc3BvbnNlPil9XHJcblx0ICAgICAqL1xyXG5cdCAgICBWaXN1YWxEZXNjcmlwdG9yLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uIChyZXF1ZXN0KSB7XHJcblx0ICAgICAgICBpZiAocmVxdWVzdCA9PT0gdm9pZCAwKSB7IHJlcXVlc3QgPSB7fTsgfVxyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMucGFnZS5yZXBvcnQuc2VydmljZS5ocG0ucG9zdChcIi9yZXBvcnQvcGFnZXMvXCIgKyB0aGlzLnBhZ2UubmFtZSArIFwiL3Zpc3VhbHMvXCIgKyB0aGlzLm5hbWUgKyBcIi9jbG9uZVwiLCByZXF1ZXN0LCB7IHVpZDogdGhpcy5wYWdlLnJlcG9ydC5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5wYWdlLnJlcG9ydC5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmJvZHk7IH0sIGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFNvcnQgYSB2aXN1YWwgYnkgZGF0YUZpZWxkIGFuZCBkaXJlY3Rpb24uXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwYXJhbSByZXF1ZXN0OiBTb3J0IGJ5IHZpc3VhbCByZXF1ZXN0LlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBgYGBqYXZhc2NyaXB0XHJcblx0ICAgICAqIHZpc3VhbC5zb3J0QnkocmVxdWVzdClcclxuXHQgICAgICogIC50aGVuKCgpID0+IHsgLi4uIH0pO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICovXHJcblx0ICAgIFZpc3VhbERlc2NyaXB0b3IucHJvdG90eXBlLnNvcnRCeSA9IGZ1bmN0aW9uIChyZXF1ZXN0KSB7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5wYWdlLnJlcG9ydC5zZXJ2aWNlLmhwbS5wdXQoXCIvcmVwb3J0L3BhZ2VzL1wiICsgdGhpcy5wYWdlLm5hbWUgKyBcIi92aXN1YWxzL1wiICsgdGhpcy5uYW1lICsgXCIvc29ydEJ5XCIsIHJlcXVlc3QsIHsgdWlkOiB0aGlzLnBhZ2UucmVwb3J0LmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLnBhZ2UucmVwb3J0LmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgIH07XHJcblx0ICAgIHJldHVybiBWaXN1YWxEZXNjcmlwdG9yO1xyXG5cdH0oKSk7XHJcblx0ZXhwb3J0cy5WaXN1YWxEZXNjcmlwdG9yID0gVmlzdWFsRGVzY3JpcHRvcjtcclxuXG5cbi8qKiovIH0pLFxuLyogOSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cdHZhciBEZWZhdWx0cyA9IChmdW5jdGlvbiAoKSB7XHJcblx0ICAgIGZ1bmN0aW9uIERlZmF1bHRzKCkge1xyXG5cdCAgICB9XHJcblx0ICAgIERlZmF1bHRzLmRlZmF1bHRTZXR0aW5ncyA9IHtcclxuXHQgICAgICAgIGZpbHRlclBhbmVFbmFibGVkOiB0cnVlXHJcblx0ICAgIH07XHJcblx0ICAgIERlZmF1bHRzLmRlZmF1bHRRbmFTZXR0aW5ncyA9IHtcclxuXHQgICAgICAgIGZpbHRlclBhbmVFbmFibGVkOiBmYWxzZVxyXG5cdCAgICB9O1xyXG5cdCAgICByZXR1cm4gRGVmYXVsdHM7XHJcblx0fSgpKTtcclxuXHRleHBvcnRzLkRlZmF1bHRzID0gRGVmYXVsdHM7XHJcblxuXG4vKioqLyB9KSxcbi8qIDEwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblx0dmFyIHV0aWxzID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcclxuXHR2YXIgZXJyb3JzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcclxuXHQvKipcclxuXHQgKiBNYW5hZ2VzIHJlcG9ydCBib29rbWFya3MuXHJcblx0ICpcclxuXHQgKiBAZXhwb3J0XHJcblx0ICogQGNsYXNzIEJvb2ttYXJrc01hbmFnZXJcclxuXHQgKiBAaW1wbGVtZW50cyB7SUJvb2ttYXJrc01hbmFnZXJ9XHJcblx0ICovXHJcblx0dmFyIEJvb2ttYXJrc01hbmFnZXIgPSAoZnVuY3Rpb24gKCkge1xyXG5cdCAgICBmdW5jdGlvbiBCb29rbWFya3NNYW5hZ2VyKHNlcnZpY2UsIGNvbmZpZywgaWZyYW1lKSB7XHJcblx0ICAgICAgICB0aGlzLnNlcnZpY2UgPSBzZXJ2aWNlO1xyXG5cdCAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XHJcblx0ICAgICAgICB0aGlzLmlmcmFtZSA9IGlmcmFtZTtcclxuXHQgICAgfVxyXG5cdCAgICAvKipcclxuXHQgICAgICogR2V0cyBib29rbWFya3MgdGhhdCBhcmUgZGVmaW5lZCBpbiB0aGUgcmVwb3J0LlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBgYGBqYXZhc2NyaXB0XHJcblx0ICAgICAqIC8vIEdldHMgYm9va21hcmtzIHRoYXQgYXJlIGRlZmluZWQgaW4gdGhlIHJlcG9ydFxyXG5cdCAgICAgKiBib29rbWFya3NNYW5hZ2VyLmdldEJvb2ttYXJrcygpXHJcblx0ICAgICAqICAgLnRoZW4oYm9va21hcmtzID0+IHtcclxuXHQgICAgICogICAgIC4uLlxyXG5cdCAgICAgKiAgIH0pO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8bW9kZWxzLklSZXBvcnRCb29rbWFya1tdPn1cclxuXHQgICAgICovXHJcblx0ICAgIEJvb2ttYXJrc01hbmFnZXIucHJvdG90eXBlLmdldEJvb2ttYXJrcyA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIGlmICh1dGlscy5pc1JETEVtYmVkKHRoaXMuY29uZmlnLmVtYmVkVXJsKSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcnMuQVBJTm90U3VwcG9ydGVkRm9yUkRMRXJyb3IpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5ocG0uZ2V0KFwiL3JlcG9ydC9ib29rbWFya3NcIiwgeyB1aWQ6IHRoaXMuY29uZmlnLnVuaXF1ZUlkIH0sIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpXHJcblx0ICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5ib2R5OyB9LCBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBBcHBseSBib29rbWFyayBCeSBuYW1lLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBgYGBqYXZhc2NyaXB0XHJcblx0ICAgICAqIGJvb2ttYXJrc01hbmFnZXIuYXBwbHkoYm9va21hcmtOYW1lKVxyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XHJcblx0ICAgICAqL1xyXG5cdCAgICBCb29rbWFya3NNYW5hZ2VyLnByb3RvdHlwZS5hcHBseSA9IGZ1bmN0aW9uIChib29rbWFya05hbWUpIHtcclxuXHQgICAgICAgIGlmICh1dGlscy5pc1JETEVtYmVkKHRoaXMuY29uZmlnLmVtYmVkVXJsKSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcnMuQVBJTm90U3VwcG9ydGVkRm9yUkRMRXJyb3IpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgdmFyIHJlcXVlc3QgPSB7XHJcblx0ICAgICAgICAgICAgbmFtZTogYm9va21hcmtOYW1lXHJcblx0ICAgICAgICB9O1xyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5ocG0ucG9zdChcIi9yZXBvcnQvYm9va21hcmtzL2FwcGx5QnlOYW1lXCIsIHJlcXVlc3QsIHsgdWlkOiB0aGlzLmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBQbGF5IGJvb2ttYXJrczogRW50ZXIgb3IgRXhpdCBib29rbWFya3MgcHJlc2VudGF0aW9uIG1vZGUuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogLy8gRW50ZXIgcHJlc2VudGF0aW9uIG1vZGUuXHJcblx0ICAgICAqIGJvb2ttYXJrc01hbmFnZXIucGxheSh0cnVlKVxyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XHJcblx0ICAgICAqL1xyXG5cdCAgICBCb29rbWFya3NNYW5hZ2VyLnByb3RvdHlwZS5wbGF5ID0gZnVuY3Rpb24gKHBsYXlNb2RlKSB7XHJcblx0ICAgICAgICBpZiAodXRpbHMuaXNSRExFbWJlZCh0aGlzLmNvbmZpZy5lbWJlZFVybCkpIHtcclxuXHQgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3JzLkFQSU5vdFN1cHBvcnRlZEZvclJETEVycm9yKTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHZhciBwbGF5Qm9va21hcmtSZXF1ZXN0ID0ge1xyXG5cdCAgICAgICAgICAgIHBsYXlNb2RlOiBwbGF5TW9kZVxyXG5cdCAgICAgICAgfTtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2UuaHBtLnBvc3QoXCIvcmVwb3J0L2Jvb2ttYXJrcy9wbGF5XCIsIHBsYXlCb29rbWFya1JlcXVlc3QsIHsgdWlkOiB0aGlzLmNvbmZpZy51bmlxdWVJZCB9LCB0aGlzLmlmcmFtZS5jb250ZW50V2luZG93KVxyXG5cdCAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHQgICAgICAgICAgICB0aHJvdyByZXNwb25zZS5ib2R5O1xyXG5cdCAgICAgICAgfSk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBDYXB0dXJlIGJvb2ttYXJrIGZyb20gY3VycmVudCBzdGF0ZS5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiBib29rbWFya3NNYW5hZ2VyLmNhcHR1cmUoKVxyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8bW9kZWxzLklSZXBvcnRCb29rbWFyaz59XHJcblx0ICAgICAqL1xyXG5cdCAgICBCb29rbWFya3NNYW5hZ2VyLnByb3RvdHlwZS5jYXB0dXJlID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgaWYgKHV0aWxzLmlzUkRMRW1iZWQodGhpcy5jb25maWcuZW1iZWRVcmwpKSB7XHJcblx0ICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9ycy5BUElOb3RTdXBwb3J0ZWRGb3JSRExFcnJvcik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmhwbS5wb3N0KFwiL3JlcG9ydC9ib29rbWFya3MvY2FwdHVyZVwiLCBudWxsLCB7IHVpZDogdGhpcy5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmJvZHk7IH0sIGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEFwcGx5IGJvb2ttYXJrIHN0YXRlLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBgYGBqYXZhc2NyaXB0XHJcblx0ICAgICAqIGJvb2ttYXJrc01hbmFnZXIuYXBwbHlTdGF0ZShib29rbWFya05hbWUpXHJcblx0ICAgICAqIGBgYFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cclxuXHQgICAgICovXHJcblx0ICAgIEJvb2ttYXJrc01hbmFnZXIucHJvdG90eXBlLmFwcGx5U3RhdGUgPSBmdW5jdGlvbiAoc3RhdGUpIHtcclxuXHQgICAgICAgIGlmICh1dGlscy5pc1JETEVtYmVkKHRoaXMuY29uZmlnLmVtYmVkVXJsKSkge1xyXG5cdCAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcnMuQVBJTm90U3VwcG9ydGVkRm9yUkRMRXJyb3IpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgdmFyIHJlcXVlc3QgPSB7XHJcblx0ICAgICAgICAgICAgc3RhdGU6IHN0YXRlXHJcblx0ICAgICAgICB9O1xyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5ocG0ucG9zdChcIi9yZXBvcnQvYm9va21hcmtzL2FwcGx5U3RhdGVcIiwgcmVxdWVzdCwgeyB1aWQ6IHRoaXMuY29uZmlnLnVuaXF1ZUlkIH0sIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpXHJcblx0ICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgcmV0dXJuIEJvb2ttYXJrc01hbmFnZXI7XHJcblx0fSgpKTtcclxuXHRleHBvcnRzLkJvb2ttYXJrc01hbmFnZXIgPSBCb29rbWFya3NNYW5hZ2VyO1xyXG5cblxuLyoqKi8gfSksXG4vKiAxMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdHZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgZnVuY3Rpb24gKGQsIGIpIHtcclxuXHQgICAgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07XHJcblx0ICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG5cdCAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcblx0fTtcclxuXHR2YXIgbW9kZWxzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcclxuXHR2YXIgZW1iZWQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xyXG5cdHZhciB1dGlscyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XHJcblx0dmFyIGRlZmF1bHRzXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xyXG5cdHZhciBDcmVhdGUgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG5cdCAgICBfX2V4dGVuZHMoQ3JlYXRlLCBfc3VwZXIpO1xyXG5cdCAgICBmdW5jdGlvbiBDcmVhdGUoc2VydmljZSwgZWxlbWVudCwgY29uZmlnLCBwaGFzZWRSZW5kZXIpIHtcclxuXHQgICAgICAgIF9zdXBlci5jYWxsKHRoaXMsIHNlcnZpY2UsIGVsZW1lbnQsIGNvbmZpZywgLyogaWZyYW1lICovIHVuZGVmaW5lZCwgcGhhc2VkUmVuZGVyKTtcclxuXHQgICAgfVxyXG5cdCAgICAvKipcclxuXHQgICAgICogR2V0cyB0aGUgZGF0YXNldCBJRCBmcm9tIHRoZSBmaXJzdCBhdmFpbGFibGUgbG9jYXRpb246IGNyZWF0ZUNvbmZpZyBvciBlbWJlZCB1cmwuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcblx0ICAgICAqL1xyXG5cdCAgICBDcmVhdGUucHJvdG90eXBlLmdldElkID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgdmFyIGRhdGFzZXRJZCA9ICh0aGlzLmNyZWF0ZUNvbmZpZyAmJiB0aGlzLmNyZWF0ZUNvbmZpZy5kYXRhc2V0SWQpID8gdGhpcy5jcmVhdGVDb25maWcuZGF0YXNldElkIDogQ3JlYXRlLmZpbmRJZEZyb21FbWJlZFVybCh0aGlzLmNvbmZpZy5lbWJlZFVybCk7XHJcblx0ICAgICAgICBpZiAodHlwZW9mIGRhdGFzZXRJZCAhPT0gJ3N0cmluZycgfHwgZGF0YXNldElkLmxlbmd0aCA9PT0gMCkge1xyXG5cdCAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRGF0YXNldCBpZCBpcyByZXF1aXJlZCwgYnV0IGl0IHdhcyBub3QgZm91bmQuIFlvdSBtdXN0IHByb3ZpZGUgYW4gaWQgZWl0aGVyIGFzIHBhcnQgb2YgZW1iZWQgY29uZmlndXJhdGlvbi4nKTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHJldHVybiBkYXRhc2V0SWQ7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBWYWxpZGF0ZSBjcmVhdGUgcmVwb3J0IGNvbmZpZ3VyYXRpb24uXHJcblx0ICAgICAqL1xyXG5cdCAgICBDcmVhdGUucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKGNvbmZpZykge1xyXG5cdCAgICAgICAgcmV0dXJuIG1vZGVscy52YWxpZGF0ZUNyZWF0ZVJlcG9ydChjb25maWcpO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogUG9wdWxhdGUgY29uZmlnIGZvciBjcmVhdGVcclxuXHQgICAgICpcclxuXHQgICAgICogQHBhcmFtIHtJRW1iZWRDb25maWd1cmF0aW9uQmFzZX1cclxuXHQgICAgICogQHJldHVybnMge3ZvaWR9XHJcblx0ICAgICAqL1xyXG5cdCAgICBDcmVhdGUucHJvdG90eXBlLnBvcHVsYXRlQ29uZmlnID0gZnVuY3Rpb24gKGJhc2VDb25maWcpIHtcclxuXHQgICAgICAgIF9zdXBlci5wcm90b3R5cGUucG9wdWxhdGVDb25maWcuY2FsbCh0aGlzLCBiYXNlQ29uZmlnKTtcclxuXHQgICAgICAgIC8vIFRPRE86IENoYW5nZSB3aGVuIE9iamVjdC5hc3NpZ24gaXMgYXZhaWxhYmxlLlxyXG5cdCAgICAgICAgdmFyIHNldHRpbmdzID0gdXRpbHMuYXNzaWduKHt9LCBkZWZhdWx0c18xLkRlZmF1bHRzLmRlZmF1bHRTZXR0aW5ncywgYmFzZUNvbmZpZy5zZXR0aW5ncyk7XHJcblx0ICAgICAgICB0aGlzLmNvbmZpZyA9IHV0aWxzLmFzc2lnbih7IHNldHRpbmdzOiBzZXR0aW5ncyB9LCBiYXNlQ29uZmlnKTtcclxuXHQgICAgICAgIHZhciBjb25maWcgPSB0aGlzLmNvbmZpZztcclxuXHQgICAgICAgIHRoaXMuY3JlYXRlQ29uZmlnID0ge1xyXG5cdCAgICAgICAgICAgIGFjY2Vzc1Rva2VuOiBjb25maWcuYWNjZXNzVG9rZW4sXHJcblx0ICAgICAgICAgICAgZGF0YXNldElkOiBjb25maWcuZGF0YXNldElkIHx8IHRoaXMuZ2V0SWQoKSxcclxuXHQgICAgICAgICAgICBncm91cElkOiBjb25maWcuZ3JvdXBJZCxcclxuXHQgICAgICAgICAgICBzZXR0aW5nczogc2V0dGluZ3MsXHJcblx0ICAgICAgICAgICAgdG9rZW5UeXBlOiBjb25maWcudG9rZW5UeXBlLFxyXG5cdCAgICAgICAgICAgIHRoZW1lOiBjb25maWcudGhlbWVcclxuXHQgICAgICAgIH07XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBjaGVja3MgaWYgdGhlIHJlcG9ydCBpcyBzYXZlZC5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiByZXBvcnQuaXNTYXZlZCgpXHJcblx0ICAgICAqIGBgYFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn1cclxuXHQgICAgICovXHJcblx0ICAgIENyZWF0ZS5wcm90b3R5cGUuaXNTYXZlZCA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIHJldHVybiB1dGlscy5pc1NhdmVkSW50ZXJuYWwodGhpcy5zZXJ2aWNlLmhwbSwgdGhpcy5jb25maWcudW5pcXVlSWQsIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogQWRkcyB0aGUgYWJpbGl0eSB0byBnZXQgZGF0YXNldElkIGZyb20gdXJsLlxyXG5cdCAgICAgKiAoZS5nLiBodHRwOi8vZW1iZWRkZWQucG93ZXJiaS5jb20vYXBwVG9rZW5SZXBvcnRFbWJlZD9kYXRhc2V0SWQ9ODU0ODQ2ZWQtMjEwNi00ZGMyLWJjNTgtZWI3NzUzM2JmMmYxKS5cclxuXHQgICAgICpcclxuXHQgICAgICogQnkgZXh0cmFjdGluZyB0aGUgSUQgd2UgY2FuIGVuc3VyZSB0aGF0IHRoZSBJRCBpcyBhbHdheXMgZXhwbGljaXRseSBwcm92aWRlZCBhcyBwYXJ0IG9mIHRoZSBjcmVhdGUgY29uZmlndXJhdGlvbi5cclxuXHQgICAgICpcclxuXHQgICAgICogQHN0YXRpY1xyXG5cdCAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsXHJcblx0ICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcblx0ICAgICAqL1xyXG5cdCAgICBDcmVhdGUuZmluZElkRnJvbUVtYmVkVXJsID0gZnVuY3Rpb24gKHVybCkge1xyXG5cdCAgICAgICAgdmFyIGRhdGFzZXRJZFJlZ0V4ID0gL2RhdGFzZXRJZD1cIj8oW14mXSspXCI/LztcclxuXHQgICAgICAgIHZhciBkYXRhc2V0SWRNYXRjaCA9IHVybC5tYXRjaChkYXRhc2V0SWRSZWdFeCk7XHJcblx0ICAgICAgICB2YXIgZGF0YXNldElkO1xyXG5cdCAgICAgICAgaWYgKGRhdGFzZXRJZE1hdGNoKSB7XHJcblx0ICAgICAgICAgICAgZGF0YXNldElkID0gZGF0YXNldElkTWF0Y2hbMV07XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gZGF0YXNldElkO1xyXG5cdCAgICB9O1xyXG5cdCAgICByZXR1cm4gQ3JlYXRlO1xyXG5cdH0oZW1iZWQuRW1iZWQpKTtcclxuXHRleHBvcnRzLkNyZWF0ZSA9IENyZWF0ZTtcclxuXG5cbi8qKiovIH0pLFxuLyogMTIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IGZ1bmN0aW9uIChkLCBiKSB7XHJcblx0ICAgIGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdO1xyXG5cdCAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuXHQgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG5cdH07XHJcblx0dmFyIGVtYmVkID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHR2YXIgbW9kZWxzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcclxuXHR2YXIgdXRpbHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xyXG5cdHZhciBkZWZhdWx0c18xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KTtcclxuXHQvKipcclxuXHQgKiBBIFBvd2VyIEJJIERhc2hib2FyZCBlbWJlZCBjb21wb25lbnRcclxuXHQgKlxyXG5cdCAqIEBleHBvcnRcclxuXHQgKiBAY2xhc3MgRGFzaGJvYXJkXHJcblx0ICogQGV4dGVuZHMge2VtYmVkLkVtYmVkfVxyXG5cdCAqIEBpbXBsZW1lbnRzIHtJRGFzaGJvYXJkTm9kZX1cclxuXHQgKiBAaW1wbGVtZW50cyB7SUZpbHRlcmFibGV9XHJcblx0ICovXHJcblx0dmFyIERhc2hib2FyZCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0ICAgIF9fZXh0ZW5kcyhEYXNoYm9hcmQsIF9zdXBlcik7XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIGEgUG93ZXIgQkkgRGFzaGJvYXJkLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0ge3NlcnZpY2UuU2VydmljZX0gc2VydmljZVxyXG5cdCAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XHJcblx0ICAgICAqL1xyXG5cdCAgICBmdW5jdGlvbiBEYXNoYm9hcmQoc2VydmljZSwgZWxlbWVudCwgY29uZmlnLCBwaGFzZWRSZW5kZXIpIHtcclxuXHQgICAgICAgIF9zdXBlci5jYWxsKHRoaXMsIHNlcnZpY2UsIGVsZW1lbnQsIGNvbmZpZywgLyogaWZyYW1lICovIHVuZGVmaW5lZCwgcGhhc2VkUmVuZGVyKTtcclxuXHQgICAgICAgIHRoaXMubG9hZFBhdGggPSBcIi9kYXNoYm9hcmQvbG9hZFwiO1xyXG5cdCAgICAgICAgdGhpcy5waGFzZWRMb2FkUGF0aCA9IFwiL2Rhc2hib2FyZC9wcmVwYXJlXCI7XHJcblx0ICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseSh0aGlzLmFsbG93ZWRFdmVudHMsIERhc2hib2FyZC5hbGxvd2VkRXZlbnRzKTtcclxuXHQgICAgfVxyXG5cdCAgICAvKipcclxuXHQgICAgICogVGhpcyBhZGRzIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGZvciBvbGRlciBjb25maWcgd2hpY2ggdXNlZCB0aGUgZGFzaGJvYXJkSWQgcXVlcnkgcGFyYW0gdG8gc3BlY2lmeSBkYXNoYm9hcmQgaWQuXHJcblx0ICAgICAqIEUuZy4gaHR0cHM6Ly9wb3dlcmJpLWRmLmFuYWx5c2lzLWRmLndpbmRvd3MubmV0L2Rhc2hib2FyZEVtYmVkSG9zdD9kYXNoYm9hcmRJZD1lOTM2M2M2Mi1lZGI2LTRlYWMtOTJkMy0yMTk5YzVjYTJhOWVcclxuXHQgICAgICpcclxuXHQgICAgICogQnkgZXh0cmFjdGluZyB0aGUgaWQgd2UgY2FuIGVuc3VyZSBpZCBpcyBhbHdheXMgZXhwbGljaXRseSBwcm92aWRlZCBhcyBwYXJ0IG9mIHRoZSBsb2FkIGNvbmZpZ3VyYXRpb24uXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBzdGF0aWNcclxuXHQgICAgICogQHBhcmFtIHtzdHJpbmd9IHVybFxyXG5cdCAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxyXG5cdCAgICAgKi9cclxuXHQgICAgRGFzaGJvYXJkLmZpbmRJZEZyb21FbWJlZFVybCA9IGZ1bmN0aW9uICh1cmwpIHtcclxuXHQgICAgICAgIHZhciBkYXNoYm9hcmRJZFJlZ0V4ID0gL2Rhc2hib2FyZElkPVwiPyhbXiZdKylcIj8vO1xyXG5cdCAgICAgICAgdmFyIGRhc2hib2FyZElkTWF0Y2ggPSB1cmwubWF0Y2goZGFzaGJvYXJkSWRSZWdFeCk7XHJcblx0ICAgICAgICB2YXIgZGFzaGJvYXJkSWQ7XHJcblx0ICAgICAgICBpZiAoZGFzaGJvYXJkSWRNYXRjaCkge1xyXG5cdCAgICAgICAgICAgIGRhc2hib2FyZElkID0gZGFzaGJvYXJkSWRNYXRjaFsxXTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHJldHVybiBkYXNoYm9hcmRJZDtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEdldCBkYXNoYm9hcmQgaWQgZnJvbSBmaXJzdCBhdmFpbGFibGUgbG9jYXRpb246IG9wdGlvbnMsIGF0dHJpYnV0ZSwgZW1iZWQgdXJsLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxyXG5cdCAgICAgKi9cclxuXHQgICAgRGFzaGJvYXJkLnByb3RvdHlwZS5nZXRJZCA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIHZhciBjb25maWcgPSB0aGlzLmNvbmZpZztcclxuXHQgICAgICAgIHZhciBkYXNoYm9hcmRJZCA9IGNvbmZpZy5pZCB8fCB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKERhc2hib2FyZC5kYXNoYm9hcmRJZEF0dHJpYnV0ZSkgfHwgRGFzaGJvYXJkLmZpbmRJZEZyb21FbWJlZFVybChjb25maWcuZW1iZWRVcmwpO1xyXG5cdCAgICAgICAgaWYgKHR5cGVvZiBkYXNoYm9hcmRJZCAhPT0gJ3N0cmluZycgfHwgZGFzaGJvYXJkSWQubGVuZ3RoID09PSAwKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRGFzaGJvYXJkIGlkIGlzIHJlcXVpcmVkLCBidXQgaXQgd2FzIG5vdCBmb3VuZC4gWW91IG11c3QgcHJvdmlkZSBhbiBpZCBlaXRoZXIgYXMgcGFydCBvZiBlbWJlZCBjb25maWd1cmF0aW9uIG9yIGFzIGF0dHJpYnV0ZSAnXCIgKyBEYXNoYm9hcmQuZGFzaGJvYXJkSWRBdHRyaWJ1dGUgKyBcIicuXCIpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgcmV0dXJuIGRhc2hib2FyZElkO1xyXG5cdCAgICB9O1xyXG5cdCAgICAvKipcclxuXHQgICAgICogVmFsaWRhdGUgbG9hZCBjb25maWd1cmF0aW9uLlxyXG5cdCAgICAgKi9cclxuXHQgICAgRGFzaGJvYXJkLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChiYXNlQ29uZmlnKSB7XHJcblx0ICAgICAgICB2YXIgY29uZmlnID0gYmFzZUNvbmZpZztcclxuXHQgICAgICAgIHZhciBlcnJvciA9IG1vZGVscy52YWxpZGF0ZURhc2hib2FyZExvYWQoY29uZmlnKTtcclxuXHQgICAgICAgIHJldHVybiBlcnJvciA/IGVycm9yIDogdGhpcy5WYWxpZGF0ZVBhZ2VWaWV3KGNvbmZpZy5wYWdlVmlldyk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBQb3B1bGF0ZSBjb25maWcgZm9yIGxvYWQgY29uZmlnXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwYXJhbSB7SUVtYmVkQ29uZmlndXJhdGlvbkJhc2V9XHJcblx0ICAgICAqIEByZXR1cm5zIHt2b2lkfVxyXG5cdCAgICAgKi9cclxuXHQgICAgRGFzaGJvYXJkLnByb3RvdHlwZS5wb3B1bGF0ZUNvbmZpZyA9IGZ1bmN0aW9uIChiYXNlQ29uZmlnKSB7XHJcblx0ICAgICAgICB2YXIgY29uZmlnID0gYmFzZUNvbmZpZztcclxuXHQgICAgICAgIF9zdXBlci5wcm90b3R5cGUucG9wdWxhdGVDb25maWcuY2FsbCh0aGlzLCBjb25maWcpO1xyXG5cdCAgICAgICAgLy8gVE9ETzogQ2hhbmdlIHdoZW4gT2JqZWN0LmFzc2lnbiBpcyBhdmFpbGFibGUuXHJcblx0ICAgICAgICB2YXIgc2V0dGluZ3MgPSB1dGlscy5hc3NpZ24oe30sIGRlZmF1bHRzXzEuRGVmYXVsdHMuZGVmYXVsdFNldHRpbmdzLCBjb25maWcuc2V0dGluZ3MpO1xyXG5cdCAgICAgICAgY29uZmlnID0gdXRpbHMuYXNzaWduKHsgc2V0dGluZ3M6IHNldHRpbmdzIH0sIGNvbmZpZyk7XHJcblx0ICAgICAgICBjb25maWcuaWQgPSB0aGlzLmdldElkKCk7XHJcblx0ICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFZhbGlkYXRlIHRoYXQgcGFnZVZpZXcgaGFzIGEgbGVnYWwgdmFsdWU6IGlmIHBhZ2UgdmlldyBpcyBkZWZpbmVkIGl0IG11c3QgaGF2ZSBvbmUgb2YgdGhlIHZhbHVlcyBkZWZpbmVkIGluIG1vZGVscy5QYWdlVmlld1xyXG5cdCAgICAgKi9cclxuXHQgICAgRGFzaGJvYXJkLnByb3RvdHlwZS5WYWxpZGF0ZVBhZ2VWaWV3ID0gZnVuY3Rpb24gKHBhZ2VWaWV3KSB7XHJcblx0ICAgICAgICBpZiAocGFnZVZpZXcgJiYgcGFnZVZpZXcgIT09IFwiZml0VG9XaWR0aFwiICYmIHBhZ2VWaWV3ICE9PSBcIm9uZUNvbHVtblwiICYmIHBhZ2VWaWV3ICE9PSBcImFjdHVhbFNpemVcIikge1xyXG5cdCAgICAgICAgICAgIHJldHVybiBbeyBtZXNzYWdlOiBcInBhZ2VWaWV3IG11c3QgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmdzOiBmaXRUb1dpZHRoLCBvbmVDb2x1bW4sIGFjdHVhbFNpemVcIiB9XTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgfTtcclxuXHQgICAgRGFzaGJvYXJkLmFsbG93ZWRFdmVudHMgPSBbXCJ0aWxlQ2xpY2tlZFwiLCBcImVycm9yXCJdO1xyXG5cdCAgICBEYXNoYm9hcmQuZGFzaGJvYXJkSWRBdHRyaWJ1dGUgPSAncG93ZXJiaS1kYXNoYm9hcmQtaWQnO1xyXG5cdCAgICBEYXNoYm9hcmQudHlwZUF0dHJpYnV0ZSA9ICdwb3dlcmJpLXR5cGUnO1xyXG5cdCAgICBEYXNoYm9hcmQudHlwZSA9IFwiRGFzaGJvYXJkXCI7XHJcblx0ICAgIHJldHVybiBEYXNoYm9hcmQ7XHJcblx0fShlbWJlZC5FbWJlZCkpO1xyXG5cdGV4cG9ydHMuRGFzaGJvYXJkID0gRGFzaGJvYXJkO1xyXG5cblxuLyoqKi8gfSksXG4vKiAxMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdHZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgZnVuY3Rpb24gKGQsIGIpIHtcclxuXHQgICAgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07XHJcblx0ICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG5cdCAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcblx0fTtcclxuXHR2YXIgbW9kZWxzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcclxuXHR2YXIgZW1iZWQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xyXG5cdHZhciB1dGlscyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XHJcblx0dmFyIGRlZmF1bHRzXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xyXG5cdC8qKlxyXG5cdCAqIFRoZSBQb3dlciBCSSB0aWxlIGVtYmVkIGNvbXBvbmVudFxyXG5cdCAqXHJcblx0ICogQGV4cG9ydFxyXG5cdCAqIEBjbGFzcyBUaWxlXHJcblx0ICogQGV4dGVuZHMge0VtYmVkfVxyXG5cdCAqL1xyXG5cdHZhciBUaWxlID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHQgICAgX19leHRlbmRzKFRpbGUsIF9zdXBlcik7XHJcblx0ICAgIGZ1bmN0aW9uIFRpbGUoc2VydmljZSwgZWxlbWVudCwgYmFzZUNvbmZpZywgcGhhc2VkUmVuZGVyKSB7XHJcblx0ICAgICAgICB2YXIgY29uZmlnID0gYmFzZUNvbmZpZztcclxuXHQgICAgICAgIF9zdXBlci5jYWxsKHRoaXMsIHNlcnZpY2UsIGVsZW1lbnQsIGNvbmZpZywgLyogaWZyYW1lICovIHVuZGVmaW5lZCwgcGhhc2VkUmVuZGVyKTtcclxuXHQgICAgICAgIHRoaXMubG9hZFBhdGggPSBcIi90aWxlL2xvYWRcIjtcclxuXHQgICAgICAgIEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMuYWxsb3dlZEV2ZW50cywgVGlsZS5hbGxvd2VkRXZlbnRzKTtcclxuXHQgICAgfVxyXG5cdCAgICAvKipcclxuXHQgICAgICogVGhlIElEIG9mIHRoZSB0aWxlXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcblx0ICAgICAqL1xyXG5cdCAgICBUaWxlLnByb3RvdHlwZS5nZXRJZCA9IGZ1bmN0aW9uICgpIHtcclxuXHQgICAgICAgIHZhciBjb25maWcgPSB0aGlzLmNvbmZpZztcclxuXHQgICAgICAgIHZhciB0aWxlSWQgPSBjb25maWcuaWQgfHwgVGlsZS5maW5kSWRGcm9tRW1iZWRVcmwodGhpcy5jb25maWcuZW1iZWRVcmwpO1xyXG5cdCAgICAgICAgaWYgKHR5cGVvZiB0aWxlSWQgIT09ICdzdHJpbmcnIHx8IHRpbGVJZC5sZW5ndGggPT09IDApIHtcclxuXHQgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaWxlIGlkIGlzIHJlcXVpcmVkLCBidXQgaXQgd2FzIG5vdCBmb3VuZC4gWW91IG11c3QgcHJvdmlkZSBhbiBpZCBlaXRoZXIgYXMgcGFydCBvZiBlbWJlZCBjb25maWd1cmF0aW9uLlwiKTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIHJldHVybiB0aWxlSWQ7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBWYWxpZGF0ZSBsb2FkIGNvbmZpZ3VyYXRpb24uXHJcblx0ICAgICAqL1xyXG5cdCAgICBUaWxlLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChjb25maWcpIHtcclxuXHQgICAgICAgIHZhciBlbWJlZENvbmZpZyA9IGNvbmZpZztcclxuXHQgICAgICAgIHJldHVybiBtb2RlbHMudmFsaWRhdGVUaWxlTG9hZChlbWJlZENvbmZpZyk7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBQb3B1bGF0ZSBjb25maWcgZm9yIGxvYWQgY29uZmlnXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwYXJhbSB7SUVtYmVkQ29uZmlndXJhdGlvbkJhc2V9XHJcblx0ICAgICAqIEByZXR1cm5zIHt2b2lkfVxyXG5cdCAgICAgKi9cclxuXHQgICAgVGlsZS5wcm90b3R5cGUucG9wdWxhdGVDb25maWcgPSBmdW5jdGlvbiAoYmFzZUNvbmZpZykge1xyXG5cdCAgICAgICAgdmFyIGNvbmZpZyA9IGJhc2VDb25maWc7XHJcblx0ICAgICAgICBfc3VwZXIucHJvdG90eXBlLnBvcHVsYXRlQ29uZmlnLmNhbGwodGhpcywgY29uZmlnKTtcclxuXHQgICAgICAgIC8vIFRPRE86IENoYW5nZSB3aGVuIE9iamVjdC5hc3NpZ24gaXMgYXZhaWxhYmxlLlxyXG5cdCAgICAgICAgdmFyIHNldHRpbmdzID0gdXRpbHMuYXNzaWduKHt9LCBkZWZhdWx0c18xLkRlZmF1bHRzLmRlZmF1bHRTZXR0aW5ncywgY29uZmlnLnNldHRpbmdzKTtcclxuXHQgICAgICAgIGNvbmZpZyA9IHV0aWxzLmFzc2lnbih7IHNldHRpbmdzOiBzZXR0aW5ncyB9LCBjb25maWcpO1xyXG5cdCAgICAgICAgY29uZmlnLmlkID0gdGhpcy5nZXRJZCgpO1xyXG5cdCAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBBZGRzIHRoZSBhYmlsaXR5IHRvIGdldCB0aWxlSWQgZnJvbSB1cmwuXHJcblx0ICAgICAqIEJ5IGV4dHJhY3RpbmcgdGhlIElEIHdlIGNhbiBlbnN1cmUgdGhhdCB0aGUgSUQgaXMgYWx3YXlzIGV4cGxpY2l0bHkgcHJvdmlkZWQgYXMgcGFydCBvZiB0aGUgbG9hZCBjb25maWd1cmF0aW9uLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAc3RhdGljXHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcclxuXHQgICAgICogQHJldHVybnMge3N0cmluZ31cclxuXHQgICAgICovXHJcblx0ICAgIFRpbGUuZmluZElkRnJvbUVtYmVkVXJsID0gZnVuY3Rpb24gKHVybCkge1xyXG5cdCAgICAgICAgdmFyIHRpbGVJZFJlZ0V4ID0gL3RpbGVJZD1cIj8oW14mXSspXCI/LztcclxuXHQgICAgICAgIHZhciB0aWxlSWRNYXRjaCA9IHVybC5tYXRjaCh0aWxlSWRSZWdFeCk7XHJcblx0ICAgICAgICB2YXIgdGlsZUlkO1xyXG5cdCAgICAgICAgaWYgKHRpbGVJZE1hdGNoKSB7XHJcblx0ICAgICAgICAgICAgdGlsZUlkID0gdGlsZUlkTWF0Y2hbMV07XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICByZXR1cm4gdGlsZUlkO1xyXG5cdCAgICB9O1xyXG5cdCAgICBUaWxlLnR5cGUgPSBcIlRpbGVcIjtcclxuXHQgICAgVGlsZS5hbGxvd2VkRXZlbnRzID0gW1widGlsZUNsaWNrZWRcIiwgXCJ0aWxlTG9hZGVkXCJdO1xyXG5cdCAgICByZXR1cm4gVGlsZTtcclxuXHR9KGVtYmVkLkVtYmVkKSk7XHJcblx0ZXhwb3J0cy5UaWxlID0gVGlsZTtcclxuXG5cbi8qKiovIH0pLFxuLyogMTQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IGZ1bmN0aW9uIChkLCBiKSB7XHJcblx0ICAgIGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdO1xyXG5cdCAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuXHQgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG5cdH07XHJcblx0dmFyIG1vZGVscyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0dmFyIGVtYmVkID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcclxuXHQvKipcclxuXHQgKiBUaGUgUG93ZXIgQkkgUW5hIGVtYmVkIGNvbXBvbmVudFxyXG5cdCAqXHJcblx0ICogQGV4cG9ydFxyXG5cdCAqIEBjbGFzcyBRbmFcclxuXHQgKiBAZXh0ZW5kcyB7RW1iZWR9XHJcblx0ICovXHJcblx0dmFyIFFuYSA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcblx0ICAgIF9fZXh0ZW5kcyhRbmEsIF9zdXBlcik7XHJcblx0ICAgIGZ1bmN0aW9uIFFuYShzZXJ2aWNlLCBlbGVtZW50LCBjb25maWcsIHBoYXNlZFJlbmRlcikge1xyXG5cdCAgICAgICAgX3N1cGVyLmNhbGwodGhpcywgc2VydmljZSwgZWxlbWVudCwgY29uZmlnLCAvKiBpZnJhbWUgKi8gdW5kZWZpbmVkLCBwaGFzZWRSZW5kZXIpO1xyXG5cdCAgICAgICAgdGhpcy5sb2FkUGF0aCA9IFwiL3FuYS9sb2FkXCI7XHJcblx0ICAgICAgICB0aGlzLnBoYXNlZExvYWRQYXRoID0gXCIvcW5hL3ByZXBhcmVcIjtcclxuXHQgICAgICAgIEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMuYWxsb3dlZEV2ZW50cywgUW5hLmFsbG93ZWRFdmVudHMpO1xyXG5cdCAgICB9XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBUaGUgSUQgb2YgdGhlIFFuYSBlbWJlZCBjb21wb25lbnRcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge3N0cmluZ31cclxuXHQgICAgICovXHJcblx0ICAgIFFuYS5wcm90b3R5cGUuZ2V0SWQgPSBmdW5jdGlvbiAoKSB7XHJcblx0ICAgICAgICByZXR1cm4gbnVsbDtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIENoYW5nZSB0aGUgcXVlc3Rpb24gb2YgdGhlIFEmQSBlbWJlZCBjb21wb25lbnRcclxuXHQgICAgICpcclxuXHQgICAgICogQHBhcmFtIHF1ZXN0aW9uIC0gcXVlc3Rpb24gd2hpY2ggd2lsbCByZW5kZXIgUSZBIGRhdGFcclxuXHQgICAgICogQHJldHVybnMge3N0cmluZ31cclxuXHQgICAgICovXHJcblx0ICAgIFFuYS5wcm90b3R5cGUuc2V0UXVlc3Rpb24gPSBmdW5jdGlvbiAocXVlc3Rpb24pIHtcclxuXHQgICAgICAgIHZhciBxbmFEYXRhID0ge1xyXG5cdCAgICAgICAgICAgIHF1ZXN0aW9uOiBxdWVzdGlvblxyXG5cdCAgICAgICAgfTtcclxuXHQgICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2UuaHBtLnBvc3QoJy9xbmEvaW50ZXJwcmV0JywgcW5hRGF0YSwgeyB1aWQ6IHRoaXMuY29uZmlnLnVuaXF1ZUlkIH0sIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpXHJcblx0ICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFZhbGlkYXRlIGxvYWQgY29uZmlndXJhdGlvbi5cclxuXHQgICAgICovXHJcblx0ICAgIFFuYS5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoY29uZmlnKSB7XHJcblx0ICAgICAgICByZXR1cm4gbW9kZWxzLnZhbGlkYXRlTG9hZFFuYUNvbmZpZ3VyYXRpb24oY29uZmlnKTtcclxuXHQgICAgfTtcclxuXHQgICAgUW5hLnR5cGUgPSBcIlFuYVwiO1xyXG5cdCAgICBRbmEuYWxsb3dlZEV2ZW50cyA9IFtcImxvYWRlZFwiLCBcInZpc3VhbFJlbmRlcmVkXCJdO1xyXG5cdCAgICByZXR1cm4gUW5hO1xyXG5cdH0oZW1iZWQuRW1iZWQpKTtcclxuXHRleHBvcnRzLlFuYSA9IFFuYTtcclxuXG5cbi8qKiovIH0pLFxuLyogMTUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHR2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IGZ1bmN0aW9uIChkLCBiKSB7XHJcblx0ICAgIGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdO1xyXG5cdCAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuXHQgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG5cdH07XHJcblx0dmFyIG1vZGVscyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XHJcblx0dmFyIHJlcG9ydF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KTtcclxuXHQvKipcclxuXHQgKiBUaGUgUG93ZXIgQkkgVmlzdWFsIGVtYmVkIGNvbXBvbmVudFxyXG5cdCAqXHJcblx0ICogQGV4cG9ydFxyXG5cdCAqIEBjbGFzcyBWaXN1YWxcclxuXHQgKi9cclxuXHR2YXIgVmlzdWFsID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuXHQgICAgX19leHRlbmRzKFZpc3VhbCwgX3N1cGVyKTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYSBQb3dlciBCSSBTaW5nbGUgVmlzdWFsLlxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0ge3NlcnZpY2UuU2VydmljZX0gc2VydmljZVxyXG5cdCAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XHJcblx0ICAgICAqIEBwYXJhbSB7ZW1iZWQuSUVtYmVkQ29uZmlndXJhdGlvbn0gY29uZmlnXHJcblx0ICAgICAqL1xyXG5cdCAgICBmdW5jdGlvbiBWaXN1YWwoc2VydmljZSwgZWxlbWVudCwgYmFzZUNvbmZpZywgcGhhc2VkUmVuZGVyLCBpZnJhbWUpIHtcclxuXHQgICAgICAgIF9zdXBlci5jYWxsKHRoaXMsIHNlcnZpY2UsIGVsZW1lbnQsIGJhc2VDb25maWcsIHBoYXNlZFJlbmRlciwgaWZyYW1lKTtcclxuXHQgICAgfVxyXG5cdCAgICBWaXN1YWwucHJvdG90eXBlLmxvYWQgPSBmdW5jdGlvbiAoYmFzZUNvbmZpZywgcGhhc2VkUmVuZGVyKSB7XHJcblx0ICAgICAgICB2YXIgY29uZmlnID0gYmFzZUNvbmZpZztcclxuXHQgICAgICAgIGlmICh0eXBlb2YgY29uZmlnLnBhZ2VOYW1lICE9PSAnc3RyaW5nJyB8fCBjb25maWcucGFnZU5hbWUubGVuZ3RoID09PSAwKSB7XHJcblx0ICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGFnZSBuYW1lIGlzIHJlcXVpcmVkIHdoZW4gZW1iZWRkaW5nIGEgdmlzdWFsLlwiKTtcclxuXHQgICAgICAgIH1cclxuXHQgICAgICAgIGlmICh0eXBlb2YgY29uZmlnLnZpc3VhbE5hbWUgIT09ICdzdHJpbmcnIHx8IGNvbmZpZy52aXN1YWxOYW1lLmxlbmd0aCA9PT0gMCkge1xyXG5cdCAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlZpc3VhbCBuYW1lIGlzIHJlcXVpcmVkLCBidXQgaXQgd2FzIG5vdCBmb3VuZC4gWW91IG11c3QgcHJvdmlkZSBhIHZpc3VhbCBuYW1lIGFzIHBhcnQgb2YgZW1iZWQgY29uZmlndXJhdGlvbi5cIik7XHJcblx0ICAgICAgICB9XHJcblx0ICAgICAgICAvLyBjYWxjdWxhdGUgY3VzdG9tIGxheW91dCBzZXR0aW5ncyBhbmQgb3ZlcnJpZGUgY29uZmlnLlxyXG5cdCAgICAgICAgdmFyIHdpZHRoID0gY29uZmlnLndpZHRoID8gY29uZmlnLndpZHRoIDogdGhpcy5pZnJhbWUub2Zmc2V0V2lkdGg7XHJcblx0ICAgICAgICB2YXIgaGVpZ2h0ID0gY29uZmlnLmhlaWdodCA/IGNvbmZpZy5oZWlnaHQgOiB0aGlzLmlmcmFtZS5vZmZzZXRIZWlnaHQ7XHJcblx0ICAgICAgICB2YXIgcGFnZVNpemUgPSB7XHJcblx0ICAgICAgICAgICAgdHlwZTogbW9kZWxzLlBhZ2VTaXplVHlwZS5DdXN0b20sXHJcblx0ICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxyXG5cdCAgICAgICAgICAgIGhlaWdodDogaGVpZ2h0LFxyXG5cdCAgICAgICAgfTtcclxuXHQgICAgICAgIHZhciBwYWdlc0xheW91dCA9IHt9O1xyXG5cdCAgICAgICAgcGFnZXNMYXlvdXRbY29uZmlnLnBhZ2VOYW1lXSA9IHtcclxuXHQgICAgICAgICAgICBkZWZhdWx0TGF5b3V0OiB7XHJcblx0ICAgICAgICAgICAgICAgIGRpc3BsYXlTdGF0ZToge1xyXG5cdCAgICAgICAgICAgICAgICAgICAgbW9kZTogbW9kZWxzLlZpc3VhbENvbnRhaW5lckRpc3BsYXlNb2RlLkhpZGRlblxyXG5cdCAgICAgICAgICAgICAgICB9XHJcblx0ICAgICAgICAgICAgfSxcclxuXHQgICAgICAgICAgICB2aXN1YWxzTGF5b3V0OiB7fVxyXG5cdCAgICAgICAgfTtcclxuXHQgICAgICAgIHBhZ2VzTGF5b3V0W2NvbmZpZy5wYWdlTmFtZV0udmlzdWFsc0xheW91dFtjb25maWcudmlzdWFsTmFtZV0gPSB7XHJcblx0ICAgICAgICAgICAgZGlzcGxheVN0YXRlOiB7XHJcblx0ICAgICAgICAgICAgICAgIG1vZGU6IG1vZGVscy5WaXN1YWxDb250YWluZXJEaXNwbGF5TW9kZS5WaXNpYmxlXHJcblx0ICAgICAgICAgICAgfSxcclxuXHQgICAgICAgICAgICB4OiAxLFxyXG5cdCAgICAgICAgICAgIHk6IDEsXHJcblx0ICAgICAgICAgICAgejogMSxcclxuXHQgICAgICAgICAgICB3aWR0aDogcGFnZVNpemUud2lkdGgsXHJcblx0ICAgICAgICAgICAgaGVpZ2h0OiBwYWdlU2l6ZS5oZWlnaHRcclxuXHQgICAgICAgIH07XHJcblx0ICAgICAgICBjb25maWcuc2V0dGluZ3MgPSBjb25maWcuc2V0dGluZ3MgfHwge307XHJcblx0ICAgICAgICBjb25maWcuc2V0dGluZ3MuZmlsdGVyUGFuZUVuYWJsZWQgPSBmYWxzZTtcclxuXHQgICAgICAgIGNvbmZpZy5zZXR0aW5ncy5uYXZDb250ZW50UGFuZUVuYWJsZWQgPSBmYWxzZTtcclxuXHQgICAgICAgIGNvbmZpZy5zZXR0aW5ncy5sYXlvdXRUeXBlID0gbW9kZWxzLkxheW91dFR5cGUuQ3VzdG9tO1xyXG5cdCAgICAgICAgY29uZmlnLnNldHRpbmdzLmN1c3RvbUxheW91dCA9IHtcclxuXHQgICAgICAgICAgICBkaXNwbGF5T3B0aW9uOiBtb2RlbHMuRGlzcGxheU9wdGlvbi5GaXRUb1BhZ2UsXHJcblx0ICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplLFxyXG5cdCAgICAgICAgICAgIHBhZ2VzTGF5b3V0OiBwYWdlc0xheW91dFxyXG5cdCAgICAgICAgfTtcclxuXHQgICAgICAgIHJldHVybiBfc3VwZXIucHJvdG90eXBlLmxvYWQuY2FsbCh0aGlzLCBjb25maWcsIHBoYXNlZFJlbmRlcik7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBHZXRzIHRoZSBsaXN0IG9mIHBhZ2VzIHdpdGhpbiB0aGUgcmVwb3J0IC0gbm90IHN1cHBvcnRlZCBpbiB2aXN1YWwgZW1iZWQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFBhZ2VbXT59XHJcblx0ICAgICAqL1xyXG5cdCAgICBWaXN1YWwucHJvdG90eXBlLmdldFBhZ2VzID0gZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgdGhyb3cgVmlzdWFsLkdldFBhZ2VzTm90U3VwcG9ydGVkRXJyb3I7XHJcblx0ICAgIH07XHJcblx0ICAgIC8qKlxyXG5cdCAgICAgKiBTZXRzIHRoZSBhY3RpdmUgcGFnZSBvZiB0aGUgcmVwb3J0IC0gbm90IHN1cHBvcnRlZCBpbiB2aXN1YWwgZW1iZWQuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYWdlTmFtZVxyXG5cdCAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cclxuXHQgICAgICovXHJcblx0ICAgIFZpc3VhbC5wcm90b3R5cGUuc2V0UGFnZSA9IGZ1bmN0aW9uIChwYWdlTmFtZSkge1xyXG5cdCAgICAgICAgdGhyb3cgVmlzdWFsLlNldFBhZ2VOb3RTdXBwb3J0ZWRFcnJvcjtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIEdldHMgZmlsdGVycyB0aGF0IGFyZSBhcHBsaWVkIHRvIHRoZSBmaWx0ZXIgbGV2ZWwuXHJcblx0ICAgICAqIERlZmF1bHQgZmlsdGVyIGxldmVsIGlzIHZpc3VhbCBsZXZlbC5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiB2aXN1YWwuZ2V0RmlsdGVycyhmaWx0ZXJzTGV2ZWwpXHJcblx0ICAgICAqICAgLnRoZW4oZmlsdGVycyA9PiB7XHJcblx0ICAgICAqICAgICAuLi5cclxuXHQgICAgICogICB9KTtcclxuXHQgICAgICogYGBgXHJcblx0ICAgICAqXHJcblx0ICAgICAqIEByZXR1cm5zIHtQcm9taXNlPG1vZGVscy5JRmlsdGVyW10+fVxyXG5cdCAgICAgKi9cclxuXHQgICAgVmlzdWFsLnByb3RvdHlwZS5nZXRGaWx0ZXJzID0gZnVuY3Rpb24gKGZpbHRlcnNMZXZlbCkge1xyXG5cdCAgICAgICAgdmFyIHVybCA9IHRoaXMuZ2V0RmlsdGVyc0xldmVsVXJsKGZpbHRlcnNMZXZlbCk7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmhwbS5nZXQodXJsLCB7IHVpZDogdGhpcy5jb25maWcudW5pcXVlSWQgfSwgdGhpcy5pZnJhbWUuY29udGVudFdpbmRvdylcclxuXHQgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmJvZHk7IH0sIGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFNldHMgZmlsdGVycyBhdCB0aGUgZmlsdGVyIGxldmVsLlxyXG5cdCAgICAgKiBEZWZhdWx0IGZpbHRlciBsZXZlbCBpcyB2aXN1YWwgbGV2ZWwuXHJcblx0ICAgICAqXHJcblx0ICAgICAqIGBgYGphdmFzY3JpcHRcclxuXHQgICAgICogY29uc3QgZmlsdGVyczogW1xyXG5cdCAgICAgKiAgICAuLi5cclxuXHQgICAgICogXTtcclxuXHQgICAgICpcclxuXHQgICAgICogdmlzdWFsLnNldEZpbHRlcnMoZmlsdGVycywgZmlsdGVyc0xldmVsKVxyXG5cdCAgICAgKiAgLmNhdGNoKGVycm9ycyA9PiB7XHJcblx0ICAgICAqICAgIC4uLlxyXG5cdCAgICAgKiAgfSk7XHJcblx0ICAgICAqIGBgYFxyXG5cdCAgICAgKlxyXG5cdCAgICAgKiBAcGFyYW0geyhtb2RlbHMuSUZpbHRlcltdKX0gZmlsdGVyc1xyXG5cdCAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cclxuXHQgICAgICovXHJcblx0ICAgIFZpc3VhbC5wcm90b3R5cGUuc2V0RmlsdGVycyA9IGZ1bmN0aW9uIChmaWx0ZXJzLCBmaWx0ZXJzTGV2ZWwpIHtcclxuXHQgICAgICAgIHZhciB1cmwgPSB0aGlzLmdldEZpbHRlcnNMZXZlbFVybChmaWx0ZXJzTGV2ZWwpO1xyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5ocG0ucHV0KHVybCwgZmlsdGVycywgeyB1aWQ6IHRoaXMuY29uZmlnLnVuaXF1ZUlkIH0sIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpXHJcblx0ICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdCAgICAgICAgICAgIHRocm93IHJlc3BvbnNlLmJvZHk7XHJcblx0ICAgICAgICB9KTtcclxuXHQgICAgfTtcclxuXHQgICAgLyoqXHJcblx0ICAgICAqIFJlbW92ZXMgYWxsIGZpbHRlcnMgZnJvbSB0aGUgY3VycmVudCBmaWx0ZXIgbGV2ZWwuXHJcblx0ICAgICAqIERlZmF1bHQgZmlsdGVyIGxldmVsIGlzIHZpc3VhbCBsZXZlbC5cclxuXHQgICAgICpcclxuXHQgICAgICogYGBgamF2YXNjcmlwdFxyXG5cdCAgICAgKiB2aXN1YWwucmVtb3ZlRmlsdGVycyhmaWx0ZXJzTGV2ZWwpO1xyXG5cdCAgICAgKiBgYGBcclxuXHQgICAgICpcclxuXHQgICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XHJcblx0ICAgICAqL1xyXG5cdCAgICBWaXN1YWwucHJvdG90eXBlLnJlbW92ZUZpbHRlcnMgPSBmdW5jdGlvbiAoZmlsdGVyc0xldmVsKSB7XHJcblx0ICAgICAgICByZXR1cm4gdGhpcy5zZXRGaWx0ZXJzKFtdLCBmaWx0ZXJzTGV2ZWwpO1xyXG5cdCAgICB9O1xyXG5cdCAgICBWaXN1YWwucHJvdG90eXBlLmdldEZpbHRlcnNMZXZlbFVybCA9IGZ1bmN0aW9uIChmaWx0ZXJzTGV2ZWwpIHtcclxuXHQgICAgICAgIHZhciBjb25maWcgPSB0aGlzLmNvbmZpZztcclxuXHQgICAgICAgIHN3aXRjaCAoZmlsdGVyc0xldmVsKSB7XHJcblx0ICAgICAgICAgICAgY2FzZSBtb2RlbHMuRmlsdGVyc0xldmVsLlJlcG9ydDpcclxuXHQgICAgICAgICAgICAgICAgcmV0dXJuIFwiL3JlcG9ydC9maWx0ZXJzXCI7XHJcblx0ICAgICAgICAgICAgY2FzZSBtb2RlbHMuRmlsdGVyc0xldmVsLlBhZ2U6XHJcblx0ICAgICAgICAgICAgICAgIHJldHVybiBcIi9yZXBvcnQvcGFnZXMvXCIgKyBjb25maWcucGFnZU5hbWUgKyBcIi9maWx0ZXJzXCI7XHJcblx0ICAgICAgICAgICAgZGVmYXVsdDpcclxuXHQgICAgICAgICAgICAgICAgcmV0dXJuIFwiL3JlcG9ydC9wYWdlcy9cIiArIGNvbmZpZy5wYWdlTmFtZSArIFwiL3Zpc3VhbHMvXCIgKyBjb25maWcudmlzdWFsTmFtZSArIFwiL2ZpbHRlcnNcIjtcclxuXHQgICAgICAgIH1cclxuXHQgICAgfTtcclxuXHQgICAgVmlzdWFsLnR5cGUgPSBcInZpc3VhbFwiO1xyXG5cdCAgICBWaXN1YWwuR2V0UGFnZXNOb3RTdXBwb3J0ZWRFcnJvciA9IFwiR2V0IHBhZ2VzIGlzIG5vdCBzdXBwb3J0ZWQgd2hpbGUgZW1iZWRkaW5nIGEgdmlzdWFsLlwiO1xyXG5cdCAgICBWaXN1YWwuU2V0UGFnZU5vdFN1cHBvcnRlZEVycm9yID0gXCJTZXQgcGFnZSBpcyBub3Qgc3VwcG9ydGVkIHdoaWxlIGVtYmVkZGluZyBhIHZpc3VhbC5cIjtcclxuXHQgICAgcmV0dXJuIFZpc3VhbDtcclxuXHR9KHJlcG9ydF8xLlJlcG9ydCkpO1xyXG5cdGV4cG9ydHMuVmlzdWFsID0gVmlzdWFsO1xyXG5cblxuLyoqKi8gfSksXG4vKiAxNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdHZhciBjb25maWdfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTcpO1xyXG5cdHZhciB3cG1wID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOCk7XHJcblx0dmFyIGhwbSA9IF9fd2VicGFja19yZXF1aXJlX18oMTkpO1xyXG5cdHZhciByb3V0ZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIwKTtcclxuXHRleHBvcnRzLmhwbUZhY3RvcnkgPSBmdW5jdGlvbiAod3BtcCwgZGVmYXVsdFRhcmdldFdpbmRvdywgc2RrVmVyc2lvbiwgc2RrVHlwZSkge1xyXG5cdCAgICBpZiAoc2RrVmVyc2lvbiA9PT0gdm9pZCAwKSB7IHNka1ZlcnNpb24gPSBjb25maWdfMS5kZWZhdWx0LnZlcnNpb247IH1cclxuXHQgICAgaWYgKHNka1R5cGUgPT09IHZvaWQgMCkgeyBzZGtUeXBlID0gY29uZmlnXzEuZGVmYXVsdC50eXBlOyB9XHJcblx0ICAgIHJldHVybiBuZXcgaHBtLkh0dHBQb3N0TWVzc2FnZSh3cG1wLCB7XHJcblx0ICAgICAgICAneC1zZGstdHlwZSc6IHNka1R5cGUsXHJcblx0ICAgICAgICAneC1zZGstdmVyc2lvbic6IHNka1ZlcnNpb25cclxuXHQgICAgfSwgZGVmYXVsdFRhcmdldFdpbmRvdyk7XHJcblx0fTtcclxuXHRleHBvcnRzLndwbXBGYWN0b3J5ID0gZnVuY3Rpb24gKG5hbWUsIGxvZ01lc3NhZ2VzLCBldmVudFNvdXJjZU92ZXJyaWRlV2luZG93KSB7XHJcblx0ICAgIHJldHVybiBuZXcgd3BtcC5XaW5kb3dQb3N0TWVzc2FnZVByb3h5KHtcclxuXHQgICAgICAgIHByb2Nlc3NUcmFja2luZ1Byb3BlcnRpZXM6IHtcclxuXHQgICAgICAgICAgICBhZGRUcmFja2luZ1Byb3BlcnRpZXM6IGhwbS5IdHRwUG9zdE1lc3NhZ2UuYWRkVHJhY2tpbmdQcm9wZXJ0aWVzLFxyXG5cdCAgICAgICAgICAgIGdldFRyYWNraW5nUHJvcGVydGllczogaHBtLkh0dHBQb3N0TWVzc2FnZS5nZXRUcmFja2luZ1Byb3BlcnRpZXMsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgaXNFcnJvck1lc3NhZ2U6IGhwbS5IdHRwUG9zdE1lc3NhZ2UuaXNFcnJvck1lc3NhZ2UsXHJcblx0ICAgICAgICBzdXBwcmVzc1dhcm5pbmdzOiB0cnVlLFxyXG5cdCAgICAgICAgbmFtZTogbmFtZSxcclxuXHQgICAgICAgIGxvZ01lc3NhZ2VzOiBsb2dNZXNzYWdlcyxcclxuXHQgICAgICAgIGV2ZW50U291cmNlT3ZlcnJpZGVXaW5kb3c6IGV2ZW50U291cmNlT3ZlcnJpZGVXaW5kb3dcclxuXHQgICAgfSk7XHJcblx0fTtcclxuXHRleHBvcnRzLnJvdXRlckZhY3RvcnkgPSBmdW5jdGlvbiAod3BtcCkge1xyXG5cdCAgICByZXR1cm4gbmV3IHJvdXRlci5Sb3V0ZXIod3BtcCk7XHJcblx0fTtcclxuXG5cbi8qKiovIH0pLFxuLyogMTcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHR2YXIgY29uZmlnID0ge1xyXG5cdCAgICB2ZXJzaW9uOiAnMi44LjAnLFxyXG5cdCAgICB0eXBlOiAnanMnXHJcblx0fTtcclxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcblx0ZXhwb3J0cy5kZWZhdWx0ID0gY29uZmlnO1xyXG5cblxuLyoqKi8gfSksXG4vKiAxOCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdC8qISB3aW5kb3ctcG9zdC1tZXNzYWdlLXByb3h5IHYwLjIuNSB8IChjKSAyMDE2IE1pY3Jvc29mdCBDb3Jwb3JhdGlvbiBNSVQgKi9cblx0KGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0XHRpZih0cnVlKVxuXHRcdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdFx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRcdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdFx0ZXhwb3J0c1tcIndpbmRvdy1wb3N0LW1lc3NhZ2UtcHJveHlcIl0gPSBmYWN0b3J5KCk7XG5cdFx0ZWxzZVxuXHRcdFx0cm9vdFtcIndpbmRvdy1wb3N0LW1lc3NhZ2UtcHJveHlcIl0gPSBmYWN0b3J5KCk7XG5cdH0pKHRoaXMsIGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gLyoqKioqKi8gKGZ1bmN0aW9uKG1vZHVsZXMpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuXHQvKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcblx0LyoqKioqKi8gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5cdC8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdC8qKioqKiovIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcblx0LyoqKioqKi8gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHQvKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuXHQvKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fSxcblx0LyoqKioqKi8gXHRcdFx0aWQ6IG1vZHVsZUlkLFxuXHQvKioqKioqLyBcdFx0XHRsb2FkZWQ6IGZhbHNlXG5cdC8qKioqKiovIFx0XHR9O1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdC8qKioqKiovIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcblx0LyoqKioqKi8gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0LyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcblx0LyoqKioqKi8gXHR9XG5cdC8qKioqKiovXG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcblx0LyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG5cdC8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuXHQvKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG5cdC8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cdC8qKioqKiovIH0pXG5cdC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cdC8qKioqKiovIChbXG5cdC8qIDAgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXHRcblx0XHRcInVzZSBzdHJpY3RcIjtcclxuXHRcdHZhciBXaW5kb3dQb3N0TWVzc2FnZVByb3h5ID0gKGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICBmdW5jdGlvbiBXaW5kb3dQb3N0TWVzc2FnZVByb3h5KG9wdGlvbnMpIHtcclxuXHRcdCAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuXHRcdCAgICAgICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge1xyXG5cdFx0ICAgICAgICAgICAgcHJvY2Vzc1RyYWNraW5nUHJvcGVydGllczoge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGFkZFRyYWNraW5nUHJvcGVydGllczogV2luZG93UG9zdE1lc3NhZ2VQcm94eS5kZWZhdWx0QWRkVHJhY2tpbmdQcm9wZXJ0aWVzLFxyXG5cdFx0ICAgICAgICAgICAgICAgIGdldFRyYWNraW5nUHJvcGVydGllczogV2luZG93UG9zdE1lc3NhZ2VQcm94eS5kZWZhdWx0R2V0VHJhY2tpbmdQcm9wZXJ0aWVzXHJcblx0XHQgICAgICAgICAgICB9LFxyXG5cdFx0ICAgICAgICAgICAgaXNFcnJvck1lc3NhZ2U6IFdpbmRvd1Bvc3RNZXNzYWdlUHJveHkuZGVmYXVsdElzRXJyb3JNZXNzYWdlLFxyXG5cdFx0ICAgICAgICAgICAgcmVjZWl2ZVdpbmRvdzogd2luZG93LFxyXG5cdFx0ICAgICAgICAgICAgbmFtZTogV2luZG93UG9zdE1lc3NhZ2VQcm94eS5jcmVhdGVSYW5kb21TdHJpbmcoKVxyXG5cdFx0ICAgICAgICB9OyB9XHJcblx0XHQgICAgICAgIHRoaXMucGVuZGluZ1JlcXVlc3RQcm9taXNlcyA9IHt9O1xyXG5cdFx0ICAgICAgICAvLyBzYXZlIG9wdGlvbnMgd2l0aCBkZWZhdWx0c1xyXG5cdFx0ICAgICAgICB0aGlzLmFkZFRyYWNraW5nUHJvcGVydGllcyA9IChvcHRpb25zLnByb2Nlc3NUcmFja2luZ1Byb3BlcnRpZXMgJiYgb3B0aW9ucy5wcm9jZXNzVHJhY2tpbmdQcm9wZXJ0aWVzLmFkZFRyYWNraW5nUHJvcGVydGllcykgfHwgV2luZG93UG9zdE1lc3NhZ2VQcm94eS5kZWZhdWx0QWRkVHJhY2tpbmdQcm9wZXJ0aWVzO1xyXG5cdFx0ICAgICAgICB0aGlzLmdldFRyYWNraW5nUHJvcGVydGllcyA9IChvcHRpb25zLnByb2Nlc3NUcmFja2luZ1Byb3BlcnRpZXMgJiYgb3B0aW9ucy5wcm9jZXNzVHJhY2tpbmdQcm9wZXJ0aWVzLmdldFRyYWNraW5nUHJvcGVydGllcykgfHwgV2luZG93UG9zdE1lc3NhZ2VQcm94eS5kZWZhdWx0R2V0VHJhY2tpbmdQcm9wZXJ0aWVzO1xyXG5cdFx0ICAgICAgICB0aGlzLmlzRXJyb3JNZXNzYWdlID0gb3B0aW9ucy5pc0Vycm9yTWVzc2FnZSB8fCBXaW5kb3dQb3N0TWVzc2FnZVByb3h5LmRlZmF1bHRJc0Vycm9yTWVzc2FnZTtcclxuXHRcdCAgICAgICAgdGhpcy5yZWNlaXZlV2luZG93ID0gb3B0aW9ucy5yZWNlaXZlV2luZG93IHx8IHdpbmRvdztcclxuXHRcdCAgICAgICAgdGhpcy5uYW1lID0gb3B0aW9ucy5uYW1lIHx8IFdpbmRvd1Bvc3RNZXNzYWdlUHJveHkuY3JlYXRlUmFuZG9tU3RyaW5nKCk7XHJcblx0XHQgICAgICAgIHRoaXMubG9nTWVzc2FnZXMgPSBvcHRpb25zLmxvZ01lc3NhZ2VzIHx8IGZhbHNlO1xyXG5cdFx0ICAgICAgICB0aGlzLmV2ZW50U291cmNlT3ZlcnJpZGVXaW5kb3cgPSBvcHRpb25zLmV2ZW50U291cmNlT3ZlcnJpZGVXaW5kb3c7XHJcblx0XHQgICAgICAgIHRoaXMuc3VwcHJlc3NXYXJuaW5ncyA9IG9wdGlvbnMuc3VwcHJlc3NXYXJuaW5ncyB8fCBmYWxzZTtcclxuXHRcdCAgICAgICAgaWYgKHRoaXMubG9nTWVzc2FnZXMpIHtcclxuXHRcdCAgICAgICAgICAgIGNvbnNvbGUubG9nKFwibmV3IFdpbmRvd1Bvc3RNZXNzYWdlUHJveHkgY3JlYXRlZCB3aXRoIG5hbWU6IFwiICsgdGhpcy5uYW1lICsgXCIgcmVjZWl2aW5nIG9uIHdpbmRvdzogXCIgKyB0aGlzLnJlY2VpdmVXaW5kb3cuZG9jdW1lbnQudGl0bGUpO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIC8vIEluaXRpYWxpemVcclxuXHRcdCAgICAgICAgdGhpcy5oYW5kbGVycyA9IFtdO1xyXG5cdFx0ICAgICAgICB0aGlzLndpbmRvd01lc3NhZ2VIYW5kbGVyID0gZnVuY3Rpb24gKGV2ZW50KSB7IHJldHVybiBfdGhpcy5vbk1lc3NhZ2VSZWNlaXZlZChldmVudCk7IH07XHJcblx0XHQgICAgICAgIHRoaXMuc3RhcnQoKTtcclxuXHRcdCAgICB9XHJcblx0XHQgICAgLy8gU3RhdGljXHJcblx0XHQgICAgV2luZG93UG9zdE1lc3NhZ2VQcm94eS5kZWZhdWx0QWRkVHJhY2tpbmdQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKG1lc3NhZ2UsIHRyYWNraW5nUHJvcGVydGllcykge1xyXG5cdFx0ICAgICAgICBtZXNzYWdlW1dpbmRvd1Bvc3RNZXNzYWdlUHJveHkubWVzc2FnZVByb3BlcnR5TmFtZV0gPSB0cmFja2luZ1Byb3BlcnRpZXM7XHJcblx0XHQgICAgICAgIHJldHVybiBtZXNzYWdlO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgV2luZG93UG9zdE1lc3NhZ2VQcm94eS5kZWZhdWx0R2V0VHJhY2tpbmdQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKG1lc3NhZ2UpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuIG1lc3NhZ2VbV2luZG93UG9zdE1lc3NhZ2VQcm94eS5tZXNzYWdlUHJvcGVydHlOYW1lXTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIFdpbmRvd1Bvc3RNZXNzYWdlUHJveHkuZGVmYXVsdElzRXJyb3JNZXNzYWdlID0gZnVuY3Rpb24gKG1lc3NhZ2UpIHtcclxuXHRcdCAgICAgICAgcmV0dXJuICEhbWVzc2FnZS5lcnJvcjtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIC8qKlxyXG5cdFx0ICAgICAqIFV0aWxpdHkgdG8gY3JlYXRlIGEgZGVmZXJyZWQgb2JqZWN0LlxyXG5cdFx0ICAgICAqL1xyXG5cdFx0ICAgIC8vIFRPRE86IExvb2sgdG8gdXNlIFJTVlAgbGlicmFyeSBpbnN0ZWFkIG9mIGRvaW5nIHRoaXMgbWFudWFsbHkuXHJcblx0XHQgICAgLy8gRnJvbSB3aGF0IEkgc2VhcmNoZWQgUlNWUCB3b3VsZCB3b3JrIGJldHRlciBiZWNhdXNlIGl0IGhhcyAuZmluYWxseSBhbmQgLmRlZmVycmVkOyBob3dldmVyLCBpdCBkb2Vzbid0IGhhdmUgVHlwaW5ncyBpbmZvcm1hdGlvbi4gXHJcblx0XHQgICAgV2luZG93UG9zdE1lc3NhZ2VQcm94eS5jcmVhdGVEZWZlcnJlZCA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICAgICAgdmFyIGRlZmVycmVkID0ge1xyXG5cdFx0ICAgICAgICAgICAgcmVzb2x2ZTogbnVsbCxcclxuXHRcdCAgICAgICAgICAgIHJlamVjdDogbnVsbCxcclxuXHRcdCAgICAgICAgICAgIHByb21pc2U6IG51bGxcclxuXHRcdCAgICAgICAgfTtcclxuXHRcdCAgICAgICAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcblx0XHQgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlID0gcmVzb2x2ZTtcclxuXHRcdCAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCA9IHJlamVjdDtcclxuXHRcdCAgICAgICAgfSk7XHJcblx0XHQgICAgICAgIGRlZmVycmVkLnByb21pc2UgPSBwcm9taXNlO1xyXG5cdFx0ICAgICAgICByZXR1cm4gZGVmZXJyZWQ7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICAvKipcclxuXHRcdCAgICAgKiBVdGlsaXR5IHRvIGdlbmVyYXRlIHJhbmRvbSBzZXF1ZW5jZSBvZiBjaGFyYWN0ZXJzIHVzZWQgYXMgdHJhY2tpbmcgaWQgZm9yIHByb21pc2VzLlxyXG5cdFx0ICAgICAqL1xyXG5cdFx0ICAgIFdpbmRvd1Bvc3RNZXNzYWdlUHJveHkuY3JlYXRlUmFuZG9tU3RyaW5nID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4gKE1hdGgucmFuZG9tKCkgKyAxKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDcpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgLyoqXHJcblx0XHQgICAgICogQWRkcyBoYW5kbGVyLlxyXG5cdFx0ICAgICAqIElmIHRoZSBmaXJzdCBoYW5kbGVyIHdob3NlIHRlc3QgbWV0aG9kIHJldHVybnMgdHJ1ZSB3aWxsIGhhbmRsZSB0aGUgbWVzc2FnZSBhbmQgcHJvdmlkZSBhIHJlc3BvbnNlLlxyXG5cdFx0ICAgICAqL1xyXG5cdFx0ICAgIFdpbmRvd1Bvc3RNZXNzYWdlUHJveHkucHJvdG90eXBlLmFkZEhhbmRsZXIgPSBmdW5jdGlvbiAoaGFuZGxlcikge1xyXG5cdFx0ICAgICAgICB0aGlzLmhhbmRsZXJzLnB1c2goaGFuZGxlcik7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICAvKipcclxuXHRcdCAgICAgKiBSZW1vdmVzIGhhbmRsZXIuXHJcblx0XHQgICAgICogVGhlIHJlZmVyZW5jZSBtdXN0IG1hdGNoIHRoZSBvcmlnaW5hbCBvYmplY3QgdGhhdCB3YXMgcHJvdmlkZWQgd2hlbiBhZGRpbmcgdGhlIGhhbmRsZXIuXHJcblx0XHQgICAgICovXHJcblx0XHQgICAgV2luZG93UG9zdE1lc3NhZ2VQcm94eS5wcm90b3R5cGUucmVtb3ZlSGFuZGxlciA9IGZ1bmN0aW9uIChoYW5kbGVyKSB7XHJcblx0XHQgICAgICAgIHZhciBoYW5kbGVySW5kZXggPSB0aGlzLmhhbmRsZXJzLmluZGV4T2YoaGFuZGxlcik7XHJcblx0XHQgICAgICAgIGlmIChoYW5kbGVySW5kZXggPT09IC0xKSB7XHJcblx0XHQgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXR0ZW1wdGVkIHRvIHJlbW92ZSBhIGhhbmRsZXIgYnV0IG5vIG1hdGNoaW5nIGhhbmRsZXIgd2FzIGZvdW5kLlwiKTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB0aGlzLmhhbmRsZXJzLnNwbGljZShoYW5kbGVySW5kZXgsIDEpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgLyoqXHJcblx0XHQgICAgICogU3RhcnQgbGlzdGVuaW5nIHRvIG1lc3NhZ2UgZXZlbnRzLlxyXG5cdFx0ICAgICAqL1xyXG5cdFx0ICAgIFdpbmRvd1Bvc3RNZXNzYWdlUHJveHkucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0ICAgICAgICB0aGlzLnJlY2VpdmVXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIHRoaXMud2luZG93TWVzc2FnZUhhbmRsZXIpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgLyoqXHJcblx0XHQgICAgICogU3RvcHMgbGlzdGVuaW5nIHRvIG1lc3NhZ2UgZXZlbnRzLlxyXG5cdFx0ICAgICAqL1xyXG5cdFx0ICAgIFdpbmRvd1Bvc3RNZXNzYWdlUHJveHkucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHQgICAgICAgIHRoaXMucmVjZWl2ZVdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgdGhpcy53aW5kb3dNZXNzYWdlSGFuZGxlcik7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICAvKipcclxuXHRcdCAgICAgKiBQb3N0IG1lc3NhZ2UgdG8gdGFyZ2V0IHdpbmRvdyB3aXRoIHRyYWNraW5nIHByb3BlcnRpZXMgYWRkZWQgYW5kIHNhdmUgZGVmZXJyZWQgb2JqZWN0IHJlZmVyZW5jZWQgYnkgdHJhY2tpbmcgaWQuXHJcblx0XHQgICAgICovXHJcblx0XHQgICAgV2luZG93UG9zdE1lc3NhZ2VQcm94eS5wcm90b3R5cGUucG9zdE1lc3NhZ2UgPSBmdW5jdGlvbiAodGFyZ2V0V2luZG93LCBtZXNzYWdlKSB7XHJcblx0XHQgICAgICAgIC8vIEFkZCB0cmFja2luZyBwcm9wZXJ0aWVzIHRvIGluZGljYXRlIG1lc3NhZ2UgY2FtZSBmcm9tIHRoaXMgcHJveHlcclxuXHRcdCAgICAgICAgdmFyIHRyYWNraW5nUHJvcGVydGllcyA9IHsgaWQ6IFdpbmRvd1Bvc3RNZXNzYWdlUHJveHkuY3JlYXRlUmFuZG9tU3RyaW5nKCkgfTtcclxuXHRcdCAgICAgICAgdGhpcy5hZGRUcmFja2luZ1Byb3BlcnRpZXMobWVzc2FnZSwgdHJhY2tpbmdQcm9wZXJ0aWVzKTtcclxuXHRcdCAgICAgICAgaWYgKHRoaXMubG9nTWVzc2FnZXMpIHtcclxuXHRcdCAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMubmFtZSArIFwiIFBvc3RpbmcgbWVzc2FnZTpcIik7XHJcblx0XHQgICAgICAgICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShtZXNzYWdlLCBudWxsLCAnICAnKSk7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdGFyZ2V0V2luZG93LnBvc3RNZXNzYWdlKG1lc3NhZ2UsIFwiKlwiKTtcclxuXHRcdCAgICAgICAgdmFyIGRlZmVycmVkID0gV2luZG93UG9zdE1lc3NhZ2VQcm94eS5jcmVhdGVEZWZlcnJlZCgpO1xyXG5cdFx0ICAgICAgICB0aGlzLnBlbmRpbmdSZXF1ZXN0UHJvbWlzZXNbdHJhY2tpbmdQcm9wZXJ0aWVzLmlkXSA9IGRlZmVycmVkO1xyXG5cdFx0ICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIC8qKlxyXG5cdFx0ICAgICAqIFNlbmQgcmVzcG9uc2UgbWVzc2FnZSB0byB0YXJnZXQgd2luZG93LlxyXG5cdFx0ICAgICAqIFJlc3BvbnNlIG1lc3NhZ2VzIHJlLXVzZSB0cmFja2luZyBwcm9wZXJ0aWVzIGZyb20gYSBwcmV2aW91cyByZXF1ZXN0IG1lc3NhZ2UuXHJcblx0XHQgICAgICovXHJcblx0XHQgICAgV2luZG93UG9zdE1lc3NhZ2VQcm94eS5wcm90b3R5cGUuc2VuZFJlc3BvbnNlID0gZnVuY3Rpb24gKHRhcmdldFdpbmRvdywgbWVzc2FnZSwgdHJhY2tpbmdQcm9wZXJ0aWVzKSB7XHJcblx0XHQgICAgICAgIHRoaXMuYWRkVHJhY2tpbmdQcm9wZXJ0aWVzKG1lc3NhZ2UsIHRyYWNraW5nUHJvcGVydGllcyk7XHJcblx0XHQgICAgICAgIGlmICh0aGlzLmxvZ01lc3NhZ2VzKSB7XHJcblx0XHQgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm5hbWUgKyBcIiBTZW5kaW5nIHJlc3BvbnNlOlwiKTtcclxuXHRcdCAgICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UsIG51bGwsICcgICcpKTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB0YXJnZXRXaW5kb3cucG9zdE1lc3NhZ2UobWVzc2FnZSwgXCIqXCIpO1xyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgLyoqXHJcblx0XHQgICAgICogTWVzc2FnZSBoYW5kbGVyLlxyXG5cdFx0ICAgICAqL1xyXG5cdFx0ICAgIFdpbmRvd1Bvc3RNZXNzYWdlUHJveHkucHJvdG90eXBlLm9uTWVzc2FnZVJlY2VpdmVkID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcblx0XHQgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcblx0XHQgICAgICAgIGlmICh0aGlzLmxvZ01lc3NhZ2VzKSB7XHJcblx0XHQgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm5hbWUgKyBcIiBSZWNlaXZlZCBtZXNzYWdlOlwiKTtcclxuXHRcdCAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidHlwZTogXCIgKyBldmVudC50eXBlKTtcclxuXHRcdCAgICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGV2ZW50LmRhdGEsIG51bGwsICcgICcpKTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgc2VuZGluZ1dpbmRvdyA9IHRoaXMuZXZlbnRTb3VyY2VPdmVycmlkZVdpbmRvdyB8fCBldmVudC5zb3VyY2U7XHJcblx0XHQgICAgICAgIHZhciBtZXNzYWdlID0gZXZlbnQuZGF0YTtcclxuXHRcdCAgICAgICAgaWYgKHR5cGVvZiBtZXNzYWdlICE9PSBcIm9iamVjdFwiKSB7XHJcblx0XHQgICAgICAgICAgICBpZiAoIXRoaXMuc3VwcHJlc3NXYXJuaW5ncykge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlByb3h5KFwiICsgdGhpcy5uYW1lICsgXCIpOiBSZWNlaXZlZCBtZXNzYWdlIHRoYXQgd2FzIG5vdCBhbiBvYmplY3QuIERpc2NhcmRpbmcgbWVzc2FnZVwiKTtcclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgICAgIHJldHVybjtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICB2YXIgdHJhY2tpbmdQcm9wZXJ0aWVzO1xyXG5cdFx0ICAgICAgICB0cnkge1xyXG5cdFx0ICAgICAgICAgICAgdHJhY2tpbmdQcm9wZXJ0aWVzID0gdGhpcy5nZXRUcmFja2luZ1Byb3BlcnRpZXMobWVzc2FnZSk7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgY2F0Y2ggKGUpIHtcclxuXHRcdCAgICAgICAgICAgIGlmICghdGhpcy5zdXBwcmVzc1dhcm5pbmdzKSB7XHJcblx0XHQgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKFwiUHJveHkoXCIgKyB0aGlzLm5hbWUgKyBcIik6IEVycm9yIG9jY3VycmVkIHdoZW4gYXR0ZW1wdGluZyB0byBnZXQgdHJhY2tpbmcgcHJvcGVydGllcyBmcm9tIGluY29taW5nIG1lc3NhZ2U6XCIsIEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UsIG51bGwsICcgICcpLCBcIkVycm9yOiBcIiwgZSk7XHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICAgICAgdmFyIGRlZmVycmVkO1xyXG5cdFx0ICAgICAgICBpZiAodHJhY2tpbmdQcm9wZXJ0aWVzKSB7XHJcblx0XHQgICAgICAgICAgICBkZWZlcnJlZCA9IHRoaXMucGVuZGluZ1JlcXVlc3RQcm9taXNlc1t0cmFja2luZ1Byb3BlcnRpZXMuaWRdO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIC8vIElmIG1lc3NhZ2UgZG9lcyBub3QgaGF2ZSBhIGtub3duIElELCB0cmVhdCBpdCBhcyBhIHJlcXVlc3RcclxuXHRcdCAgICAgICAgLy8gT3RoZXJ3aXNlLCB0cmVhdCBtZXNzYWdlIGFzIHJlc3BvbnNlXHJcblx0XHQgICAgICAgIGlmICghZGVmZXJyZWQpIHtcclxuXHRcdCAgICAgICAgICAgIHZhciBoYW5kbGVkID0gdGhpcy5oYW5kbGVycy5zb21lKGZ1bmN0aW9uIChoYW5kbGVyKSB7XHJcblx0XHQgICAgICAgICAgICAgICAgdmFyIGNhbk1lc3NhZ2VCZUhhbmRsZWQgPSBmYWxzZTtcclxuXHRcdCAgICAgICAgICAgICAgICB0cnkge1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBjYW5NZXNzYWdlQmVIYW5kbGVkID0gaGFuZGxlci50ZXN0KG1lc3NhZ2UpO1xyXG5cdFx0ICAgICAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBpZiAoIV90aGlzLnN1cHByZXNzV2FybmluZ3MpIHtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlByb3h5KFwiICsgX3RoaXMubmFtZSArIFwiKTogRXJyb3Igb2NjdXJyZWQgd2hlbiBoYW5kbGVyIHdhcyB0ZXN0aW5nIGluY29taW5nIG1lc3NhZ2U6XCIsIEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UsIG51bGwsICcgICcpLCBcIkVycm9yOiBcIiwgZSk7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgICAgICAgICAgaWYgKGNhbk1lc3NhZ2VCZUhhbmRsZWQpIHtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3BvbnNlTWVzc2FnZVByb21pc2UgPSB2b2lkIDA7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgIHRyeSB7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZU1lc3NhZ2VQcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGhhbmRsZXIuaGFuZGxlKG1lc3NhZ2UpKTtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5zdXBwcmVzc1dhcm5pbmdzKSB7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKFwiUHJveHkoXCIgKyBfdGhpcy5uYW1lICsgXCIpOiBFcnJvciBvY2N1cnJlZCB3aGVuIGhhbmRsZXIgd2FzIHByb2Nlc3NpbmcgaW5jb21pbmcgbWVzc2FnZTpcIiwgSlNPTi5zdHJpbmdpZnkobWVzc2FnZSwgbnVsbCwgJyAgJyksIFwiRXJyb3I6IFwiLCBlKTtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlTWVzc2FnZVByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoKTtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICByZXNwb25zZU1lc3NhZ2VQcm9taXNlXHJcblx0XHQgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2VNZXNzYWdlKSB7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlTWVzc2FnZSkge1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB3YXJuaW5nTWVzc2FnZSA9IFwiSGFuZGxlciBmb3IgbWVzc2FnZTogXCIgKyBKU09OLnN0cmluZ2lmeShtZXNzYWdlLCBudWxsLCAnICAnKSArIFwiIGRpZCBub3QgcmV0dXJuIGEgcmVzcG9uc2UgbWVzc2FnZS4gVGhlIGRlZmF1bHQgcmVzcG9uc2UgbWVzc2FnZSB3aWxsIGJlIHJldHVybmVkIGluc3RlYWQuXCI7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5zdXBwcmVzc1dhcm5pbmdzKSB7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlByb3h5KFwiICsgX3RoaXMubmFtZSArIFwiKTogXCIgKyB3YXJuaW5nTWVzc2FnZSk7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlTWVzc2FnZSA9IHtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FybmluZzogd2FybmluZ01lc3NhZ2VcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2VuZFJlc3BvbnNlKHNlbmRpbmdXaW5kb3csIHJlc3BvbnNlTWVzc2FnZSwgdHJhY2tpbmdQcm9wZXJ0aWVzKTtcclxuXHRcdCAgICAgICAgICAgICAgICAgICAgfSk7XHJcblx0XHQgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG5cdFx0ICAgICAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgICAgIH0pO1xyXG5cdFx0ICAgICAgICAgICAgLyoqXHJcblx0XHQgICAgICAgICAgICAgKiBUT0RPOiBDb25zaWRlciByZXR1cm5pbmcgYW4gZXJyb3IgbWVzc2FnZSBpZiBub3RoaW5nIGhhbmRsZWQgdGhlIG1lc3NhZ2UuXHJcblx0XHQgICAgICAgICAgICAgKiBJbiB0aGUgY2FzZSBvZiB0aGUgUmVwb3J0IHJlY2VpdmluZyBtZXNzYWdlcyBhbGwgb2YgdGhlbSBzaG91bGQgYmUgaGFuZGxlZCxcclxuXHRcdCAgICAgICAgICAgICAqIGhvd2V2ZXIsIGluIHRoZSBjYXNlIG9mIHRoZSBTREsgcmVjZWl2aW5nIG1lc3NhZ2VzIGl0J3MgbGlrZWx5IGl0IHdvbid0IHJlZ2lzdGVyIGhhbmRsZXJzXHJcblx0XHQgICAgICAgICAgICAgKiBmb3IgYWxsIGV2ZW50cy4gUGVyaGFwcyBtYWtlIHRoaXMgYW4gb3B0aW9uIGF0IGNvbnN0cnVjdGlvbiB0aW1lLlxyXG5cdFx0ICAgICAgICAgICAgICovXHJcblx0XHQgICAgICAgICAgICBpZiAoIWhhbmRsZWQgJiYgIXRoaXMuc3VwcHJlc3NXYXJuaW5ncykge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlByb3h5KFwiICsgdGhpcy5uYW1lICsgXCIpIGRpZCBub3QgaGFuZGxlIG1lc3NhZ2UuIEhhbmRsZXJzOiBcIiArIHRoaXMuaGFuZGxlcnMubGVuZ3RoICsgXCIgIE1lc3NhZ2U6IFwiICsgSlNPTi5zdHJpbmdpZnkobWVzc2FnZSwgbnVsbCwgJycpICsgXCIuXCIpO1xyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICAgIGVsc2Uge1xyXG5cdFx0ICAgICAgICAgICAgLyoqXHJcblx0XHQgICAgICAgICAgICAgKiBJZiBlcnJvciBtZXNzYWdlIHJlamVjdCBwcm9taXNlLFxyXG5cdFx0ICAgICAgICAgICAgICogT3RoZXJ3aXNlLCByZXNvbHZlIHByb21pc2VcclxuXHRcdCAgICAgICAgICAgICAqL1xyXG5cdFx0ICAgICAgICAgICAgdmFyIGlzRXJyb3JNZXNzYWdlID0gdHJ1ZTtcclxuXHRcdCAgICAgICAgICAgIHRyeSB7XHJcblx0XHQgICAgICAgICAgICAgICAgaXNFcnJvck1lc3NhZ2UgPSB0aGlzLmlzRXJyb3JNZXNzYWdlKG1lc3NhZ2UpO1xyXG5cdFx0ICAgICAgICAgICAgfVxyXG5cdFx0ICAgICAgICAgICAgY2F0Y2ggKGUpIHtcclxuXHRcdCAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJQcm94eShcIiArIHRoaXMubmFtZSArIFwiKSBFcnJvciBvY2N1cnJlZCB3aGVuIHRyeWluZyB0byBkZXRlcm1pbmUgaWYgbWVzc2FnZSBpcyBjb25zaWRlciBhbiBlcnJvciByZXNwb25zZS4gTWVzc2FnZTogXCIsIEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UsIG51bGwsICcnKSwgJ0Vycm9yOiAnLCBlKTtcclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgICAgIGlmIChpc0Vycm9yTWVzc2FnZSkge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChtZXNzYWdlKTtcclxuXHRcdCAgICAgICAgICAgIH1cclxuXHRcdCAgICAgICAgICAgIGVsc2Uge1xyXG5cdFx0ICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUobWVzc2FnZSk7XHJcblx0XHQgICAgICAgICAgICB9XHJcblx0XHQgICAgICAgICAgICAvLyBUT0RPOiBNb3ZlIHRvIC5maW5hbGx5IGNsYXVzZSB1cCB3aGVyZSBwcm9taXNlIGlzIGNyZWF0ZWQgZm9yIGJldHRlciBtYWl0ZW5hbmNlIGxpa2Ugb3JpZ2luYWwgcHJveHkgY29kZS5cclxuXHRcdCAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnBlbmRpbmdSZXF1ZXN0UHJvbWlzZXNbdHJhY2tpbmdQcm9wZXJ0aWVzLmlkXTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgV2luZG93UG9zdE1lc3NhZ2VQcm94eS5tZXNzYWdlUHJvcGVydHlOYW1lID0gXCJ3aW5kb3dQb3N0TWVzc2FnZVByb3h5XCI7XHJcblx0XHQgICAgcmV0dXJuIFdpbmRvd1Bvc3RNZXNzYWdlUHJveHk7XHJcblx0XHR9KCkpO1xyXG5cdFx0ZXhwb3J0cy5XaW5kb3dQb3N0TWVzc2FnZVByb3h5ID0gV2luZG93UG9zdE1lc3NhZ2VQcm94eTtcclxuXHRcblx0XG5cdC8qKiovIH0pXG5cdC8qKioqKiovIF0pXG5cdH0pO1xuXHQ7XG5cdC8vIyBzb3VyY2VNYXBwaW5nVVJMPXdpbmRvd1Bvc3RNZXNzYWdlUHJveHkuanMubWFwXG5cbi8qKiovIH0pLFxuLyogMTkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHQvKiEgaHR0cC1wb3N0LW1lc3NhZ2UgdjAuMi4zIHwgKGMpIDIwMTYgTWljcm9zb2Z0IENvcnBvcmF0aW9uIE1JVCAqL1xuXHQoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRcdGlmKHRydWUpXG5cdFx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0XHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdFx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0XHRleHBvcnRzW1wiaHR0cC1wb3N0LW1lc3NhZ2VcIl0gPSBmYWN0b3J5KCk7XG5cdFx0ZWxzZVxuXHRcdFx0cm9vdFtcImh0dHAtcG9zdC1tZXNzYWdlXCJdID0gZmFjdG9yeSgpO1xuXHR9KSh0aGlzLCBmdW5jdGlvbigpIHtcblx0cmV0dXJuIC8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcblx0LyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG5cdC8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuXHQvKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHQvKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG5cdC8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0LyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcblx0LyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge30sXG5cdC8qKioqKiovIFx0XHRcdGlkOiBtb2R1bGVJZCxcblx0LyoqKioqKi8gXHRcdFx0bG9hZGVkOiBmYWxzZVxuXHQvKioqKioqLyBcdFx0fTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHQvKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG5cdC8qKioqKiovIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdC8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG5cdC8qKioqKiovIFx0fVxuXHQvKioqKioqL1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5cdC8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuXHQvKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cblx0LyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuXHQvKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXHQvKioqKioqLyB9KVxuXHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHQvKioqKioqLyAoW1xuXHQvKiAwICovXG5cdC8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXHRcblx0XHRcInVzZSBzdHJpY3RcIjtcblx0XHR2YXIgSHR0cFBvc3RNZXNzYWdlID0gKGZ1bmN0aW9uICgpIHtcblx0XHQgICAgZnVuY3Rpb24gSHR0cFBvc3RNZXNzYWdlKHdpbmRvd1Bvc3RNZXNzYWdlUHJveHksIGRlZmF1bHRIZWFkZXJzLCBkZWZhdWx0VGFyZ2V0V2luZG93KSB7XG5cdFx0ICAgICAgICBpZiAoZGVmYXVsdEhlYWRlcnMgPT09IHZvaWQgMCkgeyBkZWZhdWx0SGVhZGVycyA9IHt9OyB9XG5cdFx0ICAgICAgICB0aGlzLmRlZmF1bHRIZWFkZXJzID0gZGVmYXVsdEhlYWRlcnM7XG5cdFx0ICAgICAgICB0aGlzLmRlZmF1bHRUYXJnZXRXaW5kb3cgPSBkZWZhdWx0VGFyZ2V0V2luZG93O1xuXHRcdCAgICAgICAgdGhpcy53aW5kb3dQb3N0TWVzc2FnZVByb3h5ID0gd2luZG93UG9zdE1lc3NhZ2VQcm94eTtcblx0XHQgICAgfVxuXHRcdCAgICAvLyBUT0RPOiBTZWUgaWYgaXQncyBwb3NzaWJsZSB0byBzaGFyZSB0cmFja2luZyBwcm9wZXJ0aWVzIGludGVyZmFjZT9cblx0XHQgICAgLy8gVGhlIHJlc3BvbnNpYmlsaXR5IG9mIGtub3dpbmcgaG93IHRvIGNvbmZpZ3VyZSB3aW5kb3dQb3N0TWVzc2FnZVByb3h5IGZvciBodHRwIHNob3VsZFxuXHRcdCAgICAvLyBsaXZlIGluIHRoaXMgaHR0cCBjbGFzcywgYnV0IHRoZSBjb25maWd1cmF0aW9uIHdvdWxkIG5lZWQgSVRyYWNraW5nUHJvcGVydGllc1xuXHRcdCAgICAvLyBpbnRlcmZhY2Ugd2hpY2ggbGl2ZXMgaW4gV2luZG93UG9zdE1lc3NhZ2VQcm94eS4gVXNlIDxhbnk+IHR5cGUgYXMgd29ya2Fyb3VuZFxuXHRcdCAgICBIdHRwUG9zdE1lc3NhZ2UuYWRkVHJhY2tpbmdQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKG1lc3NhZ2UsIHRyYWNraW5nUHJvcGVydGllcykge1xuXHRcdCAgICAgICAgbWVzc2FnZS5oZWFkZXJzID0gbWVzc2FnZS5oZWFkZXJzIHx8IHt9O1xuXHRcdCAgICAgICAgaWYgKHRyYWNraW5nUHJvcGVydGllcyAmJiB0cmFja2luZ1Byb3BlcnRpZXMuaWQpIHtcblx0XHQgICAgICAgICAgICBtZXNzYWdlLmhlYWRlcnMuaWQgPSB0cmFja2luZ1Byb3BlcnRpZXMuaWQ7XG5cdFx0ICAgICAgICB9XG5cdFx0ICAgICAgICByZXR1cm4gbWVzc2FnZTtcblx0XHQgICAgfTtcblx0XHQgICAgSHR0cFBvc3RNZXNzYWdlLmdldFRyYWNraW5nUHJvcGVydGllcyA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7XG5cdFx0ICAgICAgICByZXR1cm4ge1xuXHRcdCAgICAgICAgICAgIGlkOiBtZXNzYWdlLmhlYWRlcnMgJiYgbWVzc2FnZS5oZWFkZXJzLmlkXG5cdFx0ICAgICAgICB9O1xuXHRcdCAgICB9O1xuXHRcdCAgICBIdHRwUG9zdE1lc3NhZ2UuaXNFcnJvck1lc3NhZ2UgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xuXHRcdCAgICAgICAgaWYgKHR5cGVvZiAobWVzc2FnZSAmJiBtZXNzYWdlLnN0YXR1c0NvZGUpICE9PSAnbnVtYmVyJykge1xuXHRcdCAgICAgICAgICAgIHJldHVybiBmYWxzZTtcblx0XHQgICAgICAgIH1cblx0XHQgICAgICAgIHJldHVybiAhKDIwMCA8PSBtZXNzYWdlLnN0YXR1c0NvZGUgJiYgbWVzc2FnZS5zdGF0dXNDb2RlIDwgMzAwKTtcblx0XHQgICAgfTtcblx0XHQgICAgSHR0cFBvc3RNZXNzYWdlLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAodXJsLCBoZWFkZXJzLCB0YXJnZXRXaW5kb3cpIHtcblx0XHQgICAgICAgIGlmIChoZWFkZXJzID09PSB2b2lkIDApIHsgaGVhZGVycyA9IHt9OyB9XG5cdFx0ICAgICAgICBpZiAodGFyZ2V0V2luZG93ID09PSB2b2lkIDApIHsgdGFyZ2V0V2luZG93ID0gdGhpcy5kZWZhdWx0VGFyZ2V0V2luZG93OyB9XG5cdFx0ICAgICAgICByZXR1cm4gdGhpcy5zZW5kKHtcblx0XHQgICAgICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG5cdFx0ICAgICAgICAgICAgdXJsOiB1cmwsXG5cdFx0ICAgICAgICAgICAgaGVhZGVyczogaGVhZGVyc1xuXHRcdCAgICAgICAgfSwgdGFyZ2V0V2luZG93KTtcblx0XHQgICAgfTtcblx0XHQgICAgSHR0cFBvc3RNZXNzYWdlLnByb3RvdHlwZS5wb3N0ID0gZnVuY3Rpb24gKHVybCwgYm9keSwgaGVhZGVycywgdGFyZ2V0V2luZG93KSB7XG5cdFx0ICAgICAgICBpZiAoaGVhZGVycyA9PT0gdm9pZCAwKSB7IGhlYWRlcnMgPSB7fTsgfVxuXHRcdCAgICAgICAgaWYgKHRhcmdldFdpbmRvdyA9PT0gdm9pZCAwKSB7IHRhcmdldFdpbmRvdyA9IHRoaXMuZGVmYXVsdFRhcmdldFdpbmRvdzsgfVxuXHRcdCAgICAgICAgcmV0dXJuIHRoaXMuc2VuZCh7XG5cdFx0ICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcblx0XHQgICAgICAgICAgICB1cmw6IHVybCxcblx0XHQgICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJzLFxuXHRcdCAgICAgICAgICAgIGJvZHk6IGJvZHlcblx0XHQgICAgICAgIH0sIHRhcmdldFdpbmRvdyk7XG5cdFx0ICAgIH07XG5cdFx0ICAgIEh0dHBQb3N0TWVzc2FnZS5wcm90b3R5cGUucHV0ID0gZnVuY3Rpb24gKHVybCwgYm9keSwgaGVhZGVycywgdGFyZ2V0V2luZG93KSB7XG5cdFx0ICAgICAgICBpZiAoaGVhZGVycyA9PT0gdm9pZCAwKSB7IGhlYWRlcnMgPSB7fTsgfVxuXHRcdCAgICAgICAgaWYgKHRhcmdldFdpbmRvdyA9PT0gdm9pZCAwKSB7IHRhcmdldFdpbmRvdyA9IHRoaXMuZGVmYXVsdFRhcmdldFdpbmRvdzsgfVxuXHRcdCAgICAgICAgcmV0dXJuIHRoaXMuc2VuZCh7XG5cdFx0ICAgICAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuXHRcdCAgICAgICAgICAgIHVybDogdXJsLFxuXHRcdCAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsXG5cdFx0ICAgICAgICAgICAgYm9keTogYm9keVxuXHRcdCAgICAgICAgfSwgdGFyZ2V0V2luZG93KTtcblx0XHQgICAgfTtcblx0XHQgICAgSHR0cFBvc3RNZXNzYWdlLnByb3RvdHlwZS5wYXRjaCA9IGZ1bmN0aW9uICh1cmwsIGJvZHksIGhlYWRlcnMsIHRhcmdldFdpbmRvdykge1xuXHRcdCAgICAgICAgaWYgKGhlYWRlcnMgPT09IHZvaWQgMCkgeyBoZWFkZXJzID0ge307IH1cblx0XHQgICAgICAgIGlmICh0YXJnZXRXaW5kb3cgPT09IHZvaWQgMCkgeyB0YXJnZXRXaW5kb3cgPSB0aGlzLmRlZmF1bHRUYXJnZXRXaW5kb3c7IH1cblx0XHQgICAgICAgIHJldHVybiB0aGlzLnNlbmQoe1xuXHRcdCAgICAgICAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuXHRcdCAgICAgICAgICAgIHVybDogdXJsLFxuXHRcdCAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsXG5cdFx0ICAgICAgICAgICAgYm9keTogYm9keVxuXHRcdCAgICAgICAgfSwgdGFyZ2V0V2luZG93KTtcblx0XHQgICAgfTtcblx0XHQgICAgSHR0cFBvc3RNZXNzYWdlLnByb3RvdHlwZS5kZWxldGUgPSBmdW5jdGlvbiAodXJsLCBib2R5LCBoZWFkZXJzLCB0YXJnZXRXaW5kb3cpIHtcblx0XHQgICAgICAgIGlmIChib2R5ID09PSB2b2lkIDApIHsgYm9keSA9IG51bGw7IH1cblx0XHQgICAgICAgIGlmIChoZWFkZXJzID09PSB2b2lkIDApIHsgaGVhZGVycyA9IHt9OyB9XG5cdFx0ICAgICAgICBpZiAodGFyZ2V0V2luZG93ID09PSB2b2lkIDApIHsgdGFyZ2V0V2luZG93ID0gdGhpcy5kZWZhdWx0VGFyZ2V0V2luZG93OyB9XG5cdFx0ICAgICAgICByZXR1cm4gdGhpcy5zZW5kKHtcblx0XHQgICAgICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG5cdFx0ICAgICAgICAgICAgdXJsOiB1cmwsXG5cdFx0ICAgICAgICAgICAgaGVhZGVyczogaGVhZGVycyxcblx0XHQgICAgICAgICAgICBib2R5OiBib2R5XG5cdFx0ICAgICAgICB9LCB0YXJnZXRXaW5kb3cpO1xuXHRcdCAgICB9O1xuXHRcdCAgICBIdHRwUG9zdE1lc3NhZ2UucHJvdG90eXBlLnNlbmQgPSBmdW5jdGlvbiAocmVxdWVzdCwgdGFyZ2V0V2luZG93KSB7XG5cdFx0ICAgICAgICBpZiAodGFyZ2V0V2luZG93ID09PSB2b2lkIDApIHsgdGFyZ2V0V2luZG93ID0gdGhpcy5kZWZhdWx0VGFyZ2V0V2luZG93OyB9XG5cdFx0ICAgICAgICByZXF1ZXN0LmhlYWRlcnMgPSB0aGlzLmFzc2lnbih7fSwgdGhpcy5kZWZhdWx0SGVhZGVycywgcmVxdWVzdC5oZWFkZXJzKTtcblx0XHQgICAgICAgIGlmICghdGFyZ2V0V2luZG93KSB7XG5cdFx0ICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGFyZ2V0IHdpbmRvdyBpcyBub3QgcHJvdmlkZWQuICBZb3UgbXVzdCBlaXRoZXIgcHJvdmlkZSB0aGUgdGFyZ2V0IHdpbmRvdyBleHBsaWNpdGx5IGFzIGFyZ3VtZW50IHRvIHJlcXVlc3QsIG9yIHNwZWNpZnkgZGVmYXVsdCB0YXJnZXQgd2luZG93IHdoZW4gY29uc3RydWN0aW5nIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXCIpO1xuXHRcdCAgICAgICAgfVxuXHRcdCAgICAgICAgcmV0dXJuIHRoaXMud2luZG93UG9zdE1lc3NhZ2VQcm94eS5wb3N0TWVzc2FnZSh0YXJnZXRXaW5kb3csIHJlcXVlc3QpO1xuXHRcdCAgICB9O1xuXHRcdCAgICAvKipcblx0XHQgICAgICogT2JqZWN0LmFzc2lnbigpIHBvbHlmaWxsXG5cdFx0ICAgICAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9hc3NpZ25cblx0XHQgICAgICovXG5cdFx0ICAgIEh0dHBQb3N0TWVzc2FnZS5wcm90b3R5cGUuYXNzaWduID0gZnVuY3Rpb24gKHRhcmdldCkge1xuXHRcdCAgICAgICAgdmFyIHNvdXJjZXMgPSBbXTtcblx0XHQgICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG5cdFx0ICAgICAgICAgICAgc291cmNlc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcblx0XHQgICAgICAgIH1cblx0XHQgICAgICAgIGlmICh0YXJnZXQgPT09IHVuZGVmaW5lZCB8fCB0YXJnZXQgPT09IG51bGwpIHtcblx0XHQgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDYW5ub3QgY29udmVydCB1bmRlZmluZWQgb3IgbnVsbCB0byBvYmplY3QnKTtcblx0XHQgICAgICAgIH1cblx0XHQgICAgICAgIHZhciBvdXRwdXQgPSBPYmplY3QodGFyZ2V0KTtcblx0XHQgICAgICAgIHNvdXJjZXMuZm9yRWFjaChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0ICAgICAgICAgICAgaWYgKHNvdXJjZSAhPT0gdW5kZWZpbmVkICYmIHNvdXJjZSAhPT0gbnVsbCkge1xuXHRcdCAgICAgICAgICAgICAgICBmb3IgKHZhciBuZXh0S2V5IGluIHNvdXJjZSkge1xuXHRcdCAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIG5leHRLZXkpKSB7XG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0W25leHRLZXldID0gc291cmNlW25leHRLZXldO1xuXHRcdCAgICAgICAgICAgICAgICAgICAgfVxuXHRcdCAgICAgICAgICAgICAgICB9XG5cdFx0ICAgICAgICAgICAgfVxuXHRcdCAgICAgICAgfSk7XG5cdFx0ICAgICAgICByZXR1cm4gb3V0cHV0O1xuXHRcdCAgICB9O1xuXHRcdCAgICByZXR1cm4gSHR0cFBvc3RNZXNzYWdlO1xuXHRcdH0oKSk7XG5cdFx0ZXhwb3J0cy5IdHRwUG9zdE1lc3NhZ2UgPSBIdHRwUG9zdE1lc3NhZ2U7XG5cdFxuXHRcblx0LyoqKi8gfVxuXHQvKioqKioqLyBdKVxuXHR9KTtcblx0O1xuXHQvLyMgc291cmNlTWFwcGluZ1VSTD1odHRwUG9zdE1lc3NhZ2UuanMubWFwXG5cbi8qKiovIH0pLFxuLyogMjAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHQvKiEgcG93ZXJiaS1yb3V0ZXIgdjAuMS41IHwgKGMpIDIwMTYgTWljcm9zb2Z0IENvcnBvcmF0aW9uIE1JVCAqL1xuXHQoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRcdGlmKHRydWUpXG5cdFx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0XHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdFx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0XHRleHBvcnRzW1wicG93ZXJiaS1yb3V0ZXJcIl0gPSBmYWN0b3J5KCk7XG5cdFx0ZWxzZVxuXHRcdFx0cm9vdFtcInBvd2VyYmktcm91dGVyXCJdID0gZmFjdG9yeSgpO1xuXHR9KSh0aGlzLCBmdW5jdGlvbigpIHtcblx0cmV0dXJuIC8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcblx0LyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG5cdC8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuXHQvKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHQvKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG5cdC8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0LyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcblx0LyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge30sXG5cdC8qKioqKiovIFx0XHRcdGlkOiBtb2R1bGVJZCxcblx0LyoqKioqKi8gXHRcdFx0bG9hZGVkOiBmYWxzZVxuXHQvKioqKioqLyBcdFx0fTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHQvKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG5cdC8qKioqKiovIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdC8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG5cdC8qKioqKiovIFx0fVxuXHQvKioqKioqL1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5cdC8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuXHQvKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cblx0LyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuXHQvKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXHQvKioqKioqLyB9KVxuXHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHQvKioqKioqLyAoW1xuXHQvKiAwICovXG5cdC8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHRcInVzZSBzdHJpY3RcIjtcblx0XHR2YXIgUm91dGVSZWNvZ25pemVyID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcblx0XHR2YXIgUm91dGVyID0gKGZ1bmN0aW9uICgpIHtcblx0XHQgICAgZnVuY3Rpb24gUm91dGVyKGhhbmRsZXJzKSB7XG5cdFx0ICAgICAgICB0aGlzLmhhbmRsZXJzID0gaGFuZGxlcnM7XG5cdFx0ICAgICAgICAvKipcblx0XHQgICAgICAgICAqIFRPRE86IGxvb2sgYXQgZ2VuZXJhdGluZyB0aGUgcm91dGVyIGR5bmFtaWNhbGx5IGJhc2VkIG9uIGxpc3Qgb2Ygc3VwcG9ydGVkIGh0dHAgbWV0aG9kc1xuXHRcdCAgICAgICAgICogaW5zdGVhZCBvZiBoYXJkY29kaW5nIHRoZSBjcmVhdGlvbiBvZiB0aGVzZSBhbmQgdGhlIG1ldGhvZHMuXG5cdFx0ICAgICAgICAgKi9cblx0XHQgICAgICAgIHRoaXMuZ2V0Um91dGVSZWNvZ25pemVyID0gbmV3IFJvdXRlUmVjb2duaXplcigpO1xuXHRcdCAgICAgICAgdGhpcy5wYXRjaFJvdXRlUmVjb2duaXplciA9IG5ldyBSb3V0ZVJlY29nbml6ZXIoKTtcblx0XHQgICAgICAgIHRoaXMucG9zdFJvdXRlUmVjb2duaXplciA9IG5ldyBSb3V0ZVJlY29nbml6ZXIoKTtcblx0XHQgICAgICAgIHRoaXMucHV0Um91dGVSZWNvZ25pemVyID0gbmV3IFJvdXRlUmVjb2duaXplcigpO1xuXHRcdCAgICAgICAgdGhpcy5kZWxldGVSb3V0ZVJlY29nbml6ZXIgPSBuZXcgUm91dGVSZWNvZ25pemVyKCk7XG5cdFx0ICAgIH1cblx0XHQgICAgUm91dGVyLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAodXJsLCBoYW5kbGVyKSB7XG5cdFx0ICAgICAgICB0aGlzLnJlZ2lzdGVySGFuZGxlcih0aGlzLmdldFJvdXRlUmVjb2duaXplciwgXCJHRVRcIiwgdXJsLCBoYW5kbGVyKTtcblx0XHQgICAgICAgIHJldHVybiB0aGlzO1xuXHRcdCAgICB9O1xuXHRcdCAgICBSb3V0ZXIucHJvdG90eXBlLnBhdGNoID0gZnVuY3Rpb24gKHVybCwgaGFuZGxlcikge1xuXHRcdCAgICAgICAgdGhpcy5yZWdpc3RlckhhbmRsZXIodGhpcy5wYXRjaFJvdXRlUmVjb2duaXplciwgXCJQQVRDSFwiLCB1cmwsIGhhbmRsZXIpO1xuXHRcdCAgICAgICAgcmV0dXJuIHRoaXM7XG5cdFx0ICAgIH07XG5cdFx0ICAgIFJvdXRlci5wcm90b3R5cGUucG9zdCA9IGZ1bmN0aW9uICh1cmwsIGhhbmRsZXIpIHtcblx0XHQgICAgICAgIHRoaXMucmVnaXN0ZXJIYW5kbGVyKHRoaXMucG9zdFJvdXRlUmVjb2duaXplciwgXCJQT1NUXCIsIHVybCwgaGFuZGxlcik7XG5cdFx0ICAgICAgICByZXR1cm4gdGhpcztcblx0XHQgICAgfTtcblx0XHQgICAgUm91dGVyLnByb3RvdHlwZS5wdXQgPSBmdW5jdGlvbiAodXJsLCBoYW5kbGVyKSB7XG5cdFx0ICAgICAgICB0aGlzLnJlZ2lzdGVySGFuZGxlcih0aGlzLnB1dFJvdXRlUmVjb2duaXplciwgXCJQVVRcIiwgdXJsLCBoYW5kbGVyKTtcblx0XHQgICAgICAgIHJldHVybiB0aGlzO1xuXHRcdCAgICB9O1xuXHRcdCAgICBSb3V0ZXIucHJvdG90eXBlLmRlbGV0ZSA9IGZ1bmN0aW9uICh1cmwsIGhhbmRsZXIpIHtcblx0XHQgICAgICAgIHRoaXMucmVnaXN0ZXJIYW5kbGVyKHRoaXMuZGVsZXRlUm91dGVSZWNvZ25pemVyLCBcIkRFTEVURVwiLCB1cmwsIGhhbmRsZXIpO1xuXHRcdCAgICAgICAgcmV0dXJuIHRoaXM7XG5cdFx0ICAgIH07XG5cdFx0ICAgIC8qKlxuXHRcdCAgICAgKiBUT0RPOiBUaGlzIG1ldGhvZCBjb3VsZCB1c2Ugc29tZSByZWZhY3RvcmluZy4gIFRoZXJlIGlzIGNvbmZsaWN0IG9mIGludGVyZXN0IGJldHdlZW4ga2VlcGluZyBjbGVhbiBzZXBhcmF0aW9uIG9mIHRlc3QgYW5kIGhhbmRsZSBtZXRob2Rcblx0XHQgICAgICogVGVzdCBtZXRob2Qgb25seSByZXR1cm5zIGJvb2xlYW4gaW5kaWNhdGluZyBpZiByZXF1ZXN0IGNhbiBiZSBoYW5kbGVkLCBhbmQgaGFuZGxlIG1ldGhvZCBoYXMgb3Bwb3J0dW5pdHkgdG8gbW9kaWZ5IHJlc3BvbnNlIGFuZCByZXR1cm4gcHJvbWlzZSBvZiBpdC5cblx0XHQgICAgICogSW4gdGhlIGNhc2Ugb2YgdGhlIHJvdXRlciB3aXRoIHJvdXRlLXJlY29nbml6ZXIgd2hlcmUgaGFuZGxlcnMgYXJlIGFzc29jaWF0ZWQgd2l0aCByb3V0ZXMsIHRoaXMgYWxyZWFkeSBndWFyYW50ZWVzIHRoYXQgb25seSBvbmUgaGFuZGxlciBpcyBzZWxlY3RlZCBhbmQgbWFrZXMgdGhlIHRlc3QgbWV0aG9kIGZlZWwgY29tcGxpY2F0ZWRcblx0XHQgICAgICogV2lsbCBsZWF2ZSBhcyBpcyBhbiBpbnZlc3RpZ2F0ZSBjbGVhbmVyIHdheXMgYXQgbGF0ZXIgdGltZS5cblx0XHQgICAgICovXG5cdFx0ICAgIFJvdXRlci5wcm90b3R5cGUucmVnaXN0ZXJIYW5kbGVyID0gZnVuY3Rpb24gKHJvdXRlUmVjb2duaXplciwgbWV0aG9kLCB1cmwsIGhhbmRsZXIpIHtcblx0XHQgICAgICAgIHZhciByb3V0ZVJlY29nbml6ZXJIYW5kbGVyID0gZnVuY3Rpb24gKHJlcXVlc3QpIHtcblx0XHQgICAgICAgICAgICB2YXIgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoKTtcblx0XHQgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGhhbmRsZXIocmVxdWVzdCwgcmVzcG9uc2UpKVxuXHRcdCAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoeCkgeyByZXR1cm4gcmVzcG9uc2U7IH0pO1xuXHRcdCAgICAgICAgfTtcblx0XHQgICAgICAgIHJvdXRlUmVjb2duaXplci5hZGQoW1xuXHRcdCAgICAgICAgICAgIHsgcGF0aDogdXJsLCBoYW5kbGVyOiByb3V0ZVJlY29nbml6ZXJIYW5kbGVyIH1cblx0XHQgICAgICAgIF0pO1xuXHRcdCAgICAgICAgdmFyIGludGVybmFsSGFuZGxlciA9IHtcblx0XHQgICAgICAgICAgICB0ZXN0OiBmdW5jdGlvbiAocmVxdWVzdCkge1xuXHRcdCAgICAgICAgICAgICAgICBpZiAocmVxdWVzdC5tZXRob2QgIT09IG1ldGhvZCkge1xuXHRcdCAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuXHRcdCAgICAgICAgICAgICAgICB9XG5cdFx0ICAgICAgICAgICAgICAgIHZhciBtYXRjaGluZ1JvdXRlcyA9IHJvdXRlUmVjb2duaXplci5yZWNvZ25pemUocmVxdWVzdC51cmwpO1xuXHRcdCAgICAgICAgICAgICAgICBpZiAobWF0Y2hpbmdSb3V0ZXMgPT09IHVuZGVmaW5lZCkge1xuXHRcdCAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuXHRcdCAgICAgICAgICAgICAgICB9XG5cdFx0ICAgICAgICAgICAgICAgIC8qKlxuXHRcdCAgICAgICAgICAgICAgICAgKiBDb3B5IHBhcmFtZXRlcnMgZnJvbSByZWNvZ25pemVkIHJvdXRlIHRvIHRoZSByZXF1ZXN0IHNvIHRoZXkgY2FuIGJlIHVzZWQgd2l0aGluIHRoZSBoYW5kbGVyIGZ1bmN0aW9uXG5cdFx0ICAgICAgICAgICAgICAgICAqIFRoaXMgaXNuJ3QgaWRlYWwgYmVjYXVzZSBpdCBpcyBzaWRlIGFmZmVjdCB3aGljaCBtb2RpZmllcyB0aGUgcmVxdWVzdCBpbnN0ZWFkIG9mIHN0cmljdGx5IHRlc3RpbmcgZm9yIHRydWUgb3IgZmFsc2Vcblx0XHQgICAgICAgICAgICAgICAgICogYnV0IEkgZG9uJ3Qgc2VlIGEgYmV0dGVyIHBsYWNlIHRvIHB1dCB0aGlzLiAgSWYgd2UgbW92ZSBpdCBiZXR3ZWVuIHRoZSBjYWxsIHRvIHRlc3QgYW5kIHRoZSBoYW5kbGUgaXQgYmVjb21lcyBwYXJ0IG9mIHRoZSB3aW5kb3cgcG9zdCBtZXNzYWdlIHByb3h5XG5cdFx0ICAgICAgICAgICAgICAgICAqIGV2ZW4gdGhvdWdoIGl0J3MgcmVzcG9uc2liaWxpdHkgaXMgcmVsYXRlZCB0byByb3V0aW5nLlxuXHRcdCAgICAgICAgICAgICAgICAgKi9cblx0XHQgICAgICAgICAgICAgICAgdmFyIHJvdXRlID0gbWF0Y2hpbmdSb3V0ZXNbMF07XG5cdFx0ICAgICAgICAgICAgICAgIHJlcXVlc3QucGFyYW1zID0gcm91dGUucGFyYW1zO1xuXHRcdCAgICAgICAgICAgICAgICByZXF1ZXN0LnF1ZXJ5UGFyYW1zID0gbWF0Y2hpbmdSb3V0ZXMucXVlcnlQYXJhbXM7XG5cdFx0ICAgICAgICAgICAgICAgIHJlcXVlc3QuaGFuZGxlciA9IHJvdXRlLmhhbmRsZXI7XG5cdFx0ICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuXHRcdCAgICAgICAgICAgIH0sXG5cdFx0ICAgICAgICAgICAgaGFuZGxlOiBmdW5jdGlvbiAocmVxdWVzdCkge1xuXHRcdCAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWVzdC5oYW5kbGVyKHJlcXVlc3QpO1xuXHRcdCAgICAgICAgICAgIH1cblx0XHQgICAgICAgIH07XG5cdFx0ICAgICAgICB0aGlzLmhhbmRsZXJzLmFkZEhhbmRsZXIoaW50ZXJuYWxIYW5kbGVyKTtcblx0XHQgICAgfTtcblx0XHQgICAgcmV0dXJuIFJvdXRlcjtcblx0XHR9KCkpO1xuXHRcdGV4cG9ydHMuUm91dGVyID0gUm91dGVyO1xuXHRcdHZhciBSZXNwb25zZSA9IChmdW5jdGlvbiAoKSB7XG5cdFx0ICAgIGZ1bmN0aW9uIFJlc3BvbnNlKCkge1xuXHRcdCAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gMjAwO1xuXHRcdCAgICAgICAgdGhpcy5oZWFkZXJzID0ge307XG5cdFx0ICAgICAgICB0aGlzLmJvZHkgPSBudWxsO1xuXHRcdCAgICB9XG5cdFx0ICAgIFJlc3BvbnNlLnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24gKHN0YXR1c0NvZGUsIGJvZHkpIHtcblx0XHQgICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG5cdFx0ICAgICAgICB0aGlzLmJvZHkgPSBib2R5O1xuXHRcdCAgICB9O1xuXHRcdCAgICByZXR1cm4gUmVzcG9uc2U7XG5cdFx0fSgpKTtcblx0XHRleHBvcnRzLlJlc3BvbnNlID0gUmVzcG9uc2U7XG5cdFxuXHRcblx0LyoqKi8gfSxcblx0LyogMSAqL1xuXHQvKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblx0XG5cdFx0dmFyIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOy8qIFdFQlBBQ0sgVkFSIElOSkVDVElPTiAqLyhmdW5jdGlvbihtb2R1bGUpIHsoZnVuY3Rpb24oKSB7XG5cdFx0ICAgIFwidXNlIHN0cmljdFwiO1xuXHRcdCAgICBmdW5jdGlvbiAkJHJvdXRlJHJlY29nbml6ZXIkZHNsJCRUYXJnZXQocGF0aCwgbWF0Y2hlciwgZGVsZWdhdGUpIHtcblx0XHQgICAgICB0aGlzLnBhdGggPSBwYXRoO1xuXHRcdCAgICAgIHRoaXMubWF0Y2hlciA9IG1hdGNoZXI7XG5cdFx0ICAgICAgdGhpcy5kZWxlZ2F0ZSA9IGRlbGVnYXRlO1xuXHRcdCAgICB9XG5cdFx0XG5cdFx0ICAgICQkcm91dGUkcmVjb2duaXplciRkc2wkJFRhcmdldC5wcm90b3R5cGUgPSB7XG5cdFx0ICAgICAgdG86IGZ1bmN0aW9uKHRhcmdldCwgY2FsbGJhY2spIHtcblx0XHQgICAgICAgIHZhciBkZWxlZ2F0ZSA9IHRoaXMuZGVsZWdhdGU7XG5cdFx0XG5cdFx0ICAgICAgICBpZiAoZGVsZWdhdGUgJiYgZGVsZWdhdGUud2lsbEFkZFJvdXRlKSB7XG5cdFx0ICAgICAgICAgIHRhcmdldCA9IGRlbGVnYXRlLndpbGxBZGRSb3V0ZSh0aGlzLm1hdGNoZXIudGFyZ2V0LCB0YXJnZXQpO1xuXHRcdCAgICAgICAgfVxuXHRcdFxuXHRcdCAgICAgICAgdGhpcy5tYXRjaGVyLmFkZCh0aGlzLnBhdGgsIHRhcmdldCk7XG5cdFx0XG5cdFx0ICAgICAgICBpZiAoY2FsbGJhY2spIHtcblx0XHQgICAgICAgICAgaWYgKGNhbGxiYWNrLmxlbmd0aCA9PT0gMCkgeyB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgbXVzdCBoYXZlIGFuIGFyZ3VtZW50IGluIHRoZSBmdW5jdGlvbiBwYXNzZWQgdG8gYHRvYFwiKTsgfVxuXHRcdCAgICAgICAgICB0aGlzLm1hdGNoZXIuYWRkQ2hpbGQodGhpcy5wYXRoLCB0YXJnZXQsIGNhbGxiYWNrLCB0aGlzLmRlbGVnYXRlKTtcblx0XHQgICAgICAgIH1cblx0XHQgICAgICAgIHJldHVybiB0aGlzO1xuXHRcdCAgICAgIH1cblx0XHQgICAgfTtcblx0XHRcblx0XHQgICAgZnVuY3Rpb24gJCRyb3V0ZSRyZWNvZ25pemVyJGRzbCQkTWF0Y2hlcih0YXJnZXQpIHtcblx0XHQgICAgICB0aGlzLnJvdXRlcyA9IHt9O1xuXHRcdCAgICAgIHRoaXMuY2hpbGRyZW4gPSB7fTtcblx0XHQgICAgICB0aGlzLnRhcmdldCA9IHRhcmdldDtcblx0XHQgICAgfVxuXHRcdFxuXHRcdCAgICAkJHJvdXRlJHJlY29nbml6ZXIkZHNsJCRNYXRjaGVyLnByb3RvdHlwZSA9IHtcblx0XHQgICAgICBhZGQ6IGZ1bmN0aW9uKHBhdGgsIGhhbmRsZXIpIHtcblx0XHQgICAgICAgIHRoaXMucm91dGVzW3BhdGhdID0gaGFuZGxlcjtcblx0XHQgICAgICB9LFxuXHRcdFxuXHRcdCAgICAgIGFkZENoaWxkOiBmdW5jdGlvbihwYXRoLCB0YXJnZXQsIGNhbGxiYWNrLCBkZWxlZ2F0ZSkge1xuXHRcdCAgICAgICAgdmFyIG1hdGNoZXIgPSBuZXcgJCRyb3V0ZSRyZWNvZ25pemVyJGRzbCQkTWF0Y2hlcih0YXJnZXQpO1xuXHRcdCAgICAgICAgdGhpcy5jaGlsZHJlbltwYXRoXSA9IG1hdGNoZXI7XG5cdFx0XG5cdFx0ICAgICAgICB2YXIgbWF0Y2ggPSAkJHJvdXRlJHJlY29nbml6ZXIkZHNsJCRnZW5lcmF0ZU1hdGNoKHBhdGgsIG1hdGNoZXIsIGRlbGVnYXRlKTtcblx0XHRcblx0XHQgICAgICAgIGlmIChkZWxlZ2F0ZSAmJiBkZWxlZ2F0ZS5jb250ZXh0RW50ZXJlZCkge1xuXHRcdCAgICAgICAgICBkZWxlZ2F0ZS5jb250ZXh0RW50ZXJlZCh0YXJnZXQsIG1hdGNoKTtcblx0XHQgICAgICAgIH1cblx0XHRcblx0XHQgICAgICAgIGNhbGxiYWNrKG1hdGNoKTtcblx0XHQgICAgICB9XG5cdFx0ICAgIH07XG5cdFx0XG5cdFx0ICAgIGZ1bmN0aW9uICQkcm91dGUkcmVjb2duaXplciRkc2wkJGdlbmVyYXRlTWF0Y2goc3RhcnRpbmdQYXRoLCBtYXRjaGVyLCBkZWxlZ2F0ZSkge1xuXHRcdCAgICAgIHJldHVybiBmdW5jdGlvbihwYXRoLCBuZXN0ZWRDYWxsYmFjaykge1xuXHRcdCAgICAgICAgdmFyIGZ1bGxQYXRoID0gc3RhcnRpbmdQYXRoICsgcGF0aDtcblx0XHRcblx0XHQgICAgICAgIGlmIChuZXN0ZWRDYWxsYmFjaykge1xuXHRcdCAgICAgICAgICBuZXN0ZWRDYWxsYmFjaygkJHJvdXRlJHJlY29nbml6ZXIkZHNsJCRnZW5lcmF0ZU1hdGNoKGZ1bGxQYXRoLCBtYXRjaGVyLCBkZWxlZ2F0ZSkpO1xuXHRcdCAgICAgICAgfSBlbHNlIHtcblx0XHQgICAgICAgICAgcmV0dXJuIG5ldyAkJHJvdXRlJHJlY29nbml6ZXIkZHNsJCRUYXJnZXQoc3RhcnRpbmdQYXRoICsgcGF0aCwgbWF0Y2hlciwgZGVsZWdhdGUpO1xuXHRcdCAgICAgICAgfVxuXHRcdCAgICAgIH07XG5cdFx0ICAgIH1cblx0XHRcblx0XHQgICAgZnVuY3Rpb24gJCRyb3V0ZSRyZWNvZ25pemVyJGRzbCQkYWRkUm91dGUocm91dGVBcnJheSwgcGF0aCwgaGFuZGxlcikge1xuXHRcdCAgICAgIHZhciBsZW4gPSAwO1xuXHRcdCAgICAgIGZvciAodmFyIGk9MDsgaTxyb3V0ZUFycmF5Lmxlbmd0aDsgaSsrKSB7XG5cdFx0ICAgICAgICBsZW4gKz0gcm91dGVBcnJheVtpXS5wYXRoLmxlbmd0aDtcblx0XHQgICAgICB9XG5cdFx0XG5cdFx0ICAgICAgcGF0aCA9IHBhdGguc3Vic3RyKGxlbik7XG5cdFx0ICAgICAgdmFyIHJvdXRlID0geyBwYXRoOiBwYXRoLCBoYW5kbGVyOiBoYW5kbGVyIH07XG5cdFx0ICAgICAgcm91dGVBcnJheS5wdXNoKHJvdXRlKTtcblx0XHQgICAgfVxuXHRcdFxuXHRcdCAgICBmdW5jdGlvbiAkJHJvdXRlJHJlY29nbml6ZXIkZHNsJCRlYWNoUm91dGUoYmFzZVJvdXRlLCBtYXRjaGVyLCBjYWxsYmFjaywgYmluZGluZykge1xuXHRcdCAgICAgIHZhciByb3V0ZXMgPSBtYXRjaGVyLnJvdXRlcztcblx0XHRcblx0XHQgICAgICBmb3IgKHZhciBwYXRoIGluIHJvdXRlcykge1xuXHRcdCAgICAgICAgaWYgKHJvdXRlcy5oYXNPd25Qcm9wZXJ0eShwYXRoKSkge1xuXHRcdCAgICAgICAgICB2YXIgcm91dGVBcnJheSA9IGJhc2VSb3V0ZS5zbGljZSgpO1xuXHRcdCAgICAgICAgICAkJHJvdXRlJHJlY29nbml6ZXIkZHNsJCRhZGRSb3V0ZShyb3V0ZUFycmF5LCBwYXRoLCByb3V0ZXNbcGF0aF0pO1xuXHRcdFxuXHRcdCAgICAgICAgICBpZiAobWF0Y2hlci5jaGlsZHJlbltwYXRoXSkge1xuXHRcdCAgICAgICAgICAgICQkcm91dGUkcmVjb2duaXplciRkc2wkJGVhY2hSb3V0ZShyb3V0ZUFycmF5LCBtYXRjaGVyLmNoaWxkcmVuW3BhdGhdLCBjYWxsYmFjaywgYmluZGluZyk7XG5cdFx0ICAgICAgICAgIH0gZWxzZSB7XG5cdFx0ICAgICAgICAgICAgY2FsbGJhY2suY2FsbChiaW5kaW5nLCByb3V0ZUFycmF5KTtcblx0XHQgICAgICAgICAgfVxuXHRcdCAgICAgICAgfVxuXHRcdCAgICAgIH1cblx0XHQgICAgfVxuXHRcdFxuXHRcdCAgICB2YXIgJCRyb3V0ZSRyZWNvZ25pemVyJGRzbCQkZGVmYXVsdCA9IGZ1bmN0aW9uKGNhbGxiYWNrLCBhZGRSb3V0ZUNhbGxiYWNrKSB7XG5cdFx0ICAgICAgdmFyIG1hdGNoZXIgPSBuZXcgJCRyb3V0ZSRyZWNvZ25pemVyJGRzbCQkTWF0Y2hlcigpO1xuXHRcdFxuXHRcdCAgICAgIGNhbGxiYWNrKCQkcm91dGUkcmVjb2duaXplciRkc2wkJGdlbmVyYXRlTWF0Y2goXCJcIiwgbWF0Y2hlciwgdGhpcy5kZWxlZ2F0ZSkpO1xuXHRcdFxuXHRcdCAgICAgICQkcm91dGUkcmVjb2duaXplciRkc2wkJGVhY2hSb3V0ZShbXSwgbWF0Y2hlciwgZnVuY3Rpb24ocm91dGUpIHtcblx0XHQgICAgICAgIGlmIChhZGRSb3V0ZUNhbGxiYWNrKSB7IGFkZFJvdXRlQ2FsbGJhY2sodGhpcywgcm91dGUpOyB9XG5cdFx0ICAgICAgICBlbHNlIHsgdGhpcy5hZGQocm91dGUpOyB9XG5cdFx0ICAgICAgfSwgdGhpcyk7XG5cdFx0ICAgIH07XG5cdFx0XG5cdFx0ICAgIHZhciAkJHJvdXRlJHJlY29nbml6ZXIkJHNwZWNpYWxzID0gW1xuXHRcdCAgICAgICcvJywgJy4nLCAnKicsICcrJywgJz8nLCAnfCcsXG5cdFx0ICAgICAgJygnLCAnKScsICdbJywgJ10nLCAneycsICd9JywgJ1xcXFwnXG5cdFx0ICAgIF07XG5cdFx0XG5cdFx0ICAgIHZhciAkJHJvdXRlJHJlY29nbml6ZXIkJGVzY2FwZVJlZ2V4ID0gbmV3IFJlZ0V4cCgnKFxcXFwnICsgJCRyb3V0ZSRyZWNvZ25pemVyJCRzcGVjaWFscy5qb2luKCd8XFxcXCcpICsgJyknLCAnZycpO1xuXHRcdFxuXHRcdCAgICBmdW5jdGlvbiAkJHJvdXRlJHJlY29nbml6ZXIkJGlzQXJyYXkodGVzdCkge1xuXHRcdCAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodGVzdCkgPT09IFwiW29iamVjdCBBcnJheV1cIjtcblx0XHQgICAgfVxuXHRcdFxuXHRcdCAgICAvLyBBIFNlZ21lbnQgcmVwcmVzZW50cyBhIHNlZ21lbnQgaW4gdGhlIG9yaWdpbmFsIHJvdXRlIGRlc2NyaXB0aW9uLlxuXHRcdCAgICAvLyBFYWNoIFNlZ21lbnQgdHlwZSBwcm92aWRlcyBhbiBgZWFjaENoYXJgIGFuZCBgcmVnZXhgIG1ldGhvZC5cblx0XHQgICAgLy9cblx0XHQgICAgLy8gVGhlIGBlYWNoQ2hhcmAgbWV0aG9kIGludm9rZXMgdGhlIGNhbGxiYWNrIHdpdGggb25lIG9yIG1vcmUgY2hhcmFjdGVyXG5cdFx0ICAgIC8vIHNwZWNpZmljYXRpb25zLiBBIGNoYXJhY3RlciBzcGVjaWZpY2F0aW9uIGNvbnN1bWVzIG9uZSBvciBtb3JlIGlucHV0XG5cdFx0ICAgIC8vIGNoYXJhY3RlcnMuXG5cdFx0ICAgIC8vXG5cdFx0ICAgIC8vIFRoZSBgcmVnZXhgIG1ldGhvZCByZXR1cm5zIGEgcmVnZXggZnJhZ21lbnQgZm9yIHRoZSBzZWdtZW50LiBJZiB0aGVcblx0XHQgICAgLy8gc2VnbWVudCBpcyBhIGR5bmFtaWMgb2Ygc3RhciBzZWdtZW50LCB0aGUgcmVnZXggZnJhZ21lbnQgYWxzbyBpbmNsdWRlc1xuXHRcdCAgICAvLyBhIGNhcHR1cmUuXG5cdFx0ICAgIC8vXG5cdFx0ICAgIC8vIEEgY2hhcmFjdGVyIHNwZWNpZmljYXRpb24gY29udGFpbnM6XG5cdFx0ICAgIC8vXG5cdFx0ICAgIC8vICogYHZhbGlkQ2hhcnNgOiBhIFN0cmluZyB3aXRoIGEgbGlzdCBvZiBhbGwgdmFsaWQgY2hhcmFjdGVycywgb3Jcblx0XHQgICAgLy8gKiBgaW52YWxpZENoYXJzYDogYSBTdHJpbmcgd2l0aCBhIGxpc3Qgb2YgYWxsIGludmFsaWQgY2hhcmFjdGVyc1xuXHRcdCAgICAvLyAqIGByZXBlYXRgOiB0cnVlIGlmIHRoZSBjaGFyYWN0ZXIgc3BlY2lmaWNhdGlvbiBjYW4gcmVwZWF0XG5cdFx0XG5cdFx0ICAgIGZ1bmN0aW9uICQkcm91dGUkcmVjb2duaXplciQkU3RhdGljU2VnbWVudChzdHJpbmcpIHsgdGhpcy5zdHJpbmcgPSBzdHJpbmc7IH1cblx0XHQgICAgJCRyb3V0ZSRyZWNvZ25pemVyJCRTdGF0aWNTZWdtZW50LnByb3RvdHlwZSA9IHtcblx0XHQgICAgICBlYWNoQ2hhcjogZnVuY3Rpb24oY3VycmVudFN0YXRlKSB7XG5cdFx0ICAgICAgICB2YXIgc3RyaW5nID0gdGhpcy5zdHJpbmcsIGNoO1xuXHRcdFxuXHRcdCAgICAgICAgZm9yICh2YXIgaT0wOyBpPHN0cmluZy5sZW5ndGg7IGkrKykge1xuXHRcdCAgICAgICAgICBjaCA9IHN0cmluZy5jaGFyQXQoaSk7XG5cdFx0ICAgICAgICAgIGN1cnJlbnRTdGF0ZSA9IGN1cnJlbnRTdGF0ZS5wdXQoeyBpbnZhbGlkQ2hhcnM6IHVuZGVmaW5lZCwgcmVwZWF0OiBmYWxzZSwgdmFsaWRDaGFyczogY2ggfSk7XG5cdFx0ICAgICAgICB9XG5cdFx0XG5cdFx0ICAgICAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuXHRcdCAgICAgIH0sXG5cdFx0XG5cdFx0ICAgICAgcmVnZXg6IGZ1bmN0aW9uKCkge1xuXHRcdCAgICAgICAgcmV0dXJuIHRoaXMuc3RyaW5nLnJlcGxhY2UoJCRyb3V0ZSRyZWNvZ25pemVyJCRlc2NhcGVSZWdleCwgJ1xcXFwkMScpO1xuXHRcdCAgICAgIH0sXG5cdFx0XG5cdFx0ICAgICAgZ2VuZXJhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdCAgICAgICAgcmV0dXJuIHRoaXMuc3RyaW5nO1xuXHRcdCAgICAgIH1cblx0XHQgICAgfTtcblx0XHRcblx0XHQgICAgZnVuY3Rpb24gJCRyb3V0ZSRyZWNvZ25pemVyJCREeW5hbWljU2VnbWVudChuYW1lKSB7IHRoaXMubmFtZSA9IG5hbWU7IH1cblx0XHQgICAgJCRyb3V0ZSRyZWNvZ25pemVyJCREeW5hbWljU2VnbWVudC5wcm90b3R5cGUgPSB7XG5cdFx0ICAgICAgZWFjaENoYXI6IGZ1bmN0aW9uKGN1cnJlbnRTdGF0ZSkge1xuXHRcdCAgICAgICAgcmV0dXJuIGN1cnJlbnRTdGF0ZS5wdXQoeyBpbnZhbGlkQ2hhcnM6IFwiL1wiLCByZXBlYXQ6IHRydWUsIHZhbGlkQ2hhcnM6IHVuZGVmaW5lZCB9KTtcblx0XHQgICAgICB9LFxuXHRcdFxuXHRcdCAgICAgIHJlZ2V4OiBmdW5jdGlvbigpIHtcblx0XHQgICAgICAgIHJldHVybiBcIihbXi9dKylcIjtcblx0XHQgICAgICB9LFxuXHRcdFxuXHRcdCAgICAgIGdlbmVyYXRlOiBmdW5jdGlvbihwYXJhbXMpIHtcblx0XHQgICAgICAgIHJldHVybiBwYXJhbXNbdGhpcy5uYW1lXTtcblx0XHQgICAgICB9XG5cdFx0ICAgIH07XG5cdFx0XG5cdFx0ICAgIGZ1bmN0aW9uICQkcm91dGUkcmVjb2duaXplciQkU3RhclNlZ21lbnQobmFtZSkgeyB0aGlzLm5hbWUgPSBuYW1lOyB9XG5cdFx0ICAgICQkcm91dGUkcmVjb2duaXplciQkU3RhclNlZ21lbnQucHJvdG90eXBlID0ge1xuXHRcdCAgICAgIGVhY2hDaGFyOiBmdW5jdGlvbihjdXJyZW50U3RhdGUpIHtcblx0XHQgICAgICAgIHJldHVybiBjdXJyZW50U3RhdGUucHV0KHsgaW52YWxpZENoYXJzOiBcIlwiLCByZXBlYXQ6IHRydWUsIHZhbGlkQ2hhcnM6IHVuZGVmaW5lZCB9KTtcblx0XHQgICAgICB9LFxuXHRcdFxuXHRcdCAgICAgIHJlZ2V4OiBmdW5jdGlvbigpIHtcblx0XHQgICAgICAgIHJldHVybiBcIiguKylcIjtcblx0XHQgICAgICB9LFxuXHRcdFxuXHRcdCAgICAgIGdlbmVyYXRlOiBmdW5jdGlvbihwYXJhbXMpIHtcblx0XHQgICAgICAgIHJldHVybiBwYXJhbXNbdGhpcy5uYW1lXTtcblx0XHQgICAgICB9XG5cdFx0ICAgIH07XG5cdFx0XG5cdFx0ICAgIGZ1bmN0aW9uICQkcm91dGUkcmVjb2duaXplciQkRXBzaWxvblNlZ21lbnQoKSB7fVxuXHRcdCAgICAkJHJvdXRlJHJlY29nbml6ZXIkJEVwc2lsb25TZWdtZW50LnByb3RvdHlwZSA9IHtcblx0XHQgICAgICBlYWNoQ2hhcjogZnVuY3Rpb24oY3VycmVudFN0YXRlKSB7XG5cdFx0ICAgICAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuXHRcdCAgICAgIH0sXG5cdFx0ICAgICAgcmVnZXg6IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJcIjsgfSxcblx0XHQgICAgICBnZW5lcmF0ZTogZnVuY3Rpb24oKSB7IHJldHVybiBcIlwiOyB9XG5cdFx0ICAgIH07XG5cdFx0XG5cdFx0ICAgIGZ1bmN0aW9uICQkcm91dGUkcmVjb2duaXplciQkcGFyc2Uocm91dGUsIG5hbWVzLCBzcGVjaWZpY2l0eSkge1xuXHRcdCAgICAgIC8vIG5vcm1hbGl6ZSByb3V0ZSBhcyBub3Qgc3RhcnRpbmcgd2l0aCBhIFwiL1wiLiBSZWNvZ25pdGlvbiB3aWxsXG5cdFx0ICAgICAgLy8gYWxzbyBub3JtYWxpemUuXG5cdFx0ICAgICAgaWYgKHJvdXRlLmNoYXJBdCgwKSA9PT0gXCIvXCIpIHsgcm91dGUgPSByb3V0ZS5zdWJzdHIoMSk7IH1cblx0XHRcblx0XHQgICAgICB2YXIgc2VnbWVudHMgPSByb3V0ZS5zcGxpdChcIi9cIik7XG5cdFx0ICAgICAgdmFyIHJlc3VsdHMgPSBuZXcgQXJyYXkoc2VnbWVudHMubGVuZ3RoKTtcblx0XHRcblx0XHQgICAgICAvLyBBIHJvdXRlcyBoYXMgc3BlY2lmaWNpdHkgZGV0ZXJtaW5lZCBieSB0aGUgb3JkZXIgdGhhdCBpdHMgZGlmZmVyZW50IHNlZ21lbnRzXG5cdFx0ICAgICAgLy8gYXBwZWFyIGluLiBUaGlzIHN5c3RlbSBtaXJyb3JzIGhvdyB0aGUgbWFnbml0dWRlIG9mIG51bWJlcnMgd3JpdHRlbiBhcyBzdHJpbmdzXG5cdFx0ICAgICAgLy8gd29ya3MuXG5cdFx0ICAgICAgLy8gQ29uc2lkZXIgYSBudW1iZXIgd3JpdHRlbiBhczogXCJhYmNcIi4gQW4gZXhhbXBsZSB3b3VsZCBiZSBcIjIwMFwiLiBBbnkgb3RoZXIgbnVtYmVyIHdyaXR0ZW5cblx0XHQgICAgICAvLyBcInh5elwiIHdpbGwgYmUgc21hbGxlciB0aGFuIFwiYWJjXCIgc28gbG9uZyBhcyBgYSA+IHpgLiBGb3IgaW5zdGFuY2UsIFwiMTk5XCIgaXMgc21hbGxlclxuXHRcdCAgICAgIC8vIHRoZW4gXCIyMDBcIiwgZXZlbiB0aG91Z2ggXCJ5XCIgYW5kIFwielwiICh3aGljaCBhcmUgYm90aCA5KSBhcmUgbGFyZ2VyIHRoYW4gXCIwXCIgKHRoZSB2YWx1ZVxuXHRcdCAgICAgIC8vIG9mIChgYmAgYW5kIGBjYCkuIFRoaXMgaXMgYmVjYXVzZSB0aGUgbGVhZGluZyBzeW1ib2wsIFwiMlwiLCBpcyBsYXJnZXIgdGhhbiB0aGUgb3RoZXJcblx0XHQgICAgICAvLyBsZWFkaW5nIHN5bWJvbCwgXCIxXCIuXG5cdFx0ICAgICAgLy8gVGhlIHJ1bGUgaXMgdGhhdCBzeW1ib2xzIHRvIHRoZSBsZWZ0IGNhcnJ5IG1vcmUgd2VpZ2h0IHRoYW4gc3ltYm9scyB0byB0aGUgcmlnaHRcblx0XHQgICAgICAvLyB3aGVuIGEgbnVtYmVyIGlzIHdyaXR0ZW4gb3V0IGFzIGEgc3RyaW5nLiBJbiB0aGUgYWJvdmUgc3RyaW5ncywgdGhlIGxlYWRpbmcgZGlnaXRcblx0XHQgICAgICAvLyByZXByZXNlbnRzIGhvdyBtYW55IDEwMCdzIGFyZSBpbiB0aGUgbnVtYmVyLCBhbmQgaXQgY2FycmllcyBtb3JlIHdlaWdodCB0aGFuIHRoZSBtaWRkbGVcblx0XHQgICAgICAvLyBudW1iZXIgd2hpY2ggcmVwcmVzZW50cyBob3cgbWFueSAxMCdzIGFyZSBpbiB0aGUgbnVtYmVyLlxuXHRcdCAgICAgIC8vIFRoaXMgc3lzdGVtIG9mIG51bWJlciBtYWduaXR1ZGUgd29ya3Mgd2VsbCBmb3Igcm91dGUgc3BlY2lmaWNpdHksIHRvby4gQSByb3V0ZSB3cml0dGVuIGFzXG5cdFx0ICAgICAgLy8gYGEvYi9jYCB3aWxsIGJlIG1vcmUgc3BlY2lmaWMgdGhhbiBgeC95L3pgIGFzIGxvbmcgYXMgYGFgIGlzIG1vcmUgc3BlY2lmaWMgdGhhblxuXHRcdCAgICAgIC8vIGB4YCwgaXJyZXNwZWN0aXZlIG9mIHRoZSBvdGhlciBwYXJ0cy5cblx0XHQgICAgICAvLyBCZWNhdXNlIG9mIHRoaXMgc2ltaWxhcml0eSwgd2UgYXNzaWduIGVhY2ggdHlwZSBvZiBzZWdtZW50IGEgbnVtYmVyIHZhbHVlIHdyaXR0ZW4gYXMgYVxuXHRcdCAgICAgIC8vIHN0cmluZy4gV2UgY2FuIGZpbmQgdGhlIHNwZWNpZmljaXR5IG9mIGNvbXBvdW5kIHJvdXRlcyBieSBjb25jYXRlbmF0aW5nIHRoZXNlIHN0cmluZ3Ncblx0XHQgICAgICAvLyB0b2dldGhlciwgZnJvbSBsZWZ0IHRvIHJpZ2h0LiBBZnRlciB3ZSBoYXZlIGxvb3BlZCB0aHJvdWdoIGFsbCBvZiB0aGUgc2VnbWVudHMsXG5cdFx0ICAgICAgLy8gd2UgY29udmVydCB0aGUgc3RyaW5nIHRvIGEgbnVtYmVyLlxuXHRcdCAgICAgIHNwZWNpZmljaXR5LnZhbCA9ICcnO1xuXHRcdFxuXHRcdCAgICAgIGZvciAodmFyIGk9MDsgaTxzZWdtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdCAgICAgICAgdmFyIHNlZ21lbnQgPSBzZWdtZW50c1tpXSwgbWF0Y2g7XG5cdFx0XG5cdFx0ICAgICAgICBpZiAobWF0Y2ggPSBzZWdtZW50Lm1hdGNoKC9eOihbXlxcL10rKSQvKSkge1xuXHRcdCAgICAgICAgICByZXN1bHRzW2ldID0gbmV3ICQkcm91dGUkcmVjb2duaXplciQkRHluYW1pY1NlZ21lbnQobWF0Y2hbMV0pO1xuXHRcdCAgICAgICAgICBuYW1lcy5wdXNoKG1hdGNoWzFdKTtcblx0XHQgICAgICAgICAgc3BlY2lmaWNpdHkudmFsICs9ICczJztcblx0XHQgICAgICAgIH0gZWxzZSBpZiAobWF0Y2ggPSBzZWdtZW50Lm1hdGNoKC9eXFwqKFteXFwvXSspJC8pKSB7XG5cdFx0ICAgICAgICAgIHJlc3VsdHNbaV0gPSBuZXcgJCRyb3V0ZSRyZWNvZ25pemVyJCRTdGFyU2VnbWVudChtYXRjaFsxXSk7XG5cdFx0ICAgICAgICAgIHNwZWNpZmljaXR5LnZhbCArPSAnMSc7XG5cdFx0ICAgICAgICAgIG5hbWVzLnB1c2gobWF0Y2hbMV0pO1xuXHRcdCAgICAgICAgfSBlbHNlIGlmKHNlZ21lbnQgPT09IFwiXCIpIHtcblx0XHQgICAgICAgICAgcmVzdWx0c1tpXSA9IG5ldyAkJHJvdXRlJHJlY29nbml6ZXIkJEVwc2lsb25TZWdtZW50KCk7XG5cdFx0ICAgICAgICAgIHNwZWNpZmljaXR5LnZhbCArPSAnMic7XG5cdFx0ICAgICAgICB9IGVsc2Uge1xuXHRcdCAgICAgICAgICByZXN1bHRzW2ldID0gbmV3ICQkcm91dGUkcmVjb2duaXplciQkU3RhdGljU2VnbWVudChzZWdtZW50KTtcblx0XHQgICAgICAgICAgc3BlY2lmaWNpdHkudmFsICs9ICc0Jztcblx0XHQgICAgICAgIH1cblx0XHQgICAgICB9XG5cdFx0XG5cdFx0ICAgICAgc3BlY2lmaWNpdHkudmFsID0gK3NwZWNpZmljaXR5LnZhbDtcblx0XHRcblx0XHQgICAgICByZXR1cm4gcmVzdWx0cztcblx0XHQgICAgfVxuXHRcdFxuXHRcdCAgICAvLyBBIFN0YXRlIGhhcyBhIGNoYXJhY3RlciBzcGVjaWZpY2F0aW9uIGFuZCAoYGNoYXJTcGVjYCkgYW5kIGEgbGlzdCBvZiBwb3NzaWJsZVxuXHRcdCAgICAvLyBzdWJzZXF1ZW50IHN0YXRlcyAoYG5leHRTdGF0ZXNgKS5cblx0XHQgICAgLy9cblx0XHQgICAgLy8gSWYgYSBTdGF0ZSBpcyBhbiBhY2NlcHRpbmcgc3RhdGUsIGl0IHdpbGwgYWxzbyBoYXZlIHNldmVyYWwgYWRkaXRpb25hbFxuXHRcdCAgICAvLyBwcm9wZXJ0aWVzOlxuXHRcdCAgICAvL1xuXHRcdCAgICAvLyAqIGByZWdleGA6IEEgcmVndWxhciBleHByZXNzaW9uIHRoYXQgaXMgdXNlZCB0byBleHRyYWN0IHBhcmFtZXRlcnMgZnJvbSBwYXRoc1xuXHRcdCAgICAvLyAgIHRoYXQgcmVhY2hlZCB0aGlzIGFjY2VwdGluZyBzdGF0ZS5cblx0XHQgICAgLy8gKiBgaGFuZGxlcnNgOiBJbmZvcm1hdGlvbiBvbiBob3cgdG8gY29udmVydCB0aGUgbGlzdCBvZiBjYXB0dXJlcyBpbnRvIGNhbGxzXG5cdFx0ICAgIC8vICAgdG8gcmVnaXN0ZXJlZCBoYW5kbGVycyB3aXRoIHRoZSBzcGVjaWZpZWQgcGFyYW1ldGVyc1xuXHRcdCAgICAvLyAqIGB0eXBlc2A6IEhvdyBtYW55IHN0YXRpYywgZHluYW1pYyBvciBzdGFyIHNlZ21lbnRzIGluIHRoaXMgcm91dGUuIFVzZWQgdG9cblx0XHQgICAgLy8gICBkZWNpZGUgd2hpY2ggcm91dGUgdG8gdXNlIGlmIG11bHRpcGxlIHJlZ2lzdGVyZWQgcm91dGVzIG1hdGNoIGEgcGF0aC5cblx0XHQgICAgLy9cblx0XHQgICAgLy8gQ3VycmVudGx5LCBTdGF0ZSBpcyBpbXBsZW1lbnRlZCBuYWl2ZWx5IGJ5IGxvb3Bpbmcgb3ZlciBgbmV4dFN0YXRlc2AgYW5kXG5cdFx0ICAgIC8vIGNvbXBhcmluZyBhIGNoYXJhY3RlciBzcGVjaWZpY2F0aW9uIGFnYWluc3QgYSBjaGFyYWN0ZXIuIEEgbW9yZSBlZmZpY2llbnRcblx0XHQgICAgLy8gaW1wbGVtZW50YXRpb24gd291bGQgdXNlIGEgaGFzaCBvZiBrZXlzIHBvaW50aW5nIGF0IG9uZSBvciBtb3JlIG5leHQgc3RhdGVzLlxuXHRcdFxuXHRcdCAgICBmdW5jdGlvbiAkJHJvdXRlJHJlY29nbml6ZXIkJFN0YXRlKGNoYXJTcGVjKSB7XG5cdFx0ICAgICAgdGhpcy5jaGFyU3BlYyA9IGNoYXJTcGVjO1xuXHRcdCAgICAgIHRoaXMubmV4dFN0YXRlcyA9IFtdO1xuXHRcdCAgICAgIHRoaXMuY2hhclNwZWNzID0ge307XG5cdFx0ICAgICAgdGhpcy5yZWdleCA9IHVuZGVmaW5lZDtcblx0XHQgICAgICB0aGlzLmhhbmRsZXJzID0gdW5kZWZpbmVkO1xuXHRcdCAgICAgIHRoaXMuc3BlY2lmaWNpdHkgPSB1bmRlZmluZWQ7XG5cdFx0ICAgIH1cblx0XHRcblx0XHQgICAgJCRyb3V0ZSRyZWNvZ25pemVyJCRTdGF0ZS5wcm90b3R5cGUgPSB7XG5cdFx0ICAgICAgZ2V0OiBmdW5jdGlvbihjaGFyU3BlYykge1xuXHRcdCAgICAgICAgaWYgKHRoaXMuY2hhclNwZWNzW2NoYXJTcGVjLnZhbGlkQ2hhcnNdKSB7XG5cdFx0ICAgICAgICAgIHJldHVybiB0aGlzLmNoYXJTcGVjc1tjaGFyU3BlYy52YWxpZENoYXJzXTtcblx0XHQgICAgICAgIH1cblx0XHRcblx0XHQgICAgICAgIHZhciBuZXh0U3RhdGVzID0gdGhpcy5uZXh0U3RhdGVzO1xuXHRcdFxuXHRcdCAgICAgICAgZm9yICh2YXIgaT0wOyBpPG5leHRTdGF0ZXMubGVuZ3RoOyBpKyspIHtcblx0XHQgICAgICAgICAgdmFyIGNoaWxkID0gbmV4dFN0YXRlc1tpXTtcblx0XHRcblx0XHQgICAgICAgICAgdmFyIGlzRXF1YWwgPSBjaGlsZC5jaGFyU3BlYy52YWxpZENoYXJzID09PSBjaGFyU3BlYy52YWxpZENoYXJzO1xuXHRcdCAgICAgICAgICBpc0VxdWFsID0gaXNFcXVhbCAmJiBjaGlsZC5jaGFyU3BlYy5pbnZhbGlkQ2hhcnMgPT09IGNoYXJTcGVjLmludmFsaWRDaGFycztcblx0XHRcblx0XHQgICAgICAgICAgaWYgKGlzRXF1YWwpIHtcblx0XHQgICAgICAgICAgICB0aGlzLmNoYXJTcGVjc1tjaGFyU3BlYy52YWxpZENoYXJzXSA9IGNoaWxkO1xuXHRcdCAgICAgICAgICAgIHJldHVybiBjaGlsZDtcblx0XHQgICAgICAgICAgfVxuXHRcdCAgICAgICAgfVxuXHRcdCAgICAgIH0sXG5cdFx0XG5cdFx0ICAgICAgcHV0OiBmdW5jdGlvbihjaGFyU3BlYykge1xuXHRcdCAgICAgICAgdmFyIHN0YXRlO1xuXHRcdFxuXHRcdCAgICAgICAgLy8gSWYgdGhlIGNoYXJhY3RlciBzcGVjaWZpY2F0aW9uIGFscmVhZHkgZXhpc3RzIGluIGEgY2hpbGQgb2YgdGhlIGN1cnJlbnRcblx0XHQgICAgICAgIC8vIHN0YXRlLCBqdXN0IHJldHVybiB0aGF0IHN0YXRlLlxuXHRcdCAgICAgICAgaWYgKHN0YXRlID0gdGhpcy5nZXQoY2hhclNwZWMpKSB7IHJldHVybiBzdGF0ZTsgfVxuXHRcdFxuXHRcdCAgICAgICAgLy8gTWFrZSBhIG5ldyBzdGF0ZSBmb3IgdGhlIGNoYXJhY3RlciBzcGVjXG5cdFx0ICAgICAgICBzdGF0ZSA9IG5ldyAkJHJvdXRlJHJlY29nbml6ZXIkJFN0YXRlKGNoYXJTcGVjKTtcblx0XHRcblx0XHQgICAgICAgIC8vIEluc2VydCB0aGUgbmV3IHN0YXRlIGFzIGEgY2hpbGQgb2YgdGhlIGN1cnJlbnQgc3RhdGVcblx0XHQgICAgICAgIHRoaXMubmV4dFN0YXRlcy5wdXNoKHN0YXRlKTtcblx0XHRcblx0XHQgICAgICAgIC8vIElmIHRoaXMgY2hhcmFjdGVyIHNwZWNpZmljYXRpb24gcmVwZWF0cywgaW5zZXJ0IHRoZSBuZXcgc3RhdGUgYXMgYSBjaGlsZFxuXHRcdCAgICAgICAgLy8gb2YgaXRzZWxmLiBOb3RlIHRoYXQgdGhpcyB3aWxsIG5vdCB0cmlnZ2VyIGFuIGluZmluaXRlIGxvb3AgYmVjYXVzZSBlYWNoXG5cdFx0ICAgICAgICAvLyB0cmFuc2l0aW9uIGR1cmluZyByZWNvZ25pdGlvbiBjb25zdW1lcyBhIGNoYXJhY3Rlci5cblx0XHQgICAgICAgIGlmIChjaGFyU3BlYy5yZXBlYXQpIHtcblx0XHQgICAgICAgICAgc3RhdGUubmV4dFN0YXRlcy5wdXNoKHN0YXRlKTtcblx0XHQgICAgICAgIH1cblx0XHRcblx0XHQgICAgICAgIC8vIFJldHVybiB0aGUgbmV3IHN0YXRlXG5cdFx0ICAgICAgICByZXR1cm4gc3RhdGU7XG5cdFx0ICAgICAgfSxcblx0XHRcblx0XHQgICAgICAvLyBGaW5kIGEgbGlzdCBvZiBjaGlsZCBzdGF0ZXMgbWF0Y2hpbmcgdGhlIG5leHQgY2hhcmFjdGVyXG5cdFx0ICAgICAgbWF0Y2g6IGZ1bmN0aW9uKGNoKSB7XG5cdFx0ICAgICAgICB2YXIgbmV4dFN0YXRlcyA9IHRoaXMubmV4dFN0YXRlcyxcblx0XHQgICAgICAgICAgICBjaGlsZCwgY2hhclNwZWMsIGNoYXJzO1xuXHRcdFxuXHRcdCAgICAgICAgdmFyIHJldHVybmVkID0gW107XG5cdFx0XG5cdFx0ICAgICAgICBmb3IgKHZhciBpPTA7IGk8bmV4dFN0YXRlcy5sZW5ndGg7IGkrKykge1xuXHRcdCAgICAgICAgICBjaGlsZCA9IG5leHRTdGF0ZXNbaV07XG5cdFx0XG5cdFx0ICAgICAgICAgIGNoYXJTcGVjID0gY2hpbGQuY2hhclNwZWM7XG5cdFx0XG5cdFx0ICAgICAgICAgIGlmICh0eXBlb2YgKGNoYXJzID0gY2hhclNwZWMudmFsaWRDaGFycykgIT09ICd1bmRlZmluZWQnKSB7XG5cdFx0ICAgICAgICAgICAgaWYgKGNoYXJzLmluZGV4T2YoY2gpICE9PSAtMSkgeyByZXR1cm5lZC5wdXNoKGNoaWxkKTsgfVxuXHRcdCAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiAoY2hhcnMgPSBjaGFyU3BlYy5pbnZhbGlkQ2hhcnMpICE9PSAndW5kZWZpbmVkJykge1xuXHRcdCAgICAgICAgICAgIGlmIChjaGFycy5pbmRleE9mKGNoKSA9PT0gLTEpIHsgcmV0dXJuZWQucHVzaChjaGlsZCk7IH1cblx0XHQgICAgICAgICAgfVxuXHRcdCAgICAgICAgfVxuXHRcdFxuXHRcdCAgICAgICAgcmV0dXJuIHJldHVybmVkO1xuXHRcdCAgICAgIH1cblx0XHQgICAgfTtcblx0XHRcblx0XHQgICAgLy8gU29ydCB0aGUgcm91dGVzIGJ5IHNwZWNpZmljaXR5XG5cdFx0ICAgIGZ1bmN0aW9uICQkcm91dGUkcmVjb2duaXplciQkc29ydFNvbHV0aW9ucyhzdGF0ZXMpIHtcblx0XHQgICAgICByZXR1cm4gc3RhdGVzLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuXHRcdCAgICAgICAgcmV0dXJuIGIuc3BlY2lmaWNpdHkudmFsIC0gYS5zcGVjaWZpY2l0eS52YWw7XG5cdFx0ICAgICAgfSk7XG5cdFx0ICAgIH1cblx0XHRcblx0XHQgICAgZnVuY3Rpb24gJCRyb3V0ZSRyZWNvZ25pemVyJCRyZWNvZ25pemVDaGFyKHN0YXRlcywgY2gpIHtcblx0XHQgICAgICB2YXIgbmV4dFN0YXRlcyA9IFtdO1xuXHRcdFxuXHRcdCAgICAgIGZvciAodmFyIGk9MCwgbD1zdGF0ZXMubGVuZ3RoOyBpPGw7IGkrKykge1xuXHRcdCAgICAgICAgdmFyIHN0YXRlID0gc3RhdGVzW2ldO1xuXHRcdFxuXHRcdCAgICAgICAgbmV4dFN0YXRlcyA9IG5leHRTdGF0ZXMuY29uY2F0KHN0YXRlLm1hdGNoKGNoKSk7XG5cdFx0ICAgICAgfVxuXHRcdFxuXHRcdCAgICAgIHJldHVybiBuZXh0U3RhdGVzO1xuXHRcdCAgICB9XG5cdFx0XG5cdFx0ICAgIHZhciAkJHJvdXRlJHJlY29nbml6ZXIkJG9DcmVhdGUgPSBPYmplY3QuY3JlYXRlIHx8IGZ1bmN0aW9uKHByb3RvKSB7XG5cdFx0ICAgICAgZnVuY3Rpb24gRigpIHt9XG5cdFx0ICAgICAgRi5wcm90b3R5cGUgPSBwcm90bztcblx0XHQgICAgICByZXR1cm4gbmV3IEYoKTtcblx0XHQgICAgfTtcblx0XHRcblx0XHQgICAgZnVuY3Rpb24gJCRyb3V0ZSRyZWNvZ25pemVyJCRSZWNvZ25pemVSZXN1bHRzKHF1ZXJ5UGFyYW1zKSB7XG5cdFx0ICAgICAgdGhpcy5xdWVyeVBhcmFtcyA9IHF1ZXJ5UGFyYW1zIHx8IHt9O1xuXHRcdCAgICB9XG5cdFx0ICAgICQkcm91dGUkcmVjb2duaXplciQkUmVjb2duaXplUmVzdWx0cy5wcm90b3R5cGUgPSAkJHJvdXRlJHJlY29nbml6ZXIkJG9DcmVhdGUoe1xuXHRcdCAgICAgIHNwbGljZTogQXJyYXkucHJvdG90eXBlLnNwbGljZSxcblx0XHQgICAgICBzbGljZTogIEFycmF5LnByb3RvdHlwZS5zbGljZSxcblx0XHQgICAgICBwdXNoOiAgIEFycmF5LnByb3RvdHlwZS5wdXNoLFxuXHRcdCAgICAgIGxlbmd0aDogMCxcblx0XHQgICAgICBxdWVyeVBhcmFtczogbnVsbFxuXHRcdCAgICB9KTtcblx0XHRcblx0XHQgICAgZnVuY3Rpb24gJCRyb3V0ZSRyZWNvZ25pemVyJCRmaW5kSGFuZGxlcihzdGF0ZSwgcGF0aCwgcXVlcnlQYXJhbXMpIHtcblx0XHQgICAgICB2YXIgaGFuZGxlcnMgPSBzdGF0ZS5oYW5kbGVycywgcmVnZXggPSBzdGF0ZS5yZWdleDtcblx0XHQgICAgICB2YXIgY2FwdHVyZXMgPSBwYXRoLm1hdGNoKHJlZ2V4KSwgY3VycmVudENhcHR1cmUgPSAxO1xuXHRcdCAgICAgIHZhciByZXN1bHQgPSBuZXcgJCRyb3V0ZSRyZWNvZ25pemVyJCRSZWNvZ25pemVSZXN1bHRzKHF1ZXJ5UGFyYW1zKTtcblx0XHRcblx0XHQgICAgICByZXN1bHQubGVuZ3RoID0gaGFuZGxlcnMubGVuZ3RoO1xuXHRcdFxuXHRcdCAgICAgIGZvciAodmFyIGk9MDsgaTxoYW5kbGVycy5sZW5ndGg7IGkrKykge1xuXHRcdCAgICAgICAgdmFyIGhhbmRsZXIgPSBoYW5kbGVyc1tpXSwgbmFtZXMgPSBoYW5kbGVyLm5hbWVzLCBwYXJhbXMgPSB7fTtcblx0XHRcblx0XHQgICAgICAgIGZvciAodmFyIGo9MDsgajxuYW1lcy5sZW5ndGg7IGorKykge1xuXHRcdCAgICAgICAgICBwYXJhbXNbbmFtZXNbal1dID0gY2FwdHVyZXNbY3VycmVudENhcHR1cmUrK107XG5cdFx0ICAgICAgICB9XG5cdFx0XG5cdFx0ICAgICAgICByZXN1bHRbaV0gPSB7IGhhbmRsZXI6IGhhbmRsZXIuaGFuZGxlciwgcGFyYW1zOiBwYXJhbXMsIGlzRHluYW1pYzogISFuYW1lcy5sZW5ndGggfTtcblx0XHQgICAgICB9XG5cdFx0XG5cdFx0ICAgICAgcmV0dXJuIHJlc3VsdDtcblx0XHQgICAgfVxuXHRcdFxuXHRcdCAgICBmdW5jdGlvbiAkJHJvdXRlJHJlY29nbml6ZXIkJGRlY29kZVF1ZXJ5UGFyYW1QYXJ0KHBhcnQpIHtcblx0XHQgICAgICAvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9odG1sNDAxL2ludGVyYWN0L2Zvcm1zLmh0bWwjaC0xNy4xMy40LjFcblx0XHQgICAgICBwYXJ0ID0gcGFydC5yZXBsYWNlKC9cXCsvZ20sICclMjAnKTtcblx0XHQgICAgICB2YXIgcmVzdWx0O1xuXHRcdCAgICAgIHRyeSB7XG5cdFx0ICAgICAgICByZXN1bHQgPSBkZWNvZGVVUklDb21wb25lbnQocGFydCk7XG5cdFx0ICAgICAgfSBjYXRjaChlcnJvcikge3Jlc3VsdCA9ICcnO31cblx0XHQgICAgICByZXR1cm4gcmVzdWx0O1xuXHRcdCAgICB9XG5cdFx0XG5cdFx0ICAgIC8vIFRoZSBtYWluIGludGVyZmFjZVxuXHRcdFxuXHRcdCAgICB2YXIgJCRyb3V0ZSRyZWNvZ25pemVyJCRSb3V0ZVJlY29nbml6ZXIgPSBmdW5jdGlvbigpIHtcblx0XHQgICAgICB0aGlzLnJvb3RTdGF0ZSA9IG5ldyAkJHJvdXRlJHJlY29nbml6ZXIkJFN0YXRlKCk7XG5cdFx0ICAgICAgdGhpcy5uYW1lcyA9IHt9O1xuXHRcdCAgICB9O1xuXHRcdFxuXHRcdFxuXHRcdCAgICAkJHJvdXRlJHJlY29nbml6ZXIkJFJvdXRlUmVjb2duaXplci5wcm90b3R5cGUgPSB7XG5cdFx0ICAgICAgYWRkOiBmdW5jdGlvbihyb3V0ZXMsIG9wdGlvbnMpIHtcblx0XHQgICAgICAgIHZhciBjdXJyZW50U3RhdGUgPSB0aGlzLnJvb3RTdGF0ZSwgcmVnZXggPSBcIl5cIixcblx0XHQgICAgICAgICAgICBzcGVjaWZpY2l0eSA9IHt9LFxuXHRcdCAgICAgICAgICAgIGhhbmRsZXJzID0gbmV3IEFycmF5KHJvdXRlcy5sZW5ndGgpLCBhbGxTZWdtZW50cyA9IFtdLCBuYW1lO1xuXHRcdFxuXHRcdCAgICAgICAgdmFyIGlzRW1wdHkgPSB0cnVlO1xuXHRcdFxuXHRcdCAgICAgICAgZm9yICh2YXIgaT0wOyBpPHJvdXRlcy5sZW5ndGg7IGkrKykge1xuXHRcdCAgICAgICAgICB2YXIgcm91dGUgPSByb3V0ZXNbaV0sIG5hbWVzID0gW107XG5cdFx0XG5cdFx0ICAgICAgICAgIHZhciBzZWdtZW50cyA9ICQkcm91dGUkcmVjb2duaXplciQkcGFyc2Uocm91dGUucGF0aCwgbmFtZXMsIHNwZWNpZmljaXR5KTtcblx0XHRcblx0XHQgICAgICAgICAgYWxsU2VnbWVudHMgPSBhbGxTZWdtZW50cy5jb25jYXQoc2VnbWVudHMpO1xuXHRcdFxuXHRcdCAgICAgICAgICBmb3IgKHZhciBqPTA7IGo8c2VnbWVudHMubGVuZ3RoOyBqKyspIHtcblx0XHQgICAgICAgICAgICB2YXIgc2VnbWVudCA9IHNlZ21lbnRzW2pdO1xuXHRcdFxuXHRcdCAgICAgICAgICAgIGlmIChzZWdtZW50IGluc3RhbmNlb2YgJCRyb3V0ZSRyZWNvZ25pemVyJCRFcHNpbG9uU2VnbWVudCkgeyBjb250aW51ZTsgfVxuXHRcdFxuXHRcdCAgICAgICAgICAgIGlzRW1wdHkgPSBmYWxzZTtcblx0XHRcblx0XHQgICAgICAgICAgICAvLyBBZGQgYSBcIi9cIiBmb3IgdGhlIG5ldyBzZWdtZW50XG5cdFx0ICAgICAgICAgICAgY3VycmVudFN0YXRlID0gY3VycmVudFN0YXRlLnB1dCh7IGludmFsaWRDaGFyczogdW5kZWZpbmVkLCByZXBlYXQ6IGZhbHNlLCB2YWxpZENoYXJzOiBcIi9cIiB9KTtcblx0XHQgICAgICAgICAgICByZWdleCArPSBcIi9cIjtcblx0XHRcblx0XHQgICAgICAgICAgICAvLyBBZGQgYSByZXByZXNlbnRhdGlvbiBvZiB0aGUgc2VnbWVudCB0byB0aGUgTkZBIGFuZCByZWdleFxuXHRcdCAgICAgICAgICAgIGN1cnJlbnRTdGF0ZSA9IHNlZ21lbnQuZWFjaENoYXIoY3VycmVudFN0YXRlKTtcblx0XHQgICAgICAgICAgICByZWdleCArPSBzZWdtZW50LnJlZ2V4KCk7XG5cdFx0ICAgICAgICAgIH1cblx0XHQgICAgICAgICAgdmFyIGhhbmRsZXIgPSB7IGhhbmRsZXI6IHJvdXRlLmhhbmRsZXIsIG5hbWVzOiBuYW1lcyB9O1xuXHRcdCAgICAgICAgICBoYW5kbGVyc1tpXSA9IGhhbmRsZXI7XG5cdFx0ICAgICAgICB9XG5cdFx0XG5cdFx0ICAgICAgICBpZiAoaXNFbXB0eSkge1xuXHRcdCAgICAgICAgICBjdXJyZW50U3RhdGUgPSBjdXJyZW50U3RhdGUucHV0KHsgaW52YWxpZENoYXJzOiB1bmRlZmluZWQsIHJlcGVhdDogZmFsc2UsIHZhbGlkQ2hhcnM6IFwiL1wiIH0pO1xuXHRcdCAgICAgICAgICByZWdleCArPSBcIi9cIjtcblx0XHQgICAgICAgIH1cblx0XHRcblx0XHQgICAgICAgIGN1cnJlbnRTdGF0ZS5oYW5kbGVycyA9IGhhbmRsZXJzO1xuXHRcdCAgICAgICAgY3VycmVudFN0YXRlLnJlZ2V4ID0gbmV3IFJlZ0V4cChyZWdleCArIFwiJFwiKTtcblx0XHQgICAgICAgIGN1cnJlbnRTdGF0ZS5zcGVjaWZpY2l0eSA9IHNwZWNpZmljaXR5O1xuXHRcdFxuXHRcdCAgICAgICAgaWYgKG5hbWUgPSBvcHRpb25zICYmIG9wdGlvbnMuYXMpIHtcblx0XHQgICAgICAgICAgdGhpcy5uYW1lc1tuYW1lXSA9IHtcblx0XHQgICAgICAgICAgICBzZWdtZW50czogYWxsU2VnbWVudHMsXG5cdFx0ICAgICAgICAgICAgaGFuZGxlcnM6IGhhbmRsZXJzXG5cdFx0ICAgICAgICAgIH07XG5cdFx0ICAgICAgICB9XG5cdFx0ICAgICAgfSxcblx0XHRcblx0XHQgICAgICBoYW5kbGVyc0ZvcjogZnVuY3Rpb24obmFtZSkge1xuXHRcdCAgICAgICAgdmFyIHJvdXRlID0gdGhpcy5uYW1lc1tuYW1lXTtcblx0XHRcblx0XHQgICAgICAgIGlmICghcm91dGUpIHsgdGhyb3cgbmV3IEVycm9yKFwiVGhlcmUgaXMgbm8gcm91dGUgbmFtZWQgXCIgKyBuYW1lKTsgfVxuXHRcdFxuXHRcdCAgICAgICAgdmFyIHJlc3VsdCA9IG5ldyBBcnJheShyb3V0ZS5oYW5kbGVycy5sZW5ndGgpO1xuXHRcdFxuXHRcdCAgICAgICAgZm9yICh2YXIgaT0wOyBpPHJvdXRlLmhhbmRsZXJzLmxlbmd0aDsgaSsrKSB7XG5cdFx0ICAgICAgICAgIHJlc3VsdFtpXSA9IHJvdXRlLmhhbmRsZXJzW2ldO1xuXHRcdCAgICAgICAgfVxuXHRcdFxuXHRcdCAgICAgICAgcmV0dXJuIHJlc3VsdDtcblx0XHQgICAgICB9LFxuXHRcdFxuXHRcdCAgICAgIGhhc1JvdXRlOiBmdW5jdGlvbihuYW1lKSB7XG5cdFx0ICAgICAgICByZXR1cm4gISF0aGlzLm5hbWVzW25hbWVdO1xuXHRcdCAgICAgIH0sXG5cdFx0XG5cdFx0ICAgICAgZ2VuZXJhdGU6IGZ1bmN0aW9uKG5hbWUsIHBhcmFtcykge1xuXHRcdCAgICAgICAgdmFyIHJvdXRlID0gdGhpcy5uYW1lc1tuYW1lXSwgb3V0cHV0ID0gXCJcIjtcblx0XHQgICAgICAgIGlmICghcm91dGUpIHsgdGhyb3cgbmV3IEVycm9yKFwiVGhlcmUgaXMgbm8gcm91dGUgbmFtZWQgXCIgKyBuYW1lKTsgfVxuXHRcdFxuXHRcdCAgICAgICAgdmFyIHNlZ21lbnRzID0gcm91dGUuc2VnbWVudHM7XG5cdFx0XG5cdFx0ICAgICAgICBmb3IgKHZhciBpPTA7IGk8c2VnbWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHQgICAgICAgICAgdmFyIHNlZ21lbnQgPSBzZWdtZW50c1tpXTtcblx0XHRcblx0XHQgICAgICAgICAgaWYgKHNlZ21lbnQgaW5zdGFuY2VvZiAkJHJvdXRlJHJlY29nbml6ZXIkJEVwc2lsb25TZWdtZW50KSB7IGNvbnRpbnVlOyB9XG5cdFx0XG5cdFx0ICAgICAgICAgIG91dHB1dCArPSBcIi9cIjtcblx0XHQgICAgICAgICAgb3V0cHV0ICs9IHNlZ21lbnQuZ2VuZXJhdGUocGFyYW1zKTtcblx0XHQgICAgICAgIH1cblx0XHRcblx0XHQgICAgICAgIGlmIChvdXRwdXQuY2hhckF0KDApICE9PSAnLycpIHsgb3V0cHV0ID0gJy8nICsgb3V0cHV0OyB9XG5cdFx0XG5cdFx0ICAgICAgICBpZiAocGFyYW1zICYmIHBhcmFtcy5xdWVyeVBhcmFtcykge1xuXHRcdCAgICAgICAgICBvdXRwdXQgKz0gdGhpcy5nZW5lcmF0ZVF1ZXJ5U3RyaW5nKHBhcmFtcy5xdWVyeVBhcmFtcywgcm91dGUuaGFuZGxlcnMpO1xuXHRcdCAgICAgICAgfVxuXHRcdFxuXHRcdCAgICAgICAgcmV0dXJuIG91dHB1dDtcblx0XHQgICAgICB9LFxuXHRcdFxuXHRcdCAgICAgIGdlbmVyYXRlUXVlcnlTdHJpbmc6IGZ1bmN0aW9uKHBhcmFtcywgaGFuZGxlcnMpIHtcblx0XHQgICAgICAgIHZhciBwYWlycyA9IFtdO1xuXHRcdCAgICAgICAgdmFyIGtleXMgPSBbXTtcblx0XHQgICAgICAgIGZvcih2YXIga2V5IGluIHBhcmFtcykge1xuXHRcdCAgICAgICAgICBpZiAocGFyYW1zLmhhc093blByb3BlcnR5KGtleSkpIHtcblx0XHQgICAgICAgICAgICBrZXlzLnB1c2goa2V5KTtcblx0XHQgICAgICAgICAgfVxuXHRcdCAgICAgICAgfVxuXHRcdCAgICAgICAga2V5cy5zb3J0KCk7XG5cdFx0ICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcblx0XHQgICAgICAgICAga2V5ID0ga2V5c1tpXTtcblx0XHQgICAgICAgICAgdmFyIHZhbHVlID0gcGFyYW1zW2tleV07XG5cdFx0ICAgICAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG5cdFx0ICAgICAgICAgICAgY29udGludWU7XG5cdFx0ICAgICAgICAgIH1cblx0XHQgICAgICAgICAgdmFyIHBhaXIgPSBlbmNvZGVVUklDb21wb25lbnQoa2V5KTtcblx0XHQgICAgICAgICAgaWYgKCQkcm91dGUkcmVjb2duaXplciQkaXNBcnJheSh2YWx1ZSkpIHtcblx0XHQgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG5cdFx0ICAgICAgICAgICAgICB2YXIgYXJyYXlQYWlyID0ga2V5ICsgJ1tdJyArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZVtqXSk7XG5cdFx0ICAgICAgICAgICAgICBwYWlycy5wdXNoKGFycmF5UGFpcik7XG5cdFx0ICAgICAgICAgICAgfVxuXHRcdCAgICAgICAgICB9IGVsc2Uge1xuXHRcdCAgICAgICAgICAgIHBhaXIgKz0gXCI9XCIgKyBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpO1xuXHRcdCAgICAgICAgICAgIHBhaXJzLnB1c2gocGFpcik7XG5cdFx0ICAgICAgICAgIH1cblx0XHQgICAgICAgIH1cblx0XHRcblx0XHQgICAgICAgIGlmIChwYWlycy5sZW5ndGggPT09IDApIHsgcmV0dXJuICcnOyB9XG5cdFx0XG5cdFx0ICAgICAgICByZXR1cm4gXCI/XCIgKyBwYWlycy5qb2luKFwiJlwiKTtcblx0XHQgICAgICB9LFxuXHRcdFxuXHRcdCAgICAgIHBhcnNlUXVlcnlTdHJpbmc6IGZ1bmN0aW9uKHF1ZXJ5U3RyaW5nKSB7XG5cdFx0ICAgICAgICB2YXIgcGFpcnMgPSBxdWVyeVN0cmluZy5zcGxpdChcIiZcIiksIHF1ZXJ5UGFyYW1zID0ge307XG5cdFx0ICAgICAgICBmb3IodmFyIGk9MDsgaSA8IHBhaXJzLmxlbmd0aDsgaSsrKSB7XG5cdFx0ICAgICAgICAgIHZhciBwYWlyICAgICAgPSBwYWlyc1tpXS5zcGxpdCgnPScpLFxuXHRcdCAgICAgICAgICAgICAga2V5ICAgICAgID0gJCRyb3V0ZSRyZWNvZ25pemVyJCRkZWNvZGVRdWVyeVBhcmFtUGFydChwYWlyWzBdKSxcblx0XHQgICAgICAgICAgICAgIGtleUxlbmd0aCA9IGtleS5sZW5ndGgsXG5cdFx0ICAgICAgICAgICAgICBpc0FycmF5ID0gZmFsc2UsXG5cdFx0ICAgICAgICAgICAgICB2YWx1ZTtcblx0XHQgICAgICAgICAgaWYgKHBhaXIubGVuZ3RoID09PSAxKSB7XG5cdFx0ICAgICAgICAgICAgdmFsdWUgPSAndHJ1ZSc7XG5cdFx0ICAgICAgICAgIH0gZWxzZSB7XG5cdFx0ICAgICAgICAgICAgLy9IYW5kbGUgYXJyYXlzXG5cdFx0ICAgICAgICAgICAgaWYgKGtleUxlbmd0aCA+IDIgJiYga2V5LnNsaWNlKGtleUxlbmd0aCAtMikgPT09ICdbXScpIHtcblx0XHQgICAgICAgICAgICAgIGlzQXJyYXkgPSB0cnVlO1xuXHRcdCAgICAgICAgICAgICAga2V5ID0ga2V5LnNsaWNlKDAsIGtleUxlbmd0aCAtIDIpO1xuXHRcdCAgICAgICAgICAgICAgaWYoIXF1ZXJ5UGFyYW1zW2tleV0pIHtcblx0XHQgICAgICAgICAgICAgICAgcXVlcnlQYXJhbXNba2V5XSA9IFtdO1xuXHRcdCAgICAgICAgICAgICAgfVxuXHRcdCAgICAgICAgICAgIH1cblx0XHQgICAgICAgICAgICB2YWx1ZSA9IHBhaXJbMV0gPyAkJHJvdXRlJHJlY29nbml6ZXIkJGRlY29kZVF1ZXJ5UGFyYW1QYXJ0KHBhaXJbMV0pIDogJyc7XG5cdFx0ICAgICAgICAgIH1cblx0XHQgICAgICAgICAgaWYgKGlzQXJyYXkpIHtcblx0XHQgICAgICAgICAgICBxdWVyeVBhcmFtc1trZXldLnB1c2godmFsdWUpO1xuXHRcdCAgICAgICAgICB9IGVsc2Uge1xuXHRcdCAgICAgICAgICAgIHF1ZXJ5UGFyYW1zW2tleV0gPSB2YWx1ZTtcblx0XHQgICAgICAgICAgfVxuXHRcdCAgICAgICAgfVxuXHRcdCAgICAgICAgcmV0dXJuIHF1ZXJ5UGFyYW1zO1xuXHRcdCAgICAgIH0sXG5cdFx0XG5cdFx0ICAgICAgcmVjb2duaXplOiBmdW5jdGlvbihwYXRoKSB7XG5cdFx0ICAgICAgICB2YXIgc3RhdGVzID0gWyB0aGlzLnJvb3RTdGF0ZSBdLFxuXHRcdCAgICAgICAgICAgIHBhdGhMZW4sIGksIGwsIHF1ZXJ5U3RhcnQsIHF1ZXJ5UGFyYW1zID0ge30sXG5cdFx0ICAgICAgICAgICAgaXNTbGFzaERyb3BwZWQgPSBmYWxzZTtcblx0XHRcblx0XHQgICAgICAgIHF1ZXJ5U3RhcnQgPSBwYXRoLmluZGV4T2YoJz8nKTtcblx0XHQgICAgICAgIGlmIChxdWVyeVN0YXJ0ICE9PSAtMSkge1xuXHRcdCAgICAgICAgICB2YXIgcXVlcnlTdHJpbmcgPSBwYXRoLnN1YnN0cihxdWVyeVN0YXJ0ICsgMSwgcGF0aC5sZW5ndGgpO1xuXHRcdCAgICAgICAgICBwYXRoID0gcGF0aC5zdWJzdHIoMCwgcXVlcnlTdGFydCk7XG5cdFx0ICAgICAgICAgIHF1ZXJ5UGFyYW1zID0gdGhpcy5wYXJzZVF1ZXJ5U3RyaW5nKHF1ZXJ5U3RyaW5nKTtcblx0XHQgICAgICAgIH1cblx0XHRcblx0XHQgICAgICAgIHBhdGggPSBkZWNvZGVVUkkocGF0aCk7XG5cdFx0XG5cdFx0ICAgICAgICBpZiAocGF0aC5jaGFyQXQoMCkgIT09IFwiL1wiKSB7IHBhdGggPSBcIi9cIiArIHBhdGg7IH1cblx0XHRcblx0XHQgICAgICAgIHBhdGhMZW4gPSBwYXRoLmxlbmd0aDtcblx0XHQgICAgICAgIGlmIChwYXRoTGVuID4gMSAmJiBwYXRoLmNoYXJBdChwYXRoTGVuIC0gMSkgPT09IFwiL1wiKSB7XG5cdFx0ICAgICAgICAgIHBhdGggPSBwYXRoLnN1YnN0cigwLCBwYXRoTGVuIC0gMSk7XG5cdFx0ICAgICAgICAgIGlzU2xhc2hEcm9wcGVkID0gdHJ1ZTtcblx0XHQgICAgICAgIH1cblx0XHRcblx0XHQgICAgICAgIGZvciAoaT0wOyBpPHBhdGgubGVuZ3RoOyBpKyspIHtcblx0XHQgICAgICAgICAgc3RhdGVzID0gJCRyb3V0ZSRyZWNvZ25pemVyJCRyZWNvZ25pemVDaGFyKHN0YXRlcywgcGF0aC5jaGFyQXQoaSkpO1xuXHRcdCAgICAgICAgICBpZiAoIXN0YXRlcy5sZW5ndGgpIHsgYnJlYWs7IH1cblx0XHQgICAgICAgIH1cblx0XHRcblx0XHQgICAgICAgIHZhciBzb2x1dGlvbnMgPSBbXTtcblx0XHQgICAgICAgIGZvciAoaT0wOyBpPHN0YXRlcy5sZW5ndGg7IGkrKykge1xuXHRcdCAgICAgICAgICBpZiAoc3RhdGVzW2ldLmhhbmRsZXJzKSB7IHNvbHV0aW9ucy5wdXNoKHN0YXRlc1tpXSk7IH1cblx0XHQgICAgICAgIH1cblx0XHRcblx0XHQgICAgICAgIHN0YXRlcyA9ICQkcm91dGUkcmVjb2duaXplciQkc29ydFNvbHV0aW9ucyhzb2x1dGlvbnMpO1xuXHRcdFxuXHRcdCAgICAgICAgdmFyIHN0YXRlID0gc29sdXRpb25zWzBdO1xuXHRcdFxuXHRcdCAgICAgICAgaWYgKHN0YXRlICYmIHN0YXRlLmhhbmRsZXJzKSB7XG5cdFx0ICAgICAgICAgIC8vIGlmIGEgdHJhaWxpbmcgc2xhc2ggd2FzIGRyb3BwZWQgYW5kIGEgc3RhciBzZWdtZW50IGlzIHRoZSBsYXN0IHNlZ21lbnRcblx0XHQgICAgICAgICAgLy8gc3BlY2lmaWVkLCBwdXQgdGhlIHRyYWlsaW5nIHNsYXNoIGJhY2tcblx0XHQgICAgICAgICAgaWYgKGlzU2xhc2hEcm9wcGVkICYmIHN0YXRlLnJlZ2V4LnNvdXJjZS5zbGljZSgtNSkgPT09IFwiKC4rKSRcIikge1xuXHRcdCAgICAgICAgICAgIHBhdGggPSBwYXRoICsgXCIvXCI7XG5cdFx0ICAgICAgICAgIH1cblx0XHQgICAgICAgICAgcmV0dXJuICQkcm91dGUkcmVjb2duaXplciQkZmluZEhhbmRsZXIoc3RhdGUsIHBhdGgsIHF1ZXJ5UGFyYW1zKTtcblx0XHQgICAgICAgIH1cblx0XHQgICAgICB9XG5cdFx0ICAgIH07XG5cdFx0XG5cdFx0ICAgICQkcm91dGUkcmVjb2duaXplciQkUm91dGVSZWNvZ25pemVyLnByb3RvdHlwZS5tYXAgPSAkJHJvdXRlJHJlY29nbml6ZXIkZHNsJCRkZWZhdWx0O1xuXHRcdFxuXHRcdCAgICAkJHJvdXRlJHJlY29nbml6ZXIkJFJvdXRlUmVjb2duaXplci5WRVJTSU9OID0gJzAuMS4xMSc7XG5cdFx0XG5cdFx0ICAgIHZhciAkJHJvdXRlJHJlY29nbml6ZXIkJGRlZmF1bHQgPSAkJHJvdXRlJHJlY29nbml6ZXIkJFJvdXRlUmVjb2duaXplcjtcblx0XHRcblx0XHQgICAgLyogZ2xvYmFsIGRlZmluZTp0cnVlIG1vZHVsZTp0cnVlIHdpbmRvdzogdHJ1ZSAqL1xuXHRcdCAgICBpZiAoXCJmdW5jdGlvblwiID09PSAnZnVuY3Rpb24nICYmIF9fd2VicGFja19yZXF1aXJlX18oMylbJ2FtZCddKSB7XG5cdFx0ICAgICAgIShfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gJCRyb3V0ZSRyZWNvZ25pemVyJCRkZWZhdWx0OyB9LmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXywgZXhwb3J0cywgbW9kdWxlKSwgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xuXHRcdCAgICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZVsnZXhwb3J0cyddKSB7XG5cdFx0ICAgICAgbW9kdWxlWydleHBvcnRzJ10gPSAkJHJvdXRlJHJlY29nbml6ZXIkJGRlZmF1bHQ7XG5cdFx0ICAgIH0gZWxzZSBpZiAodHlwZW9mIHRoaXMgIT09ICd1bmRlZmluZWQnKSB7XG5cdFx0ICAgICAgdGhpc1snUm91dGVSZWNvZ25pemVyJ10gPSAkJHJvdXRlJHJlY29nbml6ZXIkJGRlZmF1bHQ7XG5cdFx0ICAgIH1cblx0XHR9KS5jYWxsKHRoaXMpO1xuXHRcdFxuXHRcdC8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlLXJlY29nbml6ZXIuanMubWFwXG5cdFx0LyogV0VCUEFDSyBWQVIgSU5KRUNUSU9OICovfS5jYWxsKGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18oMikobW9kdWxlKSkpXG5cdFxuXHQvKioqLyB9LFxuXHQvKiAyICovXG5cdC8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXHRcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xyXG5cdFx0XHRpZighbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xyXG5cdFx0XHRcdG1vZHVsZS5kZXByZWNhdGUgPSBmdW5jdGlvbigpIHt9O1xyXG5cdFx0XHRcdG1vZHVsZS5wYXRocyA9IFtdO1xyXG5cdFx0XHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxyXG5cdFx0XHRcdG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xyXG5cdFx0XHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBtb2R1bGU7XHJcblx0XHR9XHJcblx0XG5cdFxuXHQvKioqLyB9LFxuXHQvKiAzICovXG5cdC8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXHRcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkgeyB0aHJvdyBuZXcgRXJyb3IoXCJkZWZpbmUgY2Fubm90IGJlIHVzZWQgaW5kaXJlY3RcIik7IH07XHJcblx0XG5cdFxuXHQvKioqLyB9XG5cdC8qKioqKiovIF0pXG5cdH0pO1xuXHQ7XG5cdC8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlci5qcy5tYXBcblxuLyoqKi8gfSlcbi8qKioqKiovIF0pXG59KTtcbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBvd2VyYmkuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/powerbi-client/dist/powerbi.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./src/secure_embed.js":
/*!*****************************!*\
  !*** ./src/secure_embed.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var powerbi_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! powerbi-client */ \"./node_modules/powerbi-client/dist/powerbi.js\");\n/* harmony import */ var powerbi_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(powerbi_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n // const $ = require('jquery');\n\n\n\nvar App =\n/*#__PURE__*/\nfunction () {\n  function App() {\n    var _this = this;\n\n    _classCallCheck(this, App);\n\n    this.embedCSS();\n    this.powerbi = new powerbi_client__WEBPACK_IMPORTED_MODULE_0__[\"service\"].Service(powerbi_client__WEBPACK_IMPORTED_MODULE_0__[\"factories\"].hpmFactory, powerbi_client__WEBPACK_IMPORTED_MODULE_0__[\"factories\"].wpmpFactory, powerbi_client__WEBPACK_IMPORTED_MODULE_0__[\"factories\"].routerFactory);\n    axios__WEBPACK_IMPORTED_MODULE_1___default.a.get('/auth_proxy_routes/embed_data').then(function (response) {\n      _this.data = response.data;\n\n      _this.data.reports.forEach(function (report, i) {\n        Object.defineProperty(_this.data.reports, report.id, {\n          get: function get() {\n            return report;\n          }\n        });\n      });\n\n      _this.data.selected_reports = _this.data.selected_reports.map(function (v) {\n        var found = _this.data.reports[v.id];\n        found.slug = found.id.replace(/-/g, '');\n        found.handle = v.name.toLowerCase().replace(/[^a-z]/g, '-');\n        return _objectSpread({}, found, {}, v);\n      });\n      _this.$ = window.$ || window.jQuery;\n\n      _this.render();\n\n      _this.attachHandlers();\n    })[\"catch\"](function ($e) {\n      console.log($e);\n    });\n  }\n\n  _createClass(App, [{\n    key: \"embedCSS\",\n    value: function embedCSS() {\n      var l = document.createElement('link');\n      l.href = '/auth_proxy_routes/asset/secure_embed.css';\n      l.rel = 'stylesheet';\n      document.head.appendChild(l);\n    }\n  }, {\n    key: \"loadReport\",\n    value: function loadReport(link) {\n      var _this2 = this;\n\n      var $ = this.$;\n      $(link).tab('show');\n      var reports = this.data.reports;\n      var reportData = reports[$(link).data('report')];\n      var $reportContainer = $(link.hash);\n      if ($reportContainer.find('iframe').length) return;\n      $reportContainer.html('<span class=\"loading-indicator\">loading...</span>');\n\n      if ($(link).data('esrireport')) {\n        return this.loadEsriReport(link, $reportContainer);\n      }\n\n      axios__WEBPACK_IMPORTED_MODULE_1___default.a.get('/auth_proxy_routes/report_embed/' + reportData.id).then(function (response) {\n        var embedConfiguration = {\n          type: 'report',\n          id: reportData.id,\n          groupId: _this2.data.group_id,\n          embedUrl: 'https://app.powerbi.com/reportEmbed',\n          tokenType: powerbi_client__WEBPACK_IMPORTED_MODULE_0__[\"models\"].TokenType.Embed,\n          accessToken: response.data.embed_token\n        };\n\n        var report = _this2.powerbi.embed($reportContainer.get(0), embedConfiguration);\n      });\n    }\n  }, {\n    key: \"loadEsriReport\",\n    value: function loadEsriReport(link, $reportContainer) {\n      var $ = this.$;\n      var reportId = $(link).data('esrireport');\n      axios__WEBPACK_IMPORTED_MODULE_1___default.a.get(\"/auth_proxy_routes/esri_embed/\".concat(reportId)).then(function (response) {\n        console.log(response); //! X-man!!!\n        // below does not work! \n        // The map layers are what are protected, not the dashboard itself.\n\n        $reportContainer.html(\"<iframe frameborder=\\\"0\\\" src=\\\"https://arcgis.com/apps/View/index.html?appid=\".concat(reportId, \"&token=\").concat(response.access_token, \"\\\"></iframe>\"));\n      });\n    }\n  }, {\n    key: \"attachHandlers\",\n    value: function attachHandlers() {\n      var _this3 = this;\n\n      var $ = this.$;\n      var $tabpanes = $('#secure_embed_root .tab-pane');\n      var tabs = {\n        initial_tab: false\n      };\n      $tabpanes.toArray().map(function (v) {\n        var $a = $(\"[href=\\\"#\".concat(v.id, \"\\\"]\"));\n\n        if (!$a.length) {\n          throw new Error(\"The tabpane, \".concat(v.id, \", has no corresponding a to go with it.\"));\n          return;\n        }\n\n        $a.tab();\n        if (!tabs.initial_tab) tabs.initial_tab = $a[0];\n        tabs['#' + v.id] = $a[0];\n      });\n      $(window).on('hashchange', function (event) {\n        var hash = window.location.hash;\n\n        if (!(hash in tabs)) {\n          alert('ddd');\n          return;\n        }\n\n        var link = tabs[hash];\n\n        _this3.loadReport(link);\n      });\n      var initial_tab = tabs[window.location.hash] || tabs.initial_tab;\n      this.loadReport(initial_tab);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var $ = this.$;\n      var links = this.data.selected_reports.map(function (v, i) {\n        return \"<li class=\\\"\".concat(i === 0 ? 'active' : '', \"\\\"><a data-XXtoggle=\\\"tab\\\" href=\\\"#\").concat(v.handle, \"\\\" data-report=\\\"\").concat(v.id, \"\\\">\").concat(v.name, \"</a></li>\");\n      });\n      var tabs = \"\\n\\t\\t\\t<ul class=\\\"nav nav-tabs\\\" id=\\\"secure_embed_tabs\\\">\\n\\t\\t\\t\\t\".concat(links.join(''), \"\\n\\t            <li>\\n\\t\\t\\t\\t\\t<a data-esrireport=\\\"be8cf70442fc4ff491247d47708302df\\\" href=\\\"#cluster_detection\\\">\\n\\t\\t\\t\\t\\t\\tCluster Detection & Response (Maps)\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t\");\n      var tab_panel_items = this.data.selected_reports.map(function (v, i) {\n        return \"<div id=\\\"\".concat(v.handle, \"\\\" class=\\\"tab-pane fade \").concat(i === 0 ? 'in active' : '', \"\\\">\").concat(v.handle, \"</div>\");\n      });\n      var tab_panels = \"\\n\\t\\t\\t<div class=\\\"tab-content\\\">\\n\\t\\t\\t\".concat(tab_panel_items.join(''), \"\\n\\t\\t\\t<div id=\\\"cluster_detection\\\" class=\\\"tab-pane fade\\\">\\n\\n\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\"); // \t\t\t\t<iframe src=\"https://icap.maps.arcgis.com/apps/opsdashboard/index.html#/be8cf70442fc4ff491247d47708302df\" frameborder=\"0\" allowFullScreen=\"true\"></iframe>\n\n      var page = \"<div id=\\\"secure_embed_root\\\">\\n\\t\\t\\t<div class=\\\"main-container\\\" id=\\\"main-container\\\">\\n\\t\\t\\t\\t<div class=\\\"page-header\\\">\\n\\t\\t\\t\\t\\t<h1>\\n\\t\\t\\t\\t\\t\\tEHRIS Dashboards\\n\\t\\t\\t\\t\\t</h1>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"tabbable\\\">\\n\\t\\t\\t\\t\\t\".concat(tabs, \" \").concat(tab_panels, \"\\n\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\");\n      $('script[src=\"/auth_proxy_routes/asset/secure_embed.js\"]').before(page);\n    }\n  }]);\n\n  return App;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new App());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/secure_embed.js\n");

/***/ }),

/***/ "./src/secure_embed.scss":
/*!*******************************!*\
  !*** ./src/secure_embed.scss ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2VjdXJlX2VtYmVkLnNjc3M/MjU5MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL3NyYy9zZWN1cmVfZW1iZWQuc2Nzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/secure_embed.scss\n");

/***/ }),

/***/ 0:
/*!***********************************************************!*\
  !*** multi ./src/secure_embed.js ./src/secure_embed.scss ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /home/dev/domains/pbi-auth.dev.also-too.com/auth_proxy/src/assets/src/secure_embed.js */"./src/secure_embed.js");
module.exports = __webpack_require__(/*! /home/dev/domains/pbi-auth.dev.also-too.com/auth_proxy/src/assets/src/secure_embed.scss */"./src/secure_embed.scss");


/***/ })

/******/ });